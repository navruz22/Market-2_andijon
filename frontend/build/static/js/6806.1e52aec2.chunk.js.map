{"version":3,"file":"static/js/6806.1e52aec2.chunk.js","mappings":"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","sources":["Pages/Sale/Routes/SavedSellings.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Table from '../../../Components/Table/Table'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    deleteSavedPayment,\r\n    getSavedPayments,\r\n} from '../Slices/savedSellingsSlice.js'\r\nimport NotFind from '../../../Components/NotFind/NotFind.js'\r\nimport SmallLoader from '../../../Components/Spinner/SmallLoader.js'\r\nimport { universalToast } from '../../../Components/ToastMessages/ToastMessages.js'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal.js'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { universalSort } from './../../../App/globalFunctions';\r\n\r\nconst SavedSellings = () => {\r\n    const { t } = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const { savedPayments, getLoading } = useSelector(\r\n        (state) => state.savedSellings\r\n    )\r\n    const [data, setData] = useState(savedPayments)\r\n    const [storeData, setStoreData] = useState(savedPayments)\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0\r\n    })\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [modalBody, setModalBody] = useState('approve')\r\n    const [printBody, setPrintBody] = useState({})\r\n    const [selectedPayment, setSelectedPayment] = useState(null)\r\n    const headers = [\r\n        { styles: 'w-[10%] text-start', filter: '', title: 'â„–' },\r\n        { styles: 'w-[40%]', filter: 'temporary.clientValue', title: t('Mijoz') },\r\n        { styles: 'w-[10%]', filter: '', title: t('Maxsulotlar') },\r\n        { styles: 'w-[10%] text-center', filter: 'temporary.totalPrice', title: t('Jami') },\r\n        { styles: 'w-[10%] text-center', filter: 'createdAt', title: t('Sana') },\r\n        { styles: 'w-[10%] text-center', filter: 'createdAt', title: t('Vaqti') },\r\n        { styles: 'w-[10%]', filter: '', title: ' ' },\r\n    ]\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setPrintBody({})\r\n        setModalBody('')\r\n    }\r\n    const deletePayment = () => {\r\n        dispatch(deleteSavedPayment({ _id: selectedPayment })).then(({ error }) => {\r\n            if (!error) {\r\n                toggleModal()\r\n                setSelectedPayment(null)\r\n            }\r\n        })\r\n    }\r\n    const handleGetId = (id) => {\r\n        setSelectedPayment(id)\r\n        toggleModal()\r\n        setModalBody('approve')\r\n    }\r\n    const editSavedPayment = () => {\r\n        universalToast(t('Xizmatdan foydalanish hozircha mavjud emas'), 'info')\r\n    }\r\n    const handlePrintModal = (el) => {\r\n        toggleModal()\r\n        setModalBody('savedsalescheck')\r\n        setPrintBody({\r\n            createdAt: el.createdAt,\r\n            products: el.temporary.tableProducts,\r\n            client: { name: el.temporary.clientValue?.label },\r\n            packman: { name: el.temporary.packmanValue.label },\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getSavedPayments())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setData(savedPayments)\r\n        setStoreData(savedPayments)\r\n    }, [savedPayments])\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2\r\n                    })\r\n                    universalSort(\r\n                        savedPayments,\r\n                        setData,\r\n                        filterKey,\r\n                        1,\r\n                        storeData\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0\r\n                    })\r\n                    universalSort(\r\n                        data,\r\n                        setData,\r\n                        filterKey,\r\n                        '',\r\n                        storeData\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1\r\n                    })\r\n                    universalSort(\r\n                        data,\r\n                        setData,\r\n                        filterKey,\r\n                        -1,\r\n                        storeData\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1\r\n            })\r\n            universalSort(\r\n                data,\r\n                setData,\r\n                filterKey,\r\n                -1,\r\n                storeData\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='tableContainerPadding pt-[1.25rem]'>\r\n            <UniversalModal\r\n                isOpen={modalVisible}\r\n                body={modalBody}\r\n                approveFunction={deletePayment}\r\n                printedSelling={printBody}\r\n                toggleModal={toggleModal}\r\n                headerText={t(\r\n                    'Saqlangan to`lovni o`chirishni tasdiqlaysizmi ?'\r\n                )}\r\n                title={t('Agar to`lov o`chsa uni tiklab bo`lmaydi !')}\r\n            />\r\n            {!getLoading ? (\r\n                savedPayments.length > 0 ? (\r\n                    <Table\r\n                        Edit={editSavedPayment}\r\n                        Delete={handleGetId}\r\n                        page='temporarysale'\r\n                        currentPage={3}\r\n                        countPage={3}\r\n                        data={data}\r\n                        headers={headers}\r\n                        currency={currencyType}\r\n                        Print={handlePrintModal}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                    />\r\n                ) : (\r\n                    <NotFind\r\n                        text={t('Saqlanganlar to`lovlar hozircha mavjud emas')}\r\n                    />\r\n                )\r\n            ) : (\r\n                <SmallLoader />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedSellings\r\n"],"names":["t","useTranslation","dispatch","useDispatch","_useSelector","useSelector","state","savedSellings","savedPayments","getLoading","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","storeData","setStoreData","_useState5","filter","sort","count","_useState6","sorItem","setSorItem","currencyType","currency","_useState7","_useState8","modalVisible","setModalVisible","_useState9","_useState10","modalBody","setModalBody","_useState11","_useState12","printBody","setPrintBody","_useState13","_useState14","selectedPayment","setSelectedPayment","headers","styles","title","toggleModal","useEffect","getSavedPayments","_jsxs","className","children","_jsx","UniversalModal","isOpen","body","approveFunction","deleteSavedPayment","_id","then","_ref","error","printedSelling","headerText","SmallLoader","length","Table","Edit","universalToast","Delete","id","page","currentPage","countPage","Print","el","_el$temporary$clientV","createdAt","products","temporary","tableProducts","client","name","clientValue","label","packman","packmanValue","Sort","filterKey","universalSort","sortItem","NotFind","text"],"sourceRoot":""}