{"version":3,"file":"static/js/6987.0ed60db8.chunk.js","mappings":"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","sources":["Components/Buttons/SaleBtns.js","Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/Incomings/Routes/RegisterIncoming.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    IoCardOutline,\r\n    IoCashOutline,\r\n    IoGitCompareOutline,\r\n    IoPricetagOutline,\r\n    IoSwapHorizontalOutline,\r\n    IoWalletOutline,\r\n} from 'react-icons/io5'\r\n\r\nexport const SaleBtn = ({ onClick, text, type, active }) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        card: <IoCardOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        transfer: (\r\n            <IoSwapHorizontalOutline\r\n                className='paymentsstyle'\r\n                size={'1.3125rem'}\r\n            />\r\n        ),\r\n        mixed: (\r\n            <IoGitCompareOutline className='paymentsstyle' size={'1.3125rem'} />\r\n        ),\r\n    }\r\n    return (\r\n        <button\r\n            onClick={() => onClick(type)}\r\n            className={`salestyle ${active ? 'bg-primary-700 text-white-900' : 'bg-[#E9ECEB]'\r\n                }`}\r\n        >\r\n            {icons[type]}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const DiscountBtn = ({ onClick, text }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='discountstyle w-full h-[3.25rem] bg-warning-500 text-white-900 duration-200 shadow-lg'\r\n        >\r\n            <IoPricetagOutline className='discstyle' size={'1.5rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const Payment = ({ onClick, text, onDoubleClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            onDoubleClick={onDoubleClick}\r\n            className={`paymentstyle grow`}\r\n        >\r\n            <IoWalletOutline className='paystyle' size={'1.3125rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n","//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'}\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={'misol: 100 000 000'}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>Chegirma :</div>\r\n            <PaymentSelect onChange={onChange} onSelect={onSelect} value={value} option={option} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\n\r\nfunction PaymentInput({mix, value, onChange, label, onClose, keyInput, placeholder, type}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `misol: 100 000 000`}\r\n                    type={type ||'number'}\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }} />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import { IoPerson } from 'react-icons/io5'\r\nimport { DiscountBtn, Payment, SaleBtn } from '../Buttons/SaleBtns.js'\r\nimport { DiscountInput } from '../Inputs/DiscountInputs.js'\r\nimport { useSelector } from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport { t } from 'i18next'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Checkbox from '../Checkbox/Checkbox.js'\r\nimport { roundUsd } from '../../App/globalFunctions.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    type = 'cash',\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    discount,\r\n    hasDiscount,\r\n    debt,\r\n    allPayment,\r\n    allPaymentUzs,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    exchangerate,\r\n    handleClickPay,\r\n    saleComment,\r\n    changeComment,\r\n    onDoubleClick,\r\n    paymentUsd = \"\",\r\n    debtuzs,\r\n    debtType,\r\n    setDebtType\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    { label: t('Naqd'), key: 'cash', value: cash },\r\n                    { label: t('Plastik'), key: 'card', value: card },\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return location.pathname.includes('/kassa/debts') ?\r\n                    (\r\n                        debtType === 'sum' ?\r\n                            <PaymentInput\r\n                                key={'sale-cash'}\r\n                                value={cash}\r\n                                onChange={onChange}\r\n                                keyInput={type}\r\n                                onClose={onClose}\r\n                                label={t('Naqd')}\r\n                            /> :\r\n                            <PaymentInput\r\n                                key={'sale-usd'}\r\n                                value={paymentUsd}\r\n                                onChange={onChange}\r\n                                keyInput={'usd'}\r\n                                onClose={onClose}\r\n                                label={t('USD')}\r\n                            />\r\n                    )\r\n                    :\r\n                    <>\r\n                        {type !== 'mixed' && <PaymentInput\r\n                            key={'sale-usd'}\r\n                            value={paymentUsd}\r\n                            onChange={onChange}\r\n                            keyInput={'usd'}\r\n                            onClose={onClose}\r\n                            label={t('USD')}\r\n                        />}\r\n                        <PaymentInput\r\n                            key={'sale-cash'}\r\n                            value={cash}\r\n                            onChange={onChange}\r\n                            keyInput={type}\r\n                            onClose={onClose}\r\n                            label={t('Naqd')}\r\n                        />\r\n                    </>\r\n        }\r\n    }\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`absolute transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${active\r\n                ? 'opacity-100 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none'\r\n                }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('Oynani yopish uchun bu yerga bosing !')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${active ? 'translate-x-0' : 'translate-x-full'\r\n                    }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {location.pathname.includes('/kassa/debts') && debtType === 'dollar' ? allPayment + ' USD' : allPaymentUzs + ' UZS'}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') || location.pathname.includes('/qarzdorlar') || location.pathname.includes('/maxsulotlar/qabul/qabulqilish') || location.pathname.includes('/maxsulotlar/qabul/qabullar')) && defineLabel()}\r\n                        <PaymentInput\r\n                            value={saleComment}\r\n                            key={'sale-card'}\r\n                            keyInput={type}\r\n                            onChange={changeComment}\r\n                            onClose={onClose}\r\n                            label={t('Izoh')}\r\n                            placeholder={t('misol: qarzga olindi')}\r\n                            type={'text'}\r\n                        />\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') ?\r\n                            (\r\n                                debtType === 'sum' ?\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {debtuzs} UZS\r\n                                        </h3>\r\n                                    </li>\r\n                                    :\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {roundUsd(debt)} USD <br /><br />\r\n                                        </h3>\r\n                                    </li>\r\n                            )\r\n                            :\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {roundUsd(debt)} USD <br /><br />\r\n                                    {debtuzs} UZS\r\n                                </h3>\r\n                            </li>\r\n                        }\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarz')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem] flex items-center gap-2'>\r\n                                <Checkbox\r\n                                    id={`debt`}\r\n                                    onChange={() => setDebtType('dollar')}\r\n                                    value={debtType === 'dollar' ? true : false}\r\n                                    label={t('USD')}\r\n                                />\r\n                                <Checkbox\r\n                                    id={`debt2`}\r\n                                    onChange={() => setDebtType('sum')}\r\n                                    value={debtType === 'sum' ? true : false}\r\n                                    label={t('UZS')}\r\n                                />\r\n                            </h3>\r\n                        </li>\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />}\r\n                        {/* {location.pathname.includes('/kassa/debts') && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />} */}\r\n                    </div>\r\n                    {/* {!returned && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )} */}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        onClick={handleClickPay}\r\n                        onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SelectInput from '../../../Components/SelectInput/SelectInput'\r\nimport Table from '../../../Components/Table/Table'\r\nimport {\r\n    addIncoming,\r\n    addTemporary,\r\n    clearSuccessAdd,\r\n    clearSuccessTemporary,\r\n    clearTemporary,\r\n    deleteTemporary,\r\n    getProducts,\r\n    getAllSuppliers,\r\n} from '../incomingSlice'\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport { ConfirmBtn, SaveBtn } from '../../../Components/Buttons/SaveConfirmBtn'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal'\r\nimport {\r\n    currentExchangerate,\r\n    reduceSumm,\r\n    roundUsd,\r\n    roundUzs,\r\n    UsdToUzs,\r\n    UzsToUsd,\r\n} from '../../../App/globalFunctions'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { filter, map } from 'lodash'\r\nimport {\r\n    universalToast,\r\n    warningCurrencyRate,\r\n    warningMorePayment,\r\n    warningSaleProductsEmpty,\r\n} from '../../../Components/ToastMessages/ToastMessages'\r\nimport CustomerPayment from '../../../Components/Payment/CustomerPayment.js'\r\nimport Loader from '../../../Components/Loader/Loader'\r\n\r\nconst RegisterIncoming = () => {\r\n    const { t } = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const {\r\n        market: { _id },\r\n        user,\r\n    } = useSelector((state) => state.login)\r\n    const { currency, currencyType } = useSelector((state) => state.currency)\r\n    const { suppliers, products, successAdd, successTemporary, temporary, loading } =\r\n        useSelector((state) => state.incoming)\r\n\r\n    // states\r\n    const [suppliersData, setSuppliersData] = useState([])\r\n    const [productsData, setProductsData] = useState([])\r\n    const [supplier, setSupplier] = useState({})\r\n    const [incomings, setIncomings] = useState([])\r\n    const [incomingModal, setIncomingModal] = useState({})\r\n    const [temporaryIncomings, setTemporaryIncomings] = useState([])\r\n    const [selectSupplierValue, setSelectSupplierValue] = useState('')\r\n    const [selectProductValue, setSelectProductValue] = useState('')\r\n    \r\n    // sale states\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('registerincomingbody')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [saleComment, setSaleComment] = useState('')\r\n    let delay = null\r\n\r\n    // functions for onchange of select\r\n    const selectSupplier = (e) => {\r\n        setSelectSupplierValue({\r\n            label: e.label,\r\n            value: e.value,\r\n        })\r\n        setSupplier(\r\n            ...filter([...suppliers], (supplier) => supplier._id === e.value)\r\n        )\r\n        if (incomings.length > 0) {\r\n            setIncomings([\r\n                ...map([...incomings], (product) => {\r\n                    return {\r\n                        ...product,\r\n                        supplier: {\r\n                            _id: e.value,\r\n                            name: e.label,\r\n                        },\r\n                    }\r\n                }),\r\n            ])\r\n        }\r\n    }\r\n\r\n    const handleScan = (data) => {\r\n        const product = [...products].filter(item => item.productdata.barcode === data)[0]\r\n        selectProduct({\r\n            value: product._id,\r\n            label: product.productdata.name\r\n        })\r\n    }\r\n\r\n    const selectProduct = (e) => {\r\n        setSelectProductValue({\r\n            label: e.label,\r\n            value: e.value,\r\n        })\r\n        if (\r\n            !incomings.some(\r\n                (incoming) =>\r\n                    incoming._id === e.value &&\r\n                    incoming.supplier._id === supplier._id\r\n            )\r\n        ) {\r\n            addIncomingToModal(e.value)\r\n        } else {\r\n            universalToast(\"Diqqat mahsulot ro'yxatda mavjud\", 'warning')\r\n        }\r\n    }\r\n\r\n    // add to product to modalincoming. function\r\n    const addIncomingToModal = (value, barcode) => {\r\n        const product = [\r\n            ...filter([...products], (product) => product._id === value),\r\n        ][0]\r\n        setIncomingModal({\r\n            _id: product._id,\r\n            oldprice: product.price.incomingprice,\r\n            oldpriceuzs: product.price.incomingpriceuzs,\r\n            product: { ...product.productdata, _id: product._id },\r\n            pieces: '',\r\n            unitprice: '',\r\n            unitpriceuzs: '',\r\n            totalprice: '',\r\n            totalpriceuzs: '',\r\n            user: user._id,\r\n            unit: product.unit,\r\n            sellingprice: product.price.sellingprice,\r\n            sellingpriceuzs: product.price.sellingpriceuzs,\r\n            tradeprice: product.price.tradeprice,\r\n            tradepriceuzs: product.price.tradepriceuzs,\r\n            procient: '',\r\n            supplier: { ...supplier },\r\n        })\r\n        setModalBody('registerincomingbody')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    // add modalincoming to incomings\r\n    const addProductToIncomings = () => {\r\n        if (!checkIncomingModal(incomingModal)) {\r\n            setIncomings([incomingModal, ...incomings])\r\n            toggleModal()\r\n        }\r\n    }\r\n\r\n    // change product in incomings\r\n    const changeIncomings = (e, key, id) => {\r\n        const target = Number(e.target.value)\r\n        const check = (property) => key === property\r\n        const product = (!id && {\r\n            ...incomingModal,\r\n        }) || { ...filter([...incomings], (incoming) => incoming._id === id)[0] }\r\n\r\n        const countUsd =\r\n            currencyType === 'USD' ? target : UzsToUsd(target, currency)\r\n        const countUzs =\r\n            currencyType === 'UZS' ? target : UsdToUzs(target, currency)\r\n\r\n        const countProcient = (price) =>\r\n            currencyType === 'UZS'\r\n                ? Math.round((price / 100) * target) + price\r\n                : Math.round((price / 100) * target * 1000) / 1000 + price\r\n\r\n        const changepieces = (obj) => {\r\n            obj.pieces = target\r\n            obj.totalprice = roundUsd(target * obj.unitprice)\r\n            obj.totalpriceuzs = roundUzs(target * obj.unitpriceuzs)\r\n        }\r\n\r\n        const changeunitprice = (obj) => {\r\n            obj.unitprice = UzsToUsd(target, currency)\r\n            obj.unitpriceuzs = target\r\n            obj.totalprice = roundUsd(UzsToUsd(target, currency) * obj.pieces)\r\n            obj.totalpriceuzs = roundUzs(target * obj.pieces)\r\n        }\r\n\r\n        const changeunitpriceusd = (obj) => {\r\n            obj.unitprice = e.target.value\r\n            obj.unitpriceuzs = UsdToUzs(e.target.value, currency)\r\n            obj.totalprice = roundUsd(e.target.value * obj.pieces)\r\n            obj.totalpriceuzs = roundUzs(UsdToUzs(e.target.value, currency) * obj.pieces)\r\n        }\r\n\r\n        const changesellingprice = (obj) => {\r\n            obj.sellingprice = UzsToUsd(e.target.value, currency)\r\n            obj.sellingpriceuzs = e.target.value\r\n            obj.procient = 0\r\n        }\r\n\r\n        const changesellingpriceusd = (obj) => {\r\n            obj.sellingprice = e.target.value\r\n            obj.sellingpriceuzs = UsdToUzs(e.target.value, currency)\r\n            obj.procient = 0\r\n        }\r\n\r\n        const changetradeprice = (obj) => {\r\n            obj.tradeprice = countUsd\r\n            obj.tradepriceuzs = countUzs\r\n        }\r\n\r\n        const changeProcient = (obj) => {\r\n            obj.procient = target\r\n            obj.sellingprice = countProcient(obj.unitprice)\r\n            obj.sellingpriceuzs = countProcient(obj.unitpriceuzs)\r\n        }\r\n\r\n        check('pieces') && changepieces(product)\r\n        check('unitprice') && changeunitprice(product)\r\n        check('unitpriceusd') && changeunitpriceusd(product)\r\n        check('sellingprice') && changesellingprice(product)\r\n        check('sellingpriceusd') && changesellingpriceusd(product)\r\n        check('procient') && changeProcient(product)\r\n        check('tradeprice') && changetradeprice(product)\r\n\r\n        if (id) {\r\n            setIncomings([\r\n                ...map([...incomings], (incoming) => {\r\n                    if (incoming._id === id) {\r\n                        return product\r\n                    }\r\n                    return incoming\r\n                }),\r\n            ])\r\n        } else {\r\n            setIncomingModal(product)\r\n        }\r\n    }\r\n\r\n    const handleError = () => {\r\n        universalToast(t(\"Mahsulot kodi o'qilmadi!\"), 'warning')\r\n    }\r\n\r\n    // change datas for react-select //\r\n    const changeSuppliersData = (data) => {\r\n        const suppliers = map(data, (supplier) => {\r\n            return {\r\n                label: supplier.name,\r\n                value: supplier._id,\r\n            }\r\n        })\r\n        setSuppliersData(suppliers)\r\n    }\r\n\r\n    const changeProductsData = (data) => {\r\n        const products = map(data, (product) => {\r\n            return {\r\n                label:\r\n                    product.productdata.code + ' - ' + product.productdata.name,\r\n                value: product._id,\r\n                barcode: product.productdata.barcode,\r\n            }\r\n        })\r\n        setProductsData(products)\r\n    }\r\n\r\n    const deleteIncoming = (product) => {\r\n        const f = filter(incomings, (incoming) => incoming._id !== product._id)\r\n        setIncomings(f)\r\n        const temps = filter(\r\n            temporaryIncomings,\r\n            (temp) => temp._id !== product._id\r\n        )\r\n        setTemporaryIncomings(temps)\r\n        if (temps.length === 0) {\r\n            dispatch(clearTemporary())\r\n        }\r\n    }\r\n\r\n    const CheckIncoming = (products) => {\r\n        for (const product of products) {\r\n            if (product.pieces < 1) {\r\n                return universalToast(t('Mahsulot sonini kiriting!'), 'warning')\r\n            }\r\n            if (product.unitprice < 0.01) {\r\n                return universalToast(\r\n                    t('Mahsulot qabul narxini kiriting!'),\r\n                    'warning'\r\n                )\r\n            }\r\n            if (product.sellingprice < product.unitprice) {\r\n                return universalToast(\r\n                    t(\"Sotish narxi olish narxidan kam bo'lmasin\"),\r\n                    'warning'\r\n                )\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkIncomingModal = (product) => {\r\n        if (Number(product.pieces) < 1) {\r\n            return universalToast(t('Mahsulot sonini kiriting!'), 'warning')\r\n        }\r\n        if (Number(product.unitprice) < 0.01) {\r\n            return universalToast(\r\n                t('Mahsulot qabul narxini kiriting!'),\r\n                'warning'\r\n            )\r\n        }\r\n        if (Number(product.sellingprice) < Number(product.unitprice)) {\r\n            return universalToast(\r\n                t(\"Sotish narxi olish narxidan kam bo'lmasin\"),\r\n                'warning'\r\n            )\r\n        }\r\n        return false\r\n    }\r\n\r\n    // request functions\r\n    const createIncoming = () => {\r\n        const postincoming = map(incomings, (incoming) => {\r\n            let obj = { ...incoming }\r\n            delete obj._id\r\n            delete obj.procient\r\n            return obj\r\n        })\r\n\r\n        if (!CheckIncoming(postincoming)) {\r\n            if (incomings.length) {\r\n                const all = reduceSumm(incomings, 'totalprice')\r\n                const allUzs = reduceSumm(incomings, 'totalpriceuzs')\r\n                setAllPayment(all)\r\n                setAllPaymentUzs(allUzs)\r\n                setPaymentCash(all)\r\n                setPaymentCashUzs(allUzs)\r\n                setPaid(all)\r\n                setPaidUzs(allUzs)\r\n                setPaymentModalVisible(true)\r\n                setExchangerate(currentExchangerate(allUzs, all))\r\n            } else {\r\n                !currency ? warningCurrencyRate() : warningSaleProductsEmpty()\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeTemporary = () => {\r\n        if (\r\n            temporary.incomings &&\r\n            temporary.incomings.length > 0 &&\r\n            temporaryIncomings.length > 0\r\n        ) {\r\n            dispatch(\r\n                deleteTemporary({\r\n                    _id: temporary._id,\r\n                })\r\n            )\r\n            dispatch(clearTemporary())\r\n        }\r\n    }\r\n\r\n    const createTemporary = () => {\r\n        removeTemporary()\r\n        dispatch(\r\n            addTemporary({\r\n                market: _id,\r\n                temporaryincoming: {\r\n                    supplier,\r\n                    incomings,\r\n                },\r\n            })\r\n        ).then(({ error }) => {\r\n            if (!error) {\r\n                setSelectSupplierValue({\r\n                    label: t('Yetkazib beruvchi'),\r\n                    value: '',\r\n                })\r\n                setSelectProductValue({\r\n                    label: t('Mahsulotlar'),\r\n                    value: '',\r\n                })\r\n                navigate('/maxsulotlar/qabul/saqlanganlar')\r\n            }\r\n        })\r\n    }\r\n\r\n    // Tableheader\r\n    const headers = [\r\n        {\r\n            title: t('№'),\r\n            styles: 'w-[8%]',\r\n        },\r\n        {\r\n            title: t('Kodi'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Nomi'),\r\n        },\r\n        {\r\n            title: t('Soni'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Narxi'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Avvalgi narxi'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: t('Jami'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: 'Optom narx',\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: '',\r\n            styles: 'w-[5%]',\r\n        },\r\n    ]\r\n\r\n    // sales functions\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setSelectProductValue('')\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(allPayment)\r\n                    setPaymentCashUzs(allPaymentUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(allPayment)\r\n                    setPaymentCardUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(allPayment)\r\n                    setPaymentTransferUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment)\r\n                    setPaymentDebtUzs(allPaymentUzs)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment)\r\n        const maxSumUzs = Math.abs(allPaymentUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, exchangerate))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, exchangerate))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate))\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleClickPay = () => {\r\n        if (delay === null) {\r\n            delay = window.setTimeout(() => {\r\n                delay = null\r\n                setModalBody('complete')\r\n                setModalVisible(true)\r\n            }, 300)\r\n        }\r\n    }\r\n    const handleDoubleClick = () => {\r\n        if (!loading) {\r\n            window.clearTimeout(delay)\r\n            delay = null\r\n            handleApprovePay()\r\n        }\r\n    }\r\n    const handleApprovePay = () => {\r\n        if (!loading) {\r\n            const postincoming = map(incomings, (incoming) => {\r\n                let obj = { ...incoming }\r\n                delete obj._id\r\n                delete obj.procient\r\n                return obj\r\n            })\r\n            dispatch(\r\n                addIncoming({\r\n                    products: [...postincoming],\r\n                    user: user._id,\r\n                    payment: {\r\n                        totalprice: Number(allPayment),\r\n                        totalpriceuzs: Number(allPaymentUzs),\r\n                        type: paymentType,\r\n                        cash: Number(paymentCash),\r\n                        cashuzs: Number(paymentCashUzs),\r\n                        card: Number(paymentCard),\r\n                        carduzs: Number(paymentCardUzs),\r\n                        transfer: Number(paymentTransfer),\r\n                        transferuzs: Number(paymentTransferUzs),\r\n                    },\r\n                })\r\n            ).then(({ error }) => {\r\n                removeTemporary()\r\n                dispatch(getProducts())\r\n                !error && navigate('/maxsulotlar/qabul/qabullar')\r\n            })\r\n        }\r\n    }\r\n    const changeComment = (e) => {\r\n        setSaleComment(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        suppliers.length < 1 && dispatch(getAllSuppliers(_id))\r\n        suppliers.length > 0 && changeSuppliersData(suppliers)\r\n    }, [dispatch, _id, suppliers])\r\n\r\n    useEffect(() => {\r\n        products.length < 1 && dispatch(getProducts({ market: _id }))\r\n        products.length > 0 && changeProductsData(products)\r\n    }, [dispatch, _id, products])\r\n\r\n    useEffect(() => {\r\n        if (successAdd) {\r\n            setIncomings([])\r\n            dispatch(clearSuccessAdd())\r\n        }\r\n    }, [dispatch, successAdd])\r\n\r\n    useEffect(() => {\r\n        if (successTemporary) {\r\n            setIncomings([])\r\n            dispatch(clearSuccessTemporary())\r\n        }\r\n    }, [dispatch, successTemporary])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(temporary).length > 0) {\r\n            setSupplier(temporary.supplier)\r\n            setIncomings(temporary.incomings)\r\n            setTemporaryIncomings(temporary.incomings)\r\n            setSelectSupplierValue({\r\n                label: temporary.supplier.name,\r\n                value: temporary.supplier._id,\r\n            })\r\n        }\r\n    }, [temporary, dispatch])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearTemporary())\r\n            setIncomings([])\r\n            setTemporaryIncomings([])\r\n            setSupplier({})\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {loading && <div className='absolute top-0 left-0 z-30'>\r\n                <Loader />\r\n            </div>}\r\n            <div className={'relative grow overflow-auto'}>\r\n                <CustomerPayment\r\n                    returned={true}\r\n                    type={paymentType}\r\n                    active={paymentModalVisible}\r\n                    togglePaymentModal={togglePaymentModal}\r\n                    changePaymentType={handleChangePaymentType}\r\n                    onChange={handleChangePaymentInput}\r\n                    client={''}\r\n                    allPayment={currencyType === 'USD' ? allPayment : allPaymentUzs}\r\n                    card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                    cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                    debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                    hasDiscount={false}\r\n                    transfer={\r\n                        currencyType === 'USD'\r\n                            ? paymentTransfer\r\n                            : paymentTransferUzs\r\n                    }\r\n                    paid={currencyType === 'USD' ? paid : paidUzs}\r\n                    handleClickPay={handleClickPay}\r\n                    changeComment={changeComment}\r\n                    saleComment={saleComment}\r\n                    onDoubleClick={handleDoubleClick}\r\n                />\r\n                <div className='flex items-center mainPadding'>\r\n                    <div className='w-full pr-[1.25rem] border-r border-blue-100'>\r\n                        <SelectInput\r\n                            options={suppliersData}\r\n                            onSelect={selectSupplier}\r\n                            value={selectSupplierValue}\r\n                            placeholder={t('Yetkazib beruvchi')}\r\n                        />\r\n                    </div>\r\n                    <div className='w-full pl-[1.25rem]'>\r\n                        <SelectInput\r\n                            value={selectProductValue}\r\n                            options={productsData}\r\n                            onSelect={selectProduct}\r\n                            isDisabled={!supplier._id}\r\n                            placeholder={t('Maxsulotlar')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <p className='text-[1.25rem] text-blue-900 mainPadding'>\r\n                    {t('Yetkazib beruvchi')}: {supplier.name}\r\n                </p>\r\n                <div\r\n                    className={`${incomings.length > 0 ? 'tableContainerPadding' : 'hidden'\r\n                        }`}\r\n                >\r\n                    <Table\r\n                        page={'registerincoming'}\r\n                        headers={headers}\r\n                        data={incomings}\r\n                        currency={currencyType}\r\n                        changeHandler={changeIncomings}\r\n                        Delete={deleteIncoming}\r\n                    />\r\n                    <div className='flex items-center justify-end gap-[0.625rem] pt-[1.25rem]'>\r\n                        <SaveBtn text={t('Saqlash')} onClick={createTemporary} />\r\n                        <ConfirmBtn\r\n                            text={t('Tasdiqlash')}\r\n                            onClick={createIncoming}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <UniversalModal\r\n                    isOpen={modalVisible}\r\n                    body={modalBody}\r\n                    headerText={t(\"To'lovni amalga oshirishni tasdiqlaysizmi ?\")}\r\n                    title={t(\r\n                        \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                    )}\r\n                    product={incomingModal}\r\n                    toggleModal={toggleModal}\r\n                    changeProduct={changeIncomings}\r\n                    approveFunction={\r\n                        modalBody === 'complete'\r\n                            ? handleApprovePay\r\n                            : addProductToIncomings\r\n                    }\r\n                    currency={currencyType}\r\n                />\r\n            </div>\r\n            <BarcodeReader onError={handleError} onScan={handleScan} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterIncoming\r\n"],"names":["SaleBtn","_ref","onClick","text","type","active","icons","cash","_jsx","IoCashOutline","className","size","card","IoCardOutline","transfer","IoSwapHorizontalOutline","mixed","IoGitCompareOutline","_jsxs","concat","children","Payment","_ref3","onDoubleClick","IoWalletOutline","DropdownIcon","props","components","DropdownIndicator","_objectSpread","IoCaretDown","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","placeholder","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","TableInput","returned","togglePaymentModal","_ref$type","_ref$cash","_ref$card","_ref$transfer","discount","hasDiscount","debt","allPayment","allPaymentUzs","_ref$paid","paid","_ref$client","client","changePaymentType","discountSelectOption","handleChangeDiscountSelectOption","handleClickDiscountBtn","handleChangeDiscount","handleClickPay","exchangerate","saleComment","changeComment","_ref$paymentUsd","paymentUsd","debtuzs","debtType","setDebtType","location","useLocation","defineLabel","PaymentInput","t","key","map","obj","pathname","includes","stopPropagation","autoFocus","IoPerson","roundUsd","Checkbox","id","toLocaleString","useTranslation","dispatch","useDispatch","navigate","useNavigate","_useSelector","login","_id","market","user","_useSelector2","_useSelector3","incoming","suppliers","products","successAdd","successTemporary","temporary","loading","_useState","useState","_useState2","_slicedToArray","suppliersData","setSuppliersData","_useState3","_useState4","productsData","setProductsData","_useState5","_useState6","supplier","setSupplier","_useState7","_useState8","incomings","setIncomings","_useState9","_useState10","incomingModal","setIncomingModal","_useState11","_useState12","temporaryIncomings","setTemporaryIncomings","_useState13","_useState14","selectSupplierValue","setSelectSupplierValue","_useState15","_useState16","selectProductValue","setSelectProductValue","_useState17","_useState18","paymentModalVisible","setPaymentModalVisible","_useState19","_useState20","paymentType","setPaymentType","_useState21","_useState22","paymentCash","setPaymentCash","_useState23","_useState24","paymentCashUzs","setPaymentCashUzs","_useState25","_useState26","paymentCard","setPaymentCard","_useState27","_useState28","paymentCardUzs","setPaymentCardUzs","_useState29","_useState30","paymentTransfer","setPaymentTransfer","_useState31","_useState32","paymentTransferUzs","setPaymentTransferUzs","_useState33","_useState34","paymentDebt","setPaymentDebt","_useState35","_useState36","paymentDebtUzs","setPaymentDebtUzs","_useState37","_useState38","setAllPayment","_useState39","_useState40","setAllPaymentUzs","_useState41","_useState42","setPaid","_useState43","_useState44","paidUzs","setPaidUzs","_useState45","_useState46","modalBody","setModalBody","_useState47","_useState48","modalVisible","setModalVisible","_useState49","_useState50","setExchangerate","_useState51","_useState52","setSaleComment","delay","selectProduct","some","universalToast","addIncomingToModal","barcode","product","_toConsumableArray","filter","oldprice","price","incomingprice","oldpriceuzs","incomingpriceuzs","productdata","pieces","unitprice","unitpriceuzs","totalprice","totalpriceuzs","unit","sellingprice","sellingpriceuzs","tradeprice","tradepriceuzs","procient","changeIncomings","Number","check","property","countUsd","UzsToUsd","countUzs","UsdToUzs","countProcient","Math","round","roundUzs","changeunitprice","changeunitpriceusd","changesellingprice","changesellingpriceusd","changeProcient","changetradeprice","checkIncomingModal","removeTemporary","length","deleteTemporary","clearTemporary","headers","title","toggleModal","setTimeout","writePayment","maxSum","abs","maxSumUzs","all","allUzs","warningMorePayment","allUsd","handleApprovePay","postincoming","addIncoming","payment","cashuzs","carduzs","transferuzs","then","_ref2","error","getProducts","useEffect","getAllSuppliers","data","name","changeSuppliersData","code","changeProductsData","clearSuccessAdd","clearSuccessTemporary","Object","keys","Loader","CustomerPayment","bool","window","clearTimeout","SelectInput","apply","isDisabled","Table","page","changeHandler","Delete","f","temps","temp","SaveBtn","addTemporary","temporaryincoming","ConfirmBtn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","CheckIncoming","reduceSumm","currentExchangerate","warningSaleProductsEmpty","warningCurrencyRate","UniversalModal","isOpen","body","headerText","changeProduct","approveFunction","BarcodeReader","onError","onScan","item"],"sourceRoot":""}