{"version":3,"file":"static/js/8729.d43df666.chunk.js","mappings":"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","sources":["App/globalFunctions.js","Components/Inputs/TableInput.js","Components/RegularExpressions/RegularExpressions.js","Components/SelectInput/CustomStyle.js","Components/SelectInput/SelectInput.js","Components/CheckoutCard/CheckoutCards.js","Pages/Reports/Reports.js"],"sourcesContent":["import {regexForEmptyString} from '../Components/RegularExpressions/RegularExpressions.js'\r\nimport {orderBy, reduce} from 'lodash'\r\nimport * as XLSX from 'xlsx'\r\n\r\nexport const universalSort = (data, setData, key, sort, prevData) => {\r\n    const keys = key.split('.')\r\n    const result = sort\r\n        ? orderBy(\r\n            [...data],\r\n            (item) => {\r\n                return keys.length === 3\r\n                    ? item[keys[0]][keys[1]][keys[2]]\r\n                    : keys.length === 2\r\n                        ? item[keys[0]][keys[1]]\r\n                        : item[key]\r\n            },\r\n            [sort === -1 ? 'desc' : 'asc']\r\n        )\r\n        : prevData\r\n    setData(result)\r\n}\r\nexport const UsdToUzs = (val, currency) => Math.round(val * currency)\r\n\r\nexport const UzsToUsd = (val, currency) =>\r\n    Math.round((val / currency) * 10000) / 10000\r\n\r\n// check empty string\r\nexport const checkEmptyString = (values) => {\r\n    let result = {failed: false, message: ''}\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (regexForEmptyString.test(values[i].value)) {\r\n            result = {\r\n                message: values[i].message,\r\n                failed: true\r\n            }\r\n            break\r\n        }\r\n    }\r\n    return result\r\n}\r\n// export excel\r\nexport const exportExcel = (data, fileName, headers) => {\r\n    const autoFillColumnWidth = (json) => {\r\n        const cols = Object.keys(json[0])\r\n        return cols.map((key, index) => {\r\n            let maxLength = Math.max(\r\n                ...json.map((x) => x[key].toString().length)\r\n            )\r\n            return {\r\n                wch:\r\n                    headers[index].length > maxLength\r\n                        ? headers[index].length + 1\r\n                        : maxLength + 4\r\n            }\r\n        })\r\n    }\r\n    const wscols = autoFillColumnWidth(data)\r\n    const wb = XLSX.utils.book_new()\r\n    const ws = XLSX.utils.json_to_sheet([])\r\n    ws['!cols'] = wscols\r\n    XLSX.utils.sheet_add_aoa(ws, [headers])\r\n    XLSX.utils.sheet_add_json(ws, data, {\r\n        origin: 'A2',\r\n        skipHeader: true\r\n    })\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Maxsulotlar')\r\n    XLSX.writeFile(wb, `${fileName}-${new Date().toLocaleDateString()}.xlsx`)\r\n}\r\n\r\n// round UZS||USD\r\nexport const roundUzs = (val) => Math.round(val * 1) / 1\r\n\r\nexport const roundUsd = (val) => Math.round(val * 10000) / 10000\r\n\r\n// reduce\r\nexport const reduceSumm = (arr, key) =>\r\n    reduce(arr, (prev, current) => prev + current[key], 0)\r\n\r\n// current Exchange\r\nexport const currentExchangerate = (uzs, usd) => roundUzs(uzs / usd)\r\n","function TableInput({\r\n                        placeholder,\r\n                        type,\r\n                        value,\r\n                        onChange,\r\n                        label,\r\n                        disabled,\r\n                        onKeyUp\r\n                    }) {\r\n    return (\r\n        <div className={'w-full'}>\r\n            <label>\r\n                {label}\r\n                <input\r\n                    disabled={disabled}\r\n                    className='tableInput'\r\n                    placeholder={placeholder}\r\n                    type={type}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onKeyUp={onKeyUp}\r\n                    onWheel={(e) => e.target.blur()}\r\n                    min={0}\r\n                />\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableInput\r\n","export const regexForTypeNumber = /^\\d*\\.?\\d*$/\r\nexport const regexForEmptyString = /^\\s*$/","import React from 'react'\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} color={'#86A7E9'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\n\r\nconst DropdownIndicator = (styles, {isFocused}) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    paddingRight: '.625rem',\r\n    color: isFocused ? '#193F8A' : '#071F45'\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    zIndex: 30\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    color: '#1c1c1c',\r\n    fontSize: '.875rem',\r\n    lineHeight: '1.25rem',\r\n    fontWeight: '400',\r\n    margin: 0\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\n\r\nconst Placeholder = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    margin: 0,\r\n    color: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#86A7E9'\r\n})\r\nconst Control = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: '.625rem .58rem',\r\n    borderRadius: '.25rem',\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: '#86A7E9',\r\n    outline: 'none',\r\n    boxShadow: '0px 10px 10px rgba(0, 0, 0, 0.05)',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        backgroundColor: '#EAEAEA'\r\n    },\r\n    '&:focus-within': {\r\n        outline: '4px solid #A9C0EF',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    backgroundColor: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#fff',\r\n    border: isDisabled ? 'none' : '1px solid #86A7E9'\r\n})\r\n\r\nconst inputStyles = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    display: 'flex',\r\n    lineHeight: '1.25rem',\r\n    margin: 0\r\n})\r\n\r\nconst CustomStyle = {\r\n    container: (styles) => ({\r\n        ...styles,\r\n        height: '100%'\r\n    }),\r\n    control: Control,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    dropdownIndicator: DropdownIndicator,\r\n    placeholder: Placeholder,\r\n    input: inputStyles\r\n}\r\n\r\nexport default CustomStyle\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle'\r\n\r\nconst SelectInput = ({\r\n    onSelect,\r\n    options,\r\n    isDisabled,\r\n    label,\r\n    placeholder,\r\n    value,\r\n}) => {\r\n    return (\r\n        <div className='grow'>\r\n            {label && (\r\n                <label\r\n                    className={\r\n                        'text-blue-700 block leading-[1.125rem] mb-[.625rem]'\r\n                    }\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                value={value}\r\n                defaultValue={''}\r\n                options={options}\r\n                isDisabled={isDisabled}\r\n                placeholder={placeholder}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckoutCards = ({\r\n    type,\r\n    onClick,\r\n    name,\r\n    active,\r\n    currency,\r\n    report,\r\n    path,\r\n}) => {\r\n    const chooseCardName = `cardContainer ${type === 'sale' ||\r\n            type === 'income' ||\r\n            type === 'payments'\r\n            ? 'tradeCard'\r\n            : type === 'expenses' || type === 'debts'\r\n                ? 'debts'\r\n                : type === 'backproducts'\r\n                    ? 'returnedCard'\r\n                    : type === 'discounts'\r\n                        ? 'discountCard'\r\n                        : ''\r\n        } ${active ? 'activeCard' : ''}`\r\n\r\n    return (\r\n        <Link to={`/kassa/${path}`} onClick={onClick}>\r\n            <span className={chooseCardName}>\r\n                <span className='tradeIn'>\r\n                    <span\r\n                        className={\r\n                            type === 'income' ? 'hidden' : 'parcentageWidth'\r\n                        }\r\n                    >\r\n                        <span\r\n                            className={\r\n                                type === 'income'\r\n                                    ? 'hidden'\r\n                                    : 'percentageCircle'\r\n                            }\r\n                        >\r\n                            <span> {report[type + 'count']} </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className='w-full'>\r\n                        <span\r\n                            className={\r\n                                type === 'income' ? 'checkName' : 'checkoutName'\r\n                            }\r\n                        >\r\n                            <p className='text-[1.5rem]'>{name}</p>\r\n                            <p className='text-[1.25rem] '>{currency}</p>\r\n                        </span>\r\n                        <div>\r\n                            <p className='costCard float-right'>\r\n                                {currency === 'UZS'\r\n                                    ? report[type + 'uzs'].toLocaleString(\r\n                                        'ru-Ru'\r\n                                    )\r\n                                    : report[type].toLocaleString('ru-Ru')}\r\n                            </p>\r\n                        </div>\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CheckoutCards\r\n","import React, { useEffect, useState } from 'react'\r\nimport CheckoutCards from '../../Components/CheckoutCard/CheckoutCards'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { universalToast } from '../../Components/ToastMessages/ToastMessages.js'\r\nimport { uniqueId, map } from 'lodash'\r\nimport {\r\n    changeEndDate,\r\n    changeStartDate,\r\n    clearErrorReports,\r\n    getIncomings,\r\n    getProducts,\r\n    getReports,\r\n    getReportsForTotal,\r\n    getSaleProducts,\r\n} from './reportsSlice.js'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { motion } from 'framer-motion'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\n\r\nconst Reports = () => {\r\n    const { t } = useTranslation(['common'])\r\n\r\n    const card = [\r\n        // {\r\n        //     name: 'Savdo',\r\n        //     type: 'sale',\r\n        //     percentage: 99,\r\n        // },\r\n        {\r\n            name: 'Sof foyda',\r\n            type: 'income',\r\n        },\r\n        {\r\n            name: 'Xarajatlar',\r\n            type: 'expenses',\r\n        },\r\n        {\r\n            name: \"Tushumlar\",\r\n            type: 'payments',\r\n        },\r\n        {\r\n            name: 'Qaytarilgan',\r\n            type: 'backproducts',\r\n        },\r\n        {\r\n            name: 'Chegirmalar',\r\n            type: 'discounts',\r\n        },\r\n        {\r\n            name: 'Qarzlar',\r\n            type: 'debts',\r\n        },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        reports,\r\n        clearErrorrReports,\r\n        errorReports,\r\n        productreport,\r\n        incomingreport,\r\n        totalreports,\r\n        saleproductsreport,\r\n        startDate,\r\n        endDate,\r\n    } = useSelector((state) => state.reports)\r\n\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [modalBody, setModalBody] = useState(null)\r\n\r\n    const handleClickPrint = () => {\r\n        setModalVisible(true)\r\n        setModalBody('totalReport')\r\n    }\r\n\r\n    const toggleClickPrint = () => {\r\n        setModalVisible(false)\r\n        setModalBody('')\r\n    }\r\n\r\n    const handleStartDate = (e) => {\r\n        dispatch(changeStartDate({ start: e.toISOString() }))\r\n    }\r\n    const handleEndDate = (e) => {\r\n        dispatch(changeEndDate({ end: e.toISOString() }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            startDate: new Date(\r\n                new Date(startDate).getFullYear(),\r\n                new Date(startDate).getMonth(),\r\n                new Date(startDate).getDate()\r\n            ).toISOString(),\r\n            endDate: endDate,\r\n        }\r\n        let bodyTotal = {\r\n            startDate: new Date(\r\n                new Date().setMonth(new Date().getMonth() - 1)\r\n            ).toISOString(),\r\n            endDate: new Date(),\r\n        }\r\n\r\n        dispatch(getReports(body))\r\n        dispatch(getProducts())\r\n        dispatch(getIncomings(bodyTotal))\r\n        dispatch(getReportsForTotal(bodyTotal))\r\n        dispatch(getSaleProducts(bodyTotal))\r\n    }, [dispatch, startDate, endDate])\r\n    useEffect(() => {\r\n        if (errorReports) {\r\n            universalToast(errorReports, 'error')\r\n            dispatch(clearErrorReports())\r\n        }\r\n    }, [dispatch, clearErrorrReports, errorReports])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: { opacity: 1, height: 'auto' },\r\n                collapsed: { opacity: 0, height: 0 },\r\n            }}\r\n            transition={{ duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        >\r\n            <SearchForm\r\n                filterBy={['startDate', 'endDate', 'printBtn']}\r\n                startDate={new Date(startDate)}\r\n                endDate={new Date(endDate)}\r\n                setStartDate={handleStartDate}\r\n                setEndDate={handleEndDate}\r\n                clickPrintBtn={handleClickPrint}\r\n            />\r\n            <div className='checkout-card mainPadding'>\r\n                {reports &&\r\n                    map(card, (i) => (\r\n                        <CheckoutCards\r\n                            key={uniqueId('card')}\r\n                            path={i.type}\r\n                            name={t(i.name)}\r\n                            type={i.type}\r\n                            percentage={i.percentage}\r\n                            cost={i.cost}\r\n                            currency={currencyType}\r\n                            report={reports && reports[i.type]}\r\n                        />\r\n                    ))}\r\n            </div>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={toggleClickPrint}\r\n                incomingreport={incomingreport}\r\n                productreport={productreport}\r\n                saleproductsreport={saleproductsreport}\r\n                totalreports={totalreports}\r\n                currency={currencyType}\r\n                isOpen={modalVisible}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirishni tasdiqlaysizmi ?\"\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                }\r\n            />\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n"],"names":["universalSort","data","setData","key","sort","prevData","keys","split","orderBy","_toConsumableArray","item","length","UsdToUzs","val","currency","Math","round","UzsToUsd","checkEmptyString","values","result","failed","message","i","regexForEmptyString","test","value","exportExcel","fileName","headers","json","wscols","Object","map","index","maxLength","max","apply","x","toString","wch","wb","XLSX","book_new","ws","json_to_sheet","sheet_add_aoa","sheet_add_json","origin","skipHeader","book_append_sheet","concat","Date","toLocaleDateString","roundUzs","roundUsd","reduceSumm","arr","reduce","prev","current","currentExchangerate","uzs","usd","_ref","placeholder","type","onChange","label","disabled","onKeyUp","_jsx","className","children","_jsxs","onWheel","e","target","blur","min","regexForTypeNumber","DropdownIcon","props","components","DropdownIndicator","_objectSpread","IoCaretDown","size","color","container","styles","height","control","_ref4","isDisabled","width","padding","borderRadius","fontSize","fontWeight","outline","boxShadow","cursor","backgroundColor","border","option","_ref2","isFocused","isSelected","transition","overflow","menu","zIndex","singleValue","lineHeight","margin","valueContainer","dropdownIndicator","paddingRight","_ref3","input","display","onSelect","options","Select","CustomStyle","defaultValue","IndicatorSeparator","onClick","name","active","report","path","chooseCardName","Link","to","toLocaleString","t","useTranslation","dispatch","useDispatch","_useSelector","useSelector","state","reports","clearErrorrReports","errorReports","productreport","incomingreport","totalreports","saleproductsreport","startDate","endDate","currencyType","_useState","useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","modalBody","setModalBody","useEffect","body","getFullYear","getMonth","getDate","toISOString","bodyTotal","setMonth","getReports","getProducts","getIncomings","getReportsForTotal","getSaleProducts","universalToast","clearErrorReports","motion","section","initial","animate","exit","variants","open","opacity","collapsed","duration","ease","SearchForm","filterBy","setStartDate","changeStartDate","start","setEndDate","changeEndDate","end","clickPrintBtn","CheckoutCards","percentage","cost","uniqueId","UniversalModal","toggleModal","isOpen","headerText","title"],"sourceRoot":""}