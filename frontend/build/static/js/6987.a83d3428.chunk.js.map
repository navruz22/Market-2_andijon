{"version":3,"file":"static/js/6987.a83d3428.chunk.js","mappings":"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","sources":["Components/Buttons/SaleBtns.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/Incomings/Routes/RegisterIncoming.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    IoCardOutline,\r\n    IoCashOutline,\r\n    IoGitCompareOutline,\r\n    IoPricetagOutline,\r\n    IoSwapHorizontalOutline,\r\n    IoWalletOutline,\r\n} from 'react-icons/io5'\r\n\r\nexport const SaleBtn = ({ onClick, text, type, active }) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        card: <IoCardOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        transfer: (\r\n            <IoSwapHorizontalOutline\r\n                className='paymentsstyle'\r\n                size={'1.3125rem'}\r\n            />\r\n        ),\r\n        mixed: (\r\n            <IoGitCompareOutline className='paymentsstyle' size={'1.3125rem'} />\r\n        ),\r\n    }\r\n    return (\r\n        <button\r\n            onClick={() => onClick(type)}\r\n            className={`salestyle ${active ? 'bg-primary-700 text-white-900' : 'bg-[#E9ECEB]'\r\n                }`}\r\n        >\r\n            {icons[type]}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const DiscountBtn = ({ onClick, text }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='discountstyle w-full h-[3.25rem] bg-warning-500 text-white-900 duration-200 shadow-lg'\r\n        >\r\n            <IoPricetagOutline className='discstyle' size={'1.5rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const Payment = ({ onClick, text, onDoubleClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            onDoubleClick={onDoubleClick}\r\n            className={`paymentstyle grow`}\r\n        >\r\n            <IoWalletOutline className='paystyle' size={'1.3125rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'}\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-full placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={'misol: 100 000 000'}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            {/* <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon\r\n                }}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect, type, label}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>{label}:</div>\r\n            <PaymentSelect onChange={(e) => onChange(e, type)} onSelect={onSelect} value={value} option={option} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\n\r\nfunction PaymentInput({mix, value, onChange, label, onClose, keyInput, placeholder, type}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `misol: 100 000 000`}\r\n                    type={type ||'number'}\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }} />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import { IoPerson } from 'react-icons/io5'\r\nimport { DiscountBtn, Payment, SaleBtn } from '../Buttons/SaleBtns.js'\r\nimport { DiscountInput } from '../Inputs/DiscountInputs.js'\r\nimport { useSelector } from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport { t } from 'i18next'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Checkbox from '../Checkbox/Checkbox.js'\r\nimport { roundUsd, UsdToUzs } from '../../App/globalFunctions.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    type = 'cash',\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    discount,\r\n    discountUzs,\r\n    hasDiscount,\r\n    debt,\r\n    allPayment,\r\n    allPaymentUzs,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    exchangerate,\r\n    handleClickPay,\r\n    allMainPayment,\r\n    saleComment,\r\n    changeComment,\r\n    onDoubleClick,\r\n    paymentUsd = \"\",\r\n    debtuzs,\r\n    debtType,\r\n    setDebtType\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    { label: t('USD'), key: 'usd', value: paymentUsd },\r\n                    { label: t('Naqd'), key: 'cash', value: cash },\r\n                    { label: t('Plastik'), key: 'card', value: card },\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return location.pathname.includes('/kassa/debts') ?\r\n                    (\r\n                        debtType === 'sum' ?\r\n                            <PaymentInput\r\n                                key={'sale-cash'}\r\n                                value={cash}\r\n                                onChange={onChange}\r\n                                keyInput={type}\r\n                                onClose={onClose}\r\n                                label={t('Naqd')}\r\n                            /> :\r\n                            <PaymentInput\r\n                                key={'sale-usd'}\r\n                                value={paymentUsd}\r\n                                onChange={onChange}\r\n                                keyInput={'usd'}\r\n                                onClose={onClose}\r\n                                label={t('USD')}\r\n                            />\r\n                    )\r\n                    :\r\n                    <>\r\n                        {type !== 'mixed' && <PaymentInput\r\n                            key={'sale-usd'}\r\n                            value={paymentUsd}\r\n                            onChange={onChange}\r\n                            keyInput={'usd'}\r\n                            onClose={onClose}\r\n                            label={t('USD')}\r\n                        />}\r\n                        <PaymentInput\r\n                            key={'sale-cash'}\r\n                            value={cash}\r\n                            onChange={onChange}\r\n                            keyInput={type}\r\n                            onClose={onClose}\r\n                            label={t('Naqd')}\r\n                        />\r\n                    </>\r\n        }\r\n    }\r\n    const { currencyType, currency } = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`absolute transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${active\r\n                ? 'opacity-100 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none'\r\n                }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('Oynani yopish uchun bu yerga bosing !')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${active ? 'translate-x-0' : 'translate-x-full'\r\n                    }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {location.pathname.includes('/kassa/debts') ? (debtType === 'dollar' ? allPayment + ' USD' : allPaymentUzs + ' UZS') : Number(allMainPayment) + ' UZS'}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') || location.pathname.includes('/qarzdorlar') || location.pathname.includes('/maxsulotlar/qabul/qabulqilish') || location.pathname.includes('/maxsulotlar/qabul/qabullar')) && defineLabel()}\r\n                        <PaymentInput\r\n                            value={saleComment}\r\n                            key={'sale-card'}\r\n                            keyInput={type}\r\n                            onChange={changeComment}\r\n                            onClose={onClose}\r\n                            label={t('Izoh')}\r\n                            placeholder={t('misol: qarzga olindi')}\r\n                            type={'text'}\r\n                        />\r\n                        {hasDiscount && (\r\n                            <>\r\n                                <DiscountInput\r\n                                    value={discount}\r\n                                    onChange={handleChangeDiscount}\r\n                                    option={discountSelectOption}\r\n                                    onSelect={handleChangeDiscountSelectOption}\r\n                                    label={'Chegirma USD'}\r\n                                    type={'usd'}\r\n                                />\r\n                                <DiscountInput\r\n                                    value={discountUzs}\r\n                                    onChange={handleChangeDiscount}\r\n                                    option={discountSelectOption}\r\n                                    onSelect={handleChangeDiscountSelectOption}\r\n                                    label={'Chegirma UZS'}\r\n                                    type={'uzs'}\r\n                                />\r\n                            </>\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') ?\r\n                            (\r\n                                debtType === 'sum' ?\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {debtuzs} UZS\r\n                                        </h3>\r\n                                    </li>\r\n                                    :\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {roundUsd(debt)} USD <br /><br />\r\n                                        </h3>\r\n                                    </li>\r\n                            )\r\n                            :\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {Math.round(debt * 1000) / 1000} USD <br /><br />\r\n                                    {debtuzs} UZS\r\n                                </h3>\r\n                            </li>\r\n                        }\r\n                        {location.pathname.includes('/kassa/debts') && <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarz')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem] flex items-center gap-2'>\r\n                                <Checkbox\r\n                                    id={`debt`}\r\n                                    onChange={() => setDebtType('dollar')}\r\n                                    value={debtType === 'dollar' ? true : false}\r\n                                    label={t('USD')}\r\n                                />\r\n                                <Checkbox\r\n                                    id={`debt2`}\r\n                                    onChange={() => setDebtType('sum')}\r\n                                    value={debtType === 'sum' ? true : false}\r\n                                    label={t('UZS')}\r\n                                />\r\n                            </h3>\r\n                        </li>}\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />}\r\n                        {/* {location.pathname.includes('/kassa/debts') && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />} */}\r\n                    </div>\r\n                    {/* {!returned && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )} */}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        onClick={handleClickPay}\r\n                        onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SelectInput from '../../../Components/SelectInput/SelectInput'\r\nimport Table from '../../../Components/Table/Table'\r\nimport {\r\n    addIncoming,\r\n    addTemporary,\r\n    clearSuccessAdd,\r\n    clearSuccessTemporary,\r\n    clearTemporary,\r\n    deleteTemporary,\r\n    getProducts,\r\n    getAllSuppliers,\r\n} from '../incomingSlice'\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport { ConfirmBtn, SaveBtn } from '../../../Components/Buttons/SaveConfirmBtn'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal'\r\nimport {\r\n    currentExchangerate,\r\n    reduceSumm,\r\n    roundUsd,\r\n    roundUzs,\r\n    UsdToUzs,\r\n    UzsToUsd,\r\n} from '../../../App/globalFunctions'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { filter, map } from 'lodash'\r\nimport {\r\n    universalToast,\r\n    warningCurrencyRate,\r\n    warningMorePayment,\r\n    warningSaleProductsEmpty,\r\n} from '../../../Components/ToastMessages/ToastMessages'\r\nimport CustomerPayment from '../../../Components/Payment/CustomerPayment.js'\r\nimport Loader from '../../../Components/Loader/Loader'\r\n\r\nconst RegisterIncoming = () => {\r\n    const { t } = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const {\r\n        market: { _id },\r\n        user,\r\n    } = useSelector((state) => state.login)\r\n    const { currency, currencyType } = useSelector((state) => state.currency)\r\n    const { suppliers, products, successAdd, successTemporary, temporary, loading } =\r\n        useSelector((state) => state.incoming)\r\n\r\n    // states\r\n    const [suppliersData, setSuppliersData] = useState([])\r\n    const [productsData, setProductsData] = useState([])\r\n    const [supplier, setSupplier] = useState({})\r\n    const [incomings, setIncomings] = useState([])\r\n    const [incomingModal, setIncomingModal] = useState({})\r\n    const [temporaryIncomings, setTemporaryIncomings] = useState([])\r\n    const [selectSupplierValue, setSelectSupplierValue] = useState('')\r\n    const [selectProductValue, setSelectProductValue] = useState('')\r\n    \r\n    // sale states\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('registerincomingbody')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [saleComment, setSaleComment] = useState('')\r\n    let delay = null\r\n\r\n    // functions for onchange of select\r\n    const selectSupplier = (e) => {\r\n        setSelectSupplierValue({\r\n            label: e.label,\r\n            value: e.value,\r\n        })\r\n        setSupplier(\r\n            ...filter([...suppliers], (supplier) => supplier._id === e.value)\r\n        )\r\n        if (incomings.length > 0) {\r\n            setIncomings([\r\n                ...map([...incomings], (product) => {\r\n                    return {\r\n                        ...product,\r\n                        supplier: {\r\n                            _id: e.value,\r\n                            name: e.label,\r\n                        },\r\n                    }\r\n                }),\r\n            ])\r\n        }\r\n    }\r\n\r\n    const handleScan = (data) => {\r\n        const product = [...products].filter(item => item.productdata.barcode === data)[0]\r\n        selectProduct({\r\n            value: product._id,\r\n            label: product.productdata.name\r\n        })\r\n    }\r\n\r\n    const selectProduct = (e) => {\r\n        setSelectProductValue({\r\n            label: e.label,\r\n            value: e.value,\r\n        })\r\n        if (\r\n            !incomings.some(\r\n                (incoming) =>\r\n                    incoming._id === e.value &&\r\n                    incoming.supplier._id === supplier._id\r\n            )\r\n        ) {\r\n            addIncomingToModal(e.value)\r\n        } else {\r\n            universalToast(\"Diqqat mahsulot ro'yxatda mavjud\", 'warning')\r\n        }\r\n    }\r\n\r\n    // add to product to modalincoming. function\r\n    const addIncomingToModal = (value, barcode) => {\r\n        const product = [\r\n            ...filter([...products], (product) => product._id === value),\r\n        ][0]\r\n        setIncomingModal({\r\n            _id: product._id,\r\n            oldprice: product.price.incomingprice,\r\n            oldpriceuzs: product.price.incomingpriceuzs,\r\n            product: { ...product.productdata, _id: product._id },\r\n            pieces: '',\r\n            unitprice: '',\r\n            unitpriceuzs: '',\r\n            totalprice: '',\r\n            totalpriceuzs: '',\r\n            user: user._id,\r\n            unit: product.unit,\r\n            sellingprice: product.price.sellingprice,\r\n            sellingpriceuzs: product.price.sellingpriceuzs,\r\n            tradeprice: product.price.tradeprice,\r\n            tradepriceuzs: product.price.tradepriceuzs,\r\n            procient: '',\r\n            supplier: { ...supplier },\r\n        })\r\n        setModalBody('registerincomingbody')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    // add modalincoming to incomings\r\n    const addProductToIncomings = () => {\r\n        if (!checkIncomingModal(incomingModal)) {\r\n            setIncomings([incomingModal, ...incomings])\r\n            toggleModal()\r\n        }\r\n    }\r\n\r\n    // change product in incomings\r\n    const changeIncomings = (e, key, id) => {\r\n        const target = Number(e.target.value)\r\n        const check = (property) => key === property\r\n        const product = (!id && {\r\n            ...incomingModal,\r\n        }) || { ...filter([...incomings], (incoming) => incoming._id === id)[0] }\r\n\r\n        const countUsd =\r\n            currencyType === 'USD' ? target : UzsToUsd(target, currency)\r\n        const countUzs =\r\n            currencyType === 'UZS' ? target : UsdToUzs(target, currency)\r\n\r\n        const countProcient = (price) =>\r\n            currencyType === 'UZS'\r\n                ? Math.round((price / 100) * target) + price\r\n                : Math.round((price / 100) * target * 1000) / 1000 + price\r\n\r\n        const changepieces = (obj) => {\r\n            obj.pieces = target\r\n            obj.totalprice = roundUsd(target * obj.unitprice)\r\n            obj.totalpriceuzs = roundUzs(target * obj.unitpriceuzs)\r\n        }\r\n\r\n        const changeunitprice = (obj) => {\r\n            obj.unitprice = UzsToUsd(target, currency)\r\n            obj.unitpriceuzs = target\r\n            obj.totalprice = roundUsd(UzsToUsd(target, currency) * obj.pieces)\r\n            obj.totalpriceuzs = roundUzs(target * obj.pieces)\r\n        }\r\n\r\n        const changeunitpriceusd = (obj) => {\r\n            obj.unitprice = e.target.value\r\n            obj.unitpriceuzs = UsdToUzs(e.target.value, currency)\r\n            obj.totalprice = roundUsd(e.target.value * obj.pieces)\r\n            obj.totalpriceuzs = roundUzs(UsdToUzs(e.target.value, currency) * obj.pieces)\r\n        }\r\n\r\n        const changesellingprice = (obj) => {\r\n            obj.sellingprice = UzsToUsd(e.target.value, currency)\r\n            obj.sellingpriceuzs = e.target.value\r\n            obj.procient = 0\r\n        }\r\n\r\n        const changesellingpriceusd = (obj) => {\r\n            obj.sellingprice = e.target.value\r\n            obj.sellingpriceuzs = UsdToUzs(e.target.value, currency)\r\n            obj.procient = 0\r\n        }\r\n\r\n        const changetradeprice = (obj) => {\r\n            obj.tradeprice = countUsd\r\n            obj.tradepriceuzs = countUzs\r\n        }\r\n\r\n        const changeProcient = (obj) => {\r\n            obj.procient = target\r\n            obj.sellingprice = countProcient(obj.unitprice)\r\n            obj.sellingpriceuzs = countProcient(obj.unitpriceuzs)\r\n        }\r\n\r\n        check('pieces') && changepieces(product)\r\n        check('unitprice') && changeunitprice(product)\r\n        check('unitpriceusd') && changeunitpriceusd(product)\r\n        check('sellingprice') && changesellingprice(product)\r\n        check('sellingpriceusd') && changesellingpriceusd(product)\r\n        check('procient') && changeProcient(product)\r\n        check('tradeprice') && changetradeprice(product)\r\n\r\n        if (id) {\r\n            setIncomings([\r\n                ...map([...incomings], (incoming) => {\r\n                    if (incoming._id === id) {\r\n                        return product\r\n                    }\r\n                    return incoming\r\n                }),\r\n            ])\r\n        } else {\r\n            setIncomingModal(product)\r\n        }\r\n    }\r\n\r\n    const handleError = () => {\r\n        universalToast(t(\"Mahsulot kodi o'qilmadi!\"), 'warning')\r\n    }\r\n\r\n    // change datas for react-select //\r\n    const changeSuppliersData = (data) => {\r\n        const suppliers = map(data, (supplier) => {\r\n            return {\r\n                label: supplier.name,\r\n                value: supplier._id,\r\n            }\r\n        })\r\n        setSuppliersData(suppliers)\r\n    }\r\n\r\n    const changeProductsData = (data) => {\r\n        const products = map(data, (product) => {\r\n            return {\r\n                label:\r\n                    product.productdata.code + ' - ' + product.productdata.name,\r\n                value: product._id,\r\n                barcode: product.productdata.barcode,\r\n            }\r\n        })\r\n        setProductsData(products)\r\n    }\r\n\r\n    const deleteIncoming = (product) => {\r\n        const f = filter(incomings, (incoming) => incoming._id !== product._id)\r\n        setIncomings(f)\r\n        const temps = filter(\r\n            temporaryIncomings,\r\n            (temp) => temp._id !== product._id\r\n        )\r\n        setTemporaryIncomings(temps)\r\n        if (temps.length === 0) {\r\n            dispatch(clearTemporary())\r\n        }\r\n    }\r\n\r\n    const CheckIncoming = (products) => {\r\n        for (const product of products) {\r\n            if (product.pieces < 1) {\r\n                return universalToast(t('Mahsulot sonini kiriting!'), 'warning')\r\n            }\r\n            if (product.unitprice < 0.01) {\r\n                return universalToast(\r\n                    t('Mahsulot qabul narxini kiriting!'),\r\n                    'warning'\r\n                )\r\n            }\r\n            if (product.sellingprice < product.unitprice) {\r\n                return universalToast(\r\n                    t(\"Sotish narxi olish narxidan kam bo'lmasin\"),\r\n                    'warning'\r\n                )\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkIncomingModal = (product) => {\r\n        if (Number(product.pieces) < 1) {\r\n            return universalToast(t('Mahsulot sonini kiriting!'), 'warning')\r\n        }\r\n        if (Number(product.unitprice) < 0.01) {\r\n            return universalToast(\r\n                t('Mahsulot qabul narxini kiriting!'),\r\n                'warning'\r\n            )\r\n        }\r\n        if (Number(product.sellingprice) < Number(product.unitprice)) {\r\n            return universalToast(\r\n                t(\"Sotish narxi olish narxidan kam bo'lmasin\"),\r\n                'warning'\r\n            )\r\n        }\r\n        return false\r\n    }\r\n\r\n    // request functions\r\n    const createIncoming = () => {\r\n        const postincoming = map(incomings, (incoming) => {\r\n            let obj = { ...incoming }\r\n            delete obj._id\r\n            delete obj.procient\r\n            return obj\r\n        })\r\n\r\n        if (!CheckIncoming(postincoming)) {\r\n            if (incomings.length) {\r\n                const all = reduceSumm(incomings, 'totalprice')\r\n                const allUzs = reduceSumm(incomings, 'totalpriceuzs')\r\n                setAllPayment(all)\r\n                setAllPaymentUzs(allUzs)\r\n                setPaymentCash(all)\r\n                setPaymentCashUzs(allUzs)\r\n                setPaid(all)\r\n                setPaidUzs(allUzs)\r\n                setPaymentModalVisible(true)\r\n                setExchangerate(currentExchangerate(allUzs, all))\r\n            } else {\r\n                !currency ? warningCurrencyRate() : warningSaleProductsEmpty()\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeTemporary = () => {\r\n        if (\r\n            temporary.incomings &&\r\n            temporary.incomings.length > 0 &&\r\n            temporaryIncomings.length > 0\r\n        ) {\r\n            dispatch(\r\n                deleteTemporary({\r\n                    _id: temporary._id,\r\n                })\r\n            )\r\n            dispatch(clearTemporary())\r\n        }\r\n    }\r\n\r\n    const createTemporary = () => {\r\n        removeTemporary()\r\n        dispatch(\r\n            addTemporary({\r\n                market: _id,\r\n                temporaryincoming: {\r\n                    supplier,\r\n                    incomings,\r\n                },\r\n            })\r\n        ).then(({ error }) => {\r\n            if (!error) {\r\n                setSelectSupplierValue({\r\n                    label: t('Yetkazib beruvchi'),\r\n                    value: '',\r\n                })\r\n                setSelectProductValue({\r\n                    label: t('Mahsulotlar'),\r\n                    value: '',\r\n                })\r\n                navigate('/maxsulotlar/qabul/saqlanganlar')\r\n            }\r\n        })\r\n    }\r\n\r\n    // Tableheader\r\n    const headers = [\r\n        {\r\n            title: t('№'),\r\n            styles: 'w-[8%]',\r\n        },\r\n        {\r\n            title: t('Kodi'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Nomi'),\r\n        },\r\n        {\r\n            title: t('Soni'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Narxi'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Avvalgi narxi'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: t('Jami'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: 'Optom narx',\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: '',\r\n            styles: 'w-[5%]',\r\n        },\r\n    ]\r\n\r\n    // sales functions\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setSelectProductValue('')\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(allPayment)\r\n                    setPaymentCashUzs(allPaymentUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(allPayment)\r\n                    setPaymentCardUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(allPayment)\r\n                    setPaymentTransferUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment)\r\n                    setPaymentDebtUzs(allPaymentUzs)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment)\r\n        const maxSumUzs = Math.abs(allPaymentUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, exchangerate))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, exchangerate))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate))\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleClickPay = () => {\r\n        if (delay === null) {\r\n            delay = window.setTimeout(() => {\r\n                delay = null\r\n                setModalBody('complete')\r\n                setModalVisible(true)\r\n            }, 300)\r\n        }\r\n    }\r\n    const handleDoubleClick = () => {\r\n        if (!loading) {\r\n            window.clearTimeout(delay)\r\n            delay = null\r\n            handleApprovePay()\r\n        }\r\n    }\r\n    const handleApprovePay = () => {\r\n        if (!loading) {\r\n            const postincoming = map(incomings, (incoming) => {\r\n                let obj = { ...incoming }\r\n                delete obj._id\r\n                delete obj.procient\r\n                return obj\r\n            })\r\n            dispatch(\r\n                addIncoming({\r\n                    products: [...postincoming],\r\n                    user: user._id,\r\n                    payment: {\r\n                        totalprice: Number(allPayment),\r\n                        totalpriceuzs: Number(allPaymentUzs),\r\n                        type: paymentType,\r\n                        cash: Number(paymentCash),\r\n                        cashuzs: Number(paymentCashUzs),\r\n                        card: Number(paymentCard),\r\n                        carduzs: Number(paymentCardUzs),\r\n                        transfer: Number(paymentTransfer),\r\n                        transferuzs: Number(paymentTransferUzs),\r\n                    },\r\n                })\r\n            ).then(({ error }) => {\r\n                removeTemporary()\r\n                dispatch(getProducts())\r\n                !error && navigate('/maxsulotlar/qabul/qabullar')\r\n            })\r\n        }\r\n    }\r\n    const changeComment = (e) => {\r\n        setSaleComment(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        suppliers.length < 1 && dispatch(getAllSuppliers(_id))\r\n        suppliers.length > 0 && changeSuppliersData(suppliers)\r\n    }, [dispatch, _id, suppliers])\r\n\r\n    useEffect(() => {\r\n        products.length < 1 && dispatch(getProducts({ market: _id }))\r\n        products.length > 0 && changeProductsData(products)\r\n    }, [dispatch, _id, products])\r\n\r\n    useEffect(() => {\r\n        if (successAdd) {\r\n            setIncomings([])\r\n            dispatch(clearSuccessAdd())\r\n        }\r\n    }, [dispatch, successAdd])\r\n\r\n    useEffect(() => {\r\n        if (successTemporary) {\r\n            setIncomings([])\r\n            dispatch(clearSuccessTemporary())\r\n        }\r\n    }, [dispatch, successTemporary])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(temporary).length > 0) {\r\n            setSupplier(temporary.supplier)\r\n            setIncomings(temporary.incomings)\r\n            setTemporaryIncomings(temporary.incomings)\r\n            setSelectSupplierValue({\r\n                label: temporary.supplier.name,\r\n                value: temporary.supplier._id,\r\n            })\r\n        }\r\n    }, [temporary, dispatch])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearTemporary())\r\n            setIncomings([])\r\n            setTemporaryIncomings([])\r\n            setSupplier({})\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {loading && <div className='absolute top-0 left-0 z-30'>\r\n                <Loader />\r\n            </div>}\r\n            <div className={'relative grow overflow-auto'}>\r\n                <CustomerPayment\r\n                    returned={true}\r\n                    type={paymentType}\r\n                    active={paymentModalVisible}\r\n                    togglePaymentModal={togglePaymentModal}\r\n                    changePaymentType={handleChangePaymentType}\r\n                    onChange={handleChangePaymentInput}\r\n                    client={''}\r\n                    allPayment={currencyType === 'USD' ? allPayment : allPaymentUzs}\r\n                    card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                    cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                    debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                    hasDiscount={false}\r\n                    transfer={\r\n                        currencyType === 'USD'\r\n                            ? paymentTransfer\r\n                            : paymentTransferUzs\r\n                    }\r\n                    paid={currencyType === 'USD' ? paid : paidUzs}\r\n                    handleClickPay={handleClickPay}\r\n                    changeComment={changeComment}\r\n                    saleComment={saleComment}\r\n                    onDoubleClick={handleDoubleClick}\r\n                />\r\n                <div className='flex items-center mainPadding'>\r\n                    <div className='w-full pr-[1.25rem] border-r border-blue-100'>\r\n                        <SelectInput\r\n                            options={suppliersData}\r\n                            onSelect={selectSupplier}\r\n                            value={selectSupplierValue}\r\n                            placeholder={t('Yetkazib beruvchi')}\r\n                        />\r\n                    </div>\r\n                    <div className='w-full pl-[1.25rem]'>\r\n                        <SelectInput\r\n                            value={selectProductValue}\r\n                            options={productsData}\r\n                            onSelect={selectProduct}\r\n                            isDisabled={!supplier._id}\r\n                            placeholder={t('Maxsulotlar')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <p className='text-[1.25rem] text-blue-900 mainPadding'>\r\n                    {t('Yetkazib beruvchi')}: {supplier.name}\r\n                </p>\r\n                <div\r\n                    className={`${incomings.length > 0 ? 'tableContainerPadding' : 'hidden'\r\n                        }`}\r\n                >\r\n                    <Table\r\n                        page={'registerincoming'}\r\n                        headers={headers}\r\n                        data={incomings}\r\n                        currency={currencyType}\r\n                        changeHandler={changeIncomings}\r\n                        Delete={deleteIncoming}\r\n                    />\r\n                    <div className='flex items-center justify-end gap-[0.625rem] pt-[1.25rem]'>\r\n                        <SaveBtn text={t('Saqlash')} onClick={createTemporary} />\r\n                        <ConfirmBtn\r\n                            text={t('Tasdiqlash')}\r\n                            onClick={createIncoming}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <UniversalModal\r\n                    isOpen={modalVisible}\r\n                    body={modalBody}\r\n                    headerText={t(\"To'lovni amalga oshirishni tasdiqlaysizmi ?\")}\r\n                    title={t(\r\n                        \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                    )}\r\n                    product={incomingModal}\r\n                    toggleModal={toggleModal}\r\n                    changeProduct={changeIncomings}\r\n                    approveFunction={\r\n                        modalBody === 'complete'\r\n                            ? handleApprovePay\r\n                            : addProductToIncomings\r\n                    }\r\n                    currency={currencyType}\r\n                />\r\n            </div>\r\n            <BarcodeReader onError={handleError} onScan={handleScan} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterIncoming\r\n"],"names":["SaleBtn","_ref","onClick","text","type","active","icons","cash","_jsx","IoCashOutline","className","size","card","IoCardOutline","transfer","IoSwapHorizontalOutline","mixed","IoGitCompareOutline","_jsxs","concat","children","Payment","_ref3","onDoubleClick","IoWalletOutline","value","onChange","option","onSelect","useSelector","state","currency","currencyType","placeholder","e","target","onWheel","blur","min","DiscountInput","label","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","TableInput","returned","togglePaymentModal","_ref$type","_ref$cash","_ref$card","_ref$transfer","discount","discountUzs","hasDiscount","debt","allPayment","allPaymentUzs","_ref$paid","paid","_ref$client","client","changePaymentType","discountSelectOption","handleChangeDiscountSelectOption","handleClickDiscountBtn","handleChangeDiscount","handleClickPay","exchangerate","allMainPayment","saleComment","changeComment","_ref$paymentUsd","paymentUsd","debtuzs","debtType","setDebtType","location","useLocation","defineLabel","PaymentInput","t","key","map","obj","pathname","includes","_useSelector","stopPropagation","autoFocus","IoPerson","Number","roundUsd","Math","round","Checkbox","id","toLocaleString","useTranslation","dispatch","useDispatch","navigate","useNavigate","login","_id","market","user","_useSelector2","_useSelector3","incoming","suppliers","products","successAdd","successTemporary","temporary","loading","_useState","useState","_useState2","_slicedToArray","suppliersData","setSuppliersData","_useState3","_useState4","productsData","setProductsData","_useState5","_useState6","supplier","setSupplier","_useState7","_useState8","incomings","setIncomings","_useState9","_useState10","incomingModal","setIncomingModal","_useState11","_useState12","temporaryIncomings","setTemporaryIncomings","_useState13","_useState14","selectSupplierValue","setSelectSupplierValue","_useState15","_useState16","selectProductValue","setSelectProductValue","_useState17","_useState18","paymentModalVisible","setPaymentModalVisible","_useState19","_useState20","paymentType","setPaymentType","_useState21","_useState22","paymentCash","setPaymentCash","_useState23","_useState24","paymentCashUzs","setPaymentCashUzs","_useState25","_useState26","paymentCard","setPaymentCard","_useState27","_useState28","paymentCardUzs","setPaymentCardUzs","_useState29","_useState30","paymentTransfer","setPaymentTransfer","_useState31","_useState32","paymentTransferUzs","setPaymentTransferUzs","_useState33","_useState34","paymentDebt","setPaymentDebt","_useState35","_useState36","paymentDebtUzs","setPaymentDebtUzs","_useState37","_useState38","setAllPayment","_useState39","_useState40","setAllPaymentUzs","_useState41","_useState42","setPaid","_useState43","_useState44","paidUzs","setPaidUzs","_useState45","_useState46","modalBody","setModalBody","_useState47","_useState48","modalVisible","setModalVisible","_useState49","_useState50","setExchangerate","_useState51","_useState52","setSaleComment","delay","selectProduct","some","universalToast","addIncomingToModal","barcode","product","_toConsumableArray","filter","oldprice","price","incomingprice","oldpriceuzs","incomingpriceuzs","_objectSpread","productdata","pieces","unitprice","unitpriceuzs","totalprice","totalpriceuzs","unit","sellingprice","sellingpriceuzs","tradeprice","tradepriceuzs","procient","changeIncomings","check","property","countUsd","UzsToUsd","countUzs","UsdToUzs","countProcient","roundUzs","changeunitprice","changeunitpriceusd","changesellingprice","changesellingpriceusd","changeProcient","changetradeprice","checkIncomingModal","removeTemporary","length","deleteTemporary","clearTemporary","headers","title","styles","toggleModal","setTimeout","writePayment","maxSum","abs","maxSumUzs","all","allUzs","warningMorePayment","allUsd","handleApprovePay","postincoming","addIncoming","payment","cashuzs","carduzs","transferuzs","then","_ref2","error","getProducts","useEffect","getAllSuppliers","data","name","changeSuppliersData","code","changeProductsData","clearSuccessAdd","clearSuccessTemporary","Object","keys","Loader","CustomerPayment","bool","window","clearTimeout","SelectInput","options","apply","isDisabled","Table","page","changeHandler","Delete","f","temps","temp","SaveBtn","addTemporary","temporaryincoming","ConfirmBtn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","CheckIncoming","reduceSumm","currentExchangerate","warningSaleProductsEmpty","warningCurrencyRate","UniversalModal","isOpen","body","headerText","changeProduct","approveFunction","BarcodeReader","onError","onScan","item"],"sourceRoot":""}