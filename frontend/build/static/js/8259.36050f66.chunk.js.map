{"version":3,"file":"static/js/8259.36050f66.chunk.js","mappings":"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","sources":["Components/FilialButtons/FilialButtons.js","Config/socket.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","../node_modules/framer-motion/dist/es/utils/use-force-update.js","Pages/FilialExchanges/FilialExchengesProduct.js","Pages/Labels/LabelsIncome.js","Components/Filial/Filial.js","Pages/MarketFilials/MarketFilials.js","Pages/ProductIdExchanges/ProductIdExchanges.js","Pages/Sale/Routes/Sellings.js"],"sourcesContent":["import React from 'react'\r\nimport {IoCartOutline, IoCubeOutline, IoEnterOutline, IoNewspaperOutline} from 'react-icons/io5'\r\n\r\nfunction FilialButtons({type, onClick, active}) {\r\n    const propsType = {\r\n        product: {\r\n            icon: <IoNewspaperOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#12B76A]'\r\n        },\r\n        selling: {\r\n            icon: <IoCartOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#F79009]'\r\n        },\r\n        payments: {\r\n            icon: <IoCubeOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#00B4CC]'\r\n        },\r\n        income: {\r\n            icon: <IoEnterOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#00B4CC]'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`${active ? 'filial-active' : propsType[type].bgColor} shopButton`}\r\n        >\r\n            {propsType[type].icon}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default FilialButtons\r\n","import io from 'socket.io-client'\r\nconst baseURL = process.env.REACT_APP_API_SOCKET_ENDPOINT || 'http://alo24.uz'\r\n\r\nconst socket = io(baseURL)\r\nconst userData = JSON.parse(localStorage.getItem('userData'))\r\nsocket.auth = {token: userData.token, market: userData.market}\r\n\r\nexport default socket\r\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n    var unloadingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };\n","import React, {useEffect, useState} from 'react'\r\nimport Table from '../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    getFilialShopData,\r\n    getExchangesFilterId,\r\n    clearSearchedExchanges,\r\n    changeEndDate,\r\n    changeStartDate,\r\n} from './filialExchengesSlice.js'\r\nimport {motion} from 'framer-motion'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport ExportBtn from '../../Components/Buttons/ExportBtn'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport {filter, map} from 'lodash'\r\nimport NotFind from '../../Components/NotFind/NotFind'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader'\r\nimport {exportExcel} from '../../App/globalFunctions'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages'\r\n\r\nfunction FilialExchangesProduct({id, currency}) {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        shops,\r\n        loading,\r\n        total,\r\n        totalSearched,\r\n        searchedExchanges,\r\n        startDate,\r\n        endDate,\r\n    } = useSelector((state) => state.filialData)\r\n\r\n    const headers = [\r\n        {styles: 'w-[10%] text-start', title: '№'},\r\n        {styles: 'w-[10%] text-start', filter: 'createdAt', title: 'Sana'},\r\n        {styles: 'w-[10%] text-start', filter: 'id', title: 'ID'},\r\n        {styles: 'text-start', title: 'Maxsulot turi'},\r\n        {styles: 'text-start', title: 'Maxsulot soni'},\r\n        {styles: 'text-start', title: 'Qabul qilish'},\r\n        {styles: 'text-start', title: 'Sotish'},\r\n        {styles: 'w-[10%]', title: ' '},\r\n    ]\r\n\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [data, setData] = useState([])\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchById, setSearchById] = useState('')\r\n    const [searchedData, setSearchedData] = useState(searchedExchanges)\r\n\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    const filterById = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchById(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(shops)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(shops, (item) => {\r\n                return item._id.includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterByIdWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchById.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(getExchangesFilterId(body))\r\n        }\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Almashinilgan tovarlar'\r\n        const headersExcel = [\r\n            '№',\r\n            'Sana',\r\n            'Id',\r\n            'Maxsulot turi',\r\n            'Maxsulot Soni',\r\n            'Jami olish summasi',\r\n            'Jami sotish summasi',\r\n        ]\r\n        if (data?.length > 0) {\r\n            const ExchangesDatas = map(data, (item, index) => ({\r\n                nth: index + 1,\r\n                date: new Date(item?.createdAt).toLocaleDateString() || '',\r\n                product_id: item?._id || '',\r\n                product_type: item?.products.length || '',\r\n                product_number: item?.pieces || '',\r\n                all_get_product:\r\n                    currency === 'UZS'\r\n                        ? (\r\n                              Math.round(item.totalincomingpriceuzs * 1) / 1\r\n                          ).toLocaleString('ru-RU')\r\n                        : (\r\n                              Math.round(item.totalincomingprice * 1000) / 1000\r\n                          ).toLocaleString('ru-RU'),\r\n                all_sell_product:\r\n                    currency === 'UZS'\r\n                        ? (\r\n                              Math.round(item?.totalsellingpriceuzs * 1) / 1\r\n                          ).toLocaleString('ru-RU')\r\n                        : (\r\n                              Math.round(item?.totalsellingprice * 1000) / 1000\r\n                          ).toLocaleString('ru-RU'),\r\n            }))\r\n            exportExcel(ExchangesDatas, fileName, headersExcel)\r\n        } else {\r\n            universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n        }\r\n    }\r\n\r\n    const handleStartDate = (e) => {\r\n        dispatch(changeStartDate({start: e.toISOString()}))\r\n    }\r\n    const handleEndDate = (e) => {\r\n        dispatch(changeEndDate({end: e.toISOString()}))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate: new Date(\r\n                new Date(startDate).getFullYear(),\r\n                new Date(startDate).getMonth(),\r\n                new Date(startDate).getDate()\r\n            ).toISOString(),\r\n            endDate: endDate,\r\n            filial: id,\r\n        }\r\n        dispatch(getFilialShopData(body))\r\n    }, [dispatch, id, startDate, endDate, currentPage, showByTotal])\r\n    console.log('worgverge');\r\n    useEffect(() => {\r\n        setData(shops)\r\n    }, [dispatch, shops, startDate, endDate])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedExchanges)\r\n    }, [searchedExchanges])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <div className='pagination-supplier mainPadding'>\r\n                <ExportBtn onClick={exportData} />\r\n                <p className='supplier-title'>Almashinilgan tovarlar</p>\r\n                <div>\r\n                    {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                        <Pagination\r\n                            countPage={Number(showByTotal)}\r\n                            totalDatas={totalSearched || filteredDataTotal}\r\n                            setCurrentPage={setCurrentPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <SearchForm\r\n                filterBy={['total', 'id', 'startDate', 'endDate']}\r\n                filterByTotal={filterByTotal}\r\n                searchById={searchById}\r\n                filterById={filterById}\r\n                filterByIdWhenPressEnter={filterByIdWhenPressEnter}\r\n                startDate={new Date(startDate)}\r\n                endDate={new Date(endDate)}\r\n                setStartDate={handleStartDate}\r\n                setEndDate={handleEndDate}\r\n            />\r\n            <div className='pl-[2.5rem] pr-[1.25rem] pb-[1.25rem]'>\r\n                {loading ? (\r\n                    <SmallLoader />\r\n                ) : data.length === 0 ? (\r\n                    <NotFind text={'Tovarlar mavjud emas'} />\r\n                ) : (\r\n                    <Table\r\n                        data={data}\r\n                        page={'filialShop'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        currency={currency}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default FilialExchangesProduct\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport ExportBtn from '../../Components/Buttons/ExportBtn'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport {motion} from 'framer-motion'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {\r\n    clearSearchedProducts,\r\n    getIncomeProducts,\r\n    getProductsAll,\r\n    getProductsByFilter,\r\n} from '../Products/Create/productSlice.js'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport {BarCode} from '../../Components/BarCode/BarCode.js'\r\nimport {exportExcel, universalSort} from '../../App/globalFunctions.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {filter, map} from 'lodash'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages'\r\n\r\nconst LabelsIncome = ({id}) => {\r\n    const {t} = useTranslation(['common'])\r\n\r\n    const headers = [\r\n        {\r\n            title: t('№'),\r\n        },\r\n        {\r\n            title: t('Kategoriyasi'),\r\n            filter: 'category.code',\r\n        },\r\n        {\r\n            title: t('Maxsulot kodi'),\r\n            filter: 'productdata.code',\r\n        },\r\n        {\r\n            title: t('Maxsulot nomi'),\r\n            filter: 'productdata.name',\r\n        },\r\n        {\r\n            title: t('Soni(dona)'),\r\n            filter: 'product.total',\r\n        },\r\n        {\r\n            title: t('Olish'),\r\n            filter: 'price.incomingprice',\r\n        },\r\n        {\r\n            title: t('Olish jami'),\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            filter: 'price.sellingprice',\r\n        },\r\n        {\r\n            title: t('Sotish jami'),\r\n        },\r\n        {\r\n            title: t('Cheklar soni'),\r\n        },\r\n        {\r\n            title: '',\r\n        },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        products,\r\n        total,\r\n        loading,\r\n        searchedProducts,\r\n        totalSearched,\r\n        loadingExcel,\r\n    } = useSelector((state) => state.products)\r\n\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n\r\n    const {\r\n        market: {name},\r\n    } = useSelector((state) => state.login)\r\n\r\n    const [data, setData] = useState(products)\r\n    const [searchedData, setSearchedData] = useState(searchedProducts)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchByCode, setSearchByCode] = useState('')\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [searchByCategory, setSearchByCategory] = useState('')\r\n    const [productForCheques, setProductForCheques] = useState(null)\r\n    const [countOfCheques, setCountOfCheques] = useState('')\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [dataLoaded, setDataLoaded] = useState(false)\r\n    const [printedData, setPrintedData] = useState([])\r\n\r\n    // handle change of search inputs\r\n    const filterByCode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCode(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // filter by category\r\n    const filterByCategory = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCategory(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.category.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        '',\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        -1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(\r\n                searchedData.length > 0 ? searchedData : data,\r\n                searchedData.length > 0 ? setSearchedData : setData,\r\n                filterKey,\r\n                -1,\r\n                searchedData ? searchedProducts : products,\r\n                searchedData.length > 0\r\n            )\r\n        }\r\n    }\r\n\r\n    // handle print\r\n    const componentRef = useRef()\r\n    const onBeforeGetContentResolve = useRef()\r\n\r\n    const handleOnBeforeGetContent = () => {\r\n        setDataLoaded(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n            setTimeout(() => {\r\n                setDataLoaded(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n    const handleChequeCounts = (e) => {\r\n        setCountOfCheques(e.target.value)\r\n        setProductForCheques(searchedData.length > 0 ? searchedData : data)\r\n    }\r\n\r\n    const handleChequeCount = (e, product) => {\r\n        const prevIndex = printedData.findIndex(\r\n            (item) => item.product._id === product._id\r\n        )\r\n        if (prevIndex !== -1) {\r\n            if (e.target.value.trim() !== '') {\r\n                printedData[prevIndex].numberOfChecks = Number(e.target.value)\r\n            } else {\r\n                printedData.splice(prevIndex, 1)\r\n            }\r\n            setPrintedData([...printedData])\r\n        } else {\r\n            setPrintedData([\r\n                ...printedData,\r\n                {product, numberOfChecks: Number(e.target.value)},\r\n            ])\r\n        }\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n    })\r\n\r\n    const handlePrintToProduct = async (product, single) => {\r\n        if (single)\r\n            setPrintedData([\r\n                ...filter(\r\n                    printedData,\r\n                    (item) => item.product._id === product._id\r\n                ),\r\n            ])\r\n        await handlePrint()\r\n    }\r\n\r\n    const filterByCodeAndNameAndCategoryWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                filialId: id,\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    category: searchByCategory.replace(/\\s+/g, ''),\r\n                },\r\n            }\r\n            dispatch(getProductsByFilter(body))\r\n        }\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Etiketka'\r\n        const exportProductHead = [\r\n            '№',\r\n            'Mahsulot kodi',\r\n            'Mahsulot nomi',\r\n            'Soni',\r\n            'Olish narxi USD',\r\n            'Olish narxi UZS',\r\n            'Olish narxi jami USD',\r\n            'Olish narxi jami UZS',\r\n            'Sotish narxi USD',\r\n            'Sotish narxi UZS',\r\n            'Sotish narxi jami UZS',\r\n            'Sotish narxi jami USD',\r\n        ]\r\n        dispatch(getProductsAll()).then(({error, payload}) => {\r\n            if (!error) {\r\n                if (payload?.length > 0) {\r\n                    const ReportData = map(payload, (item, index) => ({\r\n                        nth: index + 1,\r\n                        code: item?.productdata?.code || '',\r\n                        name: item?.productdata?.name || '',\r\n                        total: item.total + item?.unit?.name || '',\r\n                        incomingprice: item?.price?.incomingprice || '',\r\n                        incomingpriceuzs: item?.price?.incomingpriceuzs || '',\r\n                        incomingpricealluzs:\r\n                            item?.price?.incomingpriceuzs * item.total,\r\n                        incomingpriceallusd:\r\n                            item?.price?.incomingprice * item.total,\r\n                        sellingprice: item?.price?.sellingprice || '',\r\n                        sellingpriceuzs: item?.price?.sellingpriceuzs || '',\r\n                        sellingalluzs:\r\n                            item?.price?.sellingpriceuzs * item.total,\r\n                        sellingallusd: item?.price?.sellingprice * item.total,\r\n                    }))\r\n                    exportExcel(ReportData, fileName, exportProductHead)\r\n                } else {\r\n                    universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            filial: id,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ''),\r\n            },\r\n        }\r\n        dispatch(getIncomeProducts(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, showByTotal, dispatch])\r\n\r\n    useEffect(() => {\r\n        setData(products)\r\n    }, [products])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedProducts)\r\n    }, [searchedProducts])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            dataLoaded &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, dataLoaded])\r\n\r\n    useEffect(() => {\r\n        if (!dataLoaded) {\r\n            setPrintedData([])\r\n            setCountOfCheques('')\r\n            setProductForCheques(null)\r\n        }\r\n    }, [dataLoaded])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            {loadingExcel ||\r\n                (dataLoaded && (\r\n                    <div className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                        <Spinner />\r\n                    </div>\r\n                ))}\r\n            <div className='pagination mainPadding'>\r\n                <ExportBtn onClick={exportData} />\r\n                <p className='product_name'>{t('Etiketka')}</p>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <SearchForm\r\n                filterBy={[\r\n                    'total',\r\n                    'category',\r\n                    'code',\r\n                    'name',\r\n                    'checks',\r\n                    'printBtn',\r\n                ]}\r\n                filterByCode={filterByCode}\r\n                filterByName={filterByName}\r\n                searchByCode={searchByCode}\r\n                searchByName={searchByName}\r\n                searchByCategory={searchByCategory}\r\n                filterByCategory={filterByCategory}\r\n                numberOfChecks={countOfCheques}\r\n                filterByTotal={filterByTotal}\r\n                filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                    filterByCodeAndNameAndCategoryWhenPressEnter\r\n                }\r\n                clickPrintBtn={handlePrintToProduct}\r\n                setNumberOfChecks={handleChequeCounts}\r\n            />\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Maxsulotlar mavjud emas')} />\r\n                ) : (\r\n                    <Table\r\n                        page={'labelsincome'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        currency={currencyType}\r\n                        headers={headers}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        placeholder={'misol : 10'}\r\n                        changeHandler={handleChequeCount}\r\n                        Print={handlePrintToProduct}\r\n                        printedData={printedData}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='hidden'>\r\n                <BarCode\r\n                    currency={currencyType}\r\n                    componentRef={componentRef}\r\n                    countOfCheques={countOfCheques}\r\n                    productForCheques={productForCheques}\r\n                    printedData={printedData}\r\n                    marketName={name}\r\n                />\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default LabelsIncome\r\n","import React, {useEffect, useState} from 'react'\r\nimport FilialButtons from '../FilialButtons/FilialButtons'\r\nimport Avatar from '../Avatar/Avatar.js'\r\nimport {Link, Route, Routes, useLocation, useParams} from 'react-router-dom'\r\nimport Labels from '../../Pages/Labels/Labels.js'\r\nimport {AnimatePresence} from 'framer-motion'\r\nimport Sellings from '../../Pages/Sale/Routes/Sellings'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {useSelector} from 'react-redux'\r\nimport FilialExchangesProduct from '../../Pages/FilialExchanges/FilialExchengesProduct'\r\nimport ProductIdExchanges from '../../Pages/ProductIdExchanges/ProductIdExchanges'\r\nimport LabelsIncome from '../../Pages/Labels/LabelsIncome'\r\nconst Filial = ({active, value}) => {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const {tablename, _id} = useParams()\r\n    const location = useLocation()\r\n    const [reportOpen, setReprotOpen] = useState(true)\r\n    const [salesOpen, setSalesOpen] = useState(true)\r\n    const [paymentOpen, setPaymentOpen] = useState(true)\r\n    const [useParamsId, setUseParamsId] = useState(_id)\r\n    const [incomeProducts, setIncomeProducts] = useState()\r\n\r\n\r\n    const handleReportOpen = (e) => {\r\n        e && e.preventDefault()\r\n        setReprotOpen(!reportOpen)\r\n        setSalesOpen(true)\r\n        setPaymentOpen(true)\r\n    }\r\n\r\n    const handleSalesOpen = (e) => {\r\n        e && e.preventDefault()\r\n        setSalesOpen(!salesOpen)\r\n        setReprotOpen(true)\r\n        setPaymentOpen(true)\r\n    }\r\n\r\n    const handlePaymentOpen = (e) => {\r\n        e && e.preventDefault()\r\n        setPaymentOpen(!paymentOpen)\r\n        setReprotOpen(true)\r\n        setSalesOpen(true)\r\n    }\r\n\r\n    const handleIncomeProducts = (e) => {\r\n        e && e.preventDefault()\r\n        setIncomeProducts(!incomeProducts)\r\n        setReprotOpen(true)\r\n        setSalesOpen(true)\r\n    }\r\n\r\n    const {t} = useTranslation(['common'])\r\n\r\n    useEffect(() => {\r\n        if (_id) {\r\n            setUseParamsId(_id)\r\n        }\r\n    }, [_id])\r\n\r\n    return (\r\n        <section>\r\n            <div\r\n                className={`shops_card flex gap-[1.25rem] ${\r\n                    active ? 'active_shop' : ''\r\n                }`}\r\n            >\r\n                <Avatar border={true} director={value.director} />\r\n                <div className='product-cost'>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Kategoriyalar')}</p>\r\n                        <p className='product-number'>{value.typecount}</p>\r\n                    </div>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Maxsulotlar turi')}</p>\r\n                        <p className='product-number'>{value.productcount}</p>\r\n                    </div>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Jami')}</p>\r\n                        <p className='product-total'>\r\n                            {currencyType === 'UZS'\r\n                                ? value.totalPrice.toLocaleString('ru-Ru')\r\n                                : value.totalPriceUSD.toLocaleString(\r\n                                      'ru-Ru'\r\n                                  )}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='shop-name flex flex-col w-[13.4375rem]'>\r\n                    <div className='shop-title'>\r\n                        <p>{t(value.shopname)}</p>\r\n                    </div>\r\n                    <div className={'filial-btn'}>\r\n                        <Link\r\n                            to={`${\r\n                                reportOpen\r\n                                    ? `/dukonlar/filiallar/report/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            }`}\r\n                            onClick={() => handleReportOpen()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'product'}\r\n                                active={\r\n                                    _id === value._id && tablename === 'report'\r\n                                }\r\n                            />\r\n                        </Link>\r\n                        <Link\r\n                            to={`${\r\n                                salesOpen\r\n                                    ? `/dukonlar/filiallar/sales/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            } `}\r\n                            onClick={() => handleSalesOpen()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'selling'}\r\n                                active={\r\n                                    _id === value._id && tablename === 'sales'\r\n                                }\r\n                            />\r\n                        </Link>\r\n                        <Link\r\n                            to={`${\r\n                                paymentOpen\r\n                                    ? `/dukonlar/filiallar/payment/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            }`}\r\n                            onClick={() => handlePaymentOpen()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'payments'}\r\n                                active={\r\n                                    (_id === value._id &&\r\n                                        tablename === 'payment') ||\r\n                                    (_id === value._id &&\r\n                                        location.pathname ===\r\n                                            `/dukonlar/filiallar/payment/${_id}/exchangesId`)\r\n                                }\r\n                            />\r\n                        </Link>\r\n                        <Link\r\n                            to={`${\r\n                                incomeProducts\r\n                                    ? `/dukonlar/filiallar/income/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            }`}\r\n                            onClick={() => handleIncomeProducts()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'income'}\r\n                                active={\r\n                                    (_id === value._id &&\r\n                                        tablename === 'income') ||\r\n                                    (_id === value._id &&\r\n                                        location.pathname ===\r\n                                            `/dukonlar/filiallar/income/${_id}`)\r\n                                }\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AnimatePresence>\r\n                <Routes location={location} key={location.pathname}>\r\n                    <Route\r\n                        path={`/:tablename/:_id`}\r\n                        element={\r\n                            _id === value._id ? (\r\n                                tablename === 'report' ? (\r\n                                    <Labels id={_id} />\r\n                                ) : tablename === 'income' ? (\r\n                                    <LabelsIncome id={_id} />\r\n                                ) :  tablename === 'sales' ? (\r\n                                    <Sellings id={_id} />\r\n                                ) : (\r\n                                    <FilialExchangesProduct\r\n                                        id={value._id}\r\n                                        currency={currencyType}\r\n                                    />\r\n                                )\r\n                            ) : (\r\n                                ''\r\n                            )\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path={`/:tablename/:_id/exchangesId`}\r\n                        element={\r\n                            useParamsId === value._id ? (\r\n                                <ProductIdExchanges currency={currencyType} />\r\n                            ) : (\r\n                                ''\r\n                            )\r\n                        }\r\n                    />\r\n                </Routes>\r\n            </AnimatePresence>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Filial\r\n","import React, {useEffect, useState} from 'react'\r\nimport Filial from '../../Components/Filial/Filial'\r\nimport {uniqueId, map} from 'lodash'\r\nimport {motion} from 'framer-motion'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader'\r\nimport socket from '../../Config/socket.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {setFilialDatas} from '../ProductExchanges/productExchangesSlice.js'\r\n\r\nfunction MarketFilials() {\r\n    const {market} = useSelector((state) => state.login)\r\n    const dispatch = useDispatch()\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        market &&\r\n            socket.emit('getAllFilials', {\r\n                market: market._id,\r\n            })\r\n        market &&\r\n            socket.on('getAllFilials', ({id, filials}) => {\r\n                if (id === market._id) {\r\n                    setLoading(false)\r\n                    dispatch(setFilialDatas(filials))\r\n                    setData(\r\n                        map(filials, (filial) => {\r\n                            return {\r\n                                director: {\r\n                                    firstname:\r\n                                        filial?.director?.firstname || '',\r\n                                    lastname: filial?.director?.lastname || '',\r\n                                    image: filial?.director?.image || '',\r\n                                },\r\n                                typecount: filial?.productCategory || 0,\r\n                                productcount: filial?.productCount || 0,\r\n                                totalPrice:\r\n                                    filial?.products?.totalPriceuzs || 0,\r\n                                totalPriceUSD:\r\n                                    filial?.products?.totalPrice || 0,\r\n                                shopname: filial?.name || '',\r\n                                _id: filial?._id || '',\r\n                            }\r\n                        })\r\n                    )\r\n                }\r\n            })\r\n        market &&\r\n            socket.on('error', ({id, err}) => {\r\n                id === market._id && universalToast(err.message, 'error')\r\n            })\r\n    }, [market, dispatch])\r\n\r\n    return (\r\n        <motion.section\r\n            className='mainPadding'\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            {loading && (\r\n                <div className='fixed backdrop-blur-[2px] left-0 right-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            {data.length > 0 &&\r\n                map(data, (value) => (\r\n                    <div className='pb-[1.25rem]' key={uniqueId('filial')}>\r\n                        <Filial value={value} />\r\n                    </div>\r\n                ))}\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default MarketFilials\r\n","import React, {useEffect, useState} from 'react'\r\nimport Table from '../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    getFilialIdProducts,\r\n    getExchangesFilter,\r\n    clearSearchedExchanges,\r\n} from './productIdExchangesSlice.js'\r\nimport {motion} from 'framer-motion'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport ExportBtn from '../../Components/Buttons/ExportBtn'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport {filter, map} from 'lodash'\r\nimport NotFind from '../../Components/NotFind/NotFind'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader'\r\nimport {useLocation, useNavigate} from 'react-router-dom'\r\nimport {exportExcel} from '../../App/globalFunctions'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages'\r\nimport {IoChevronBack} from 'react-icons/io5'\r\nfunction ProductIdExchanges({currency}) {\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const dataId = location?.state?.id\r\n    const dispatch = useDispatch()\r\n    const {idProducts, loading, total, totalSearched, searchedExchanges} =\r\n        useSelector((state) => state.exchangesIdData)\r\n    const headers = [\r\n        {styles: 'w-[10%] text-start', title: '№'},\r\n        {\r\n            styles: 'w-[10%] text-start',\r\n            filter: 'category.code',\r\n            title: 'Kategoriyasi',\r\n        },\r\n        {\r\n            styles: 'w-[10%] text-start',\r\n            filter: 'productdata.code',\r\n            title: 'Kodi',\r\n        },\r\n        {styles: 'text-start', title: 'Maxsulot nomi'},\r\n        {styles: 'text-start', filter: 'pieces', title: 'Maxsulot soni'},\r\n        {styles: 'text-start', title: 'Kelgan narxi'},\r\n        {styles: 'text-start', title: 'Jami summasi'},\r\n    ]\r\n    const [searchedData, setSearchedData] = useState(searchedExchanges)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [data, setData] = useState([])\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchByCategory, setSearchByCategory] = useState('')\r\n    const [searchByCode, setSearchByCode] = useState('')\r\n    const [searchByName, setSearchByName] = useState('')\r\n\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCategory(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(idProducts)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(idProducts, (item) => {\r\n                return item?.category?.code.includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterByCode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCode(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(idProducts)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(idProducts, (item) => {\r\n                return item?.productdata?.code.includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(idProducts)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(idProducts, (item) => {\r\n                return item?.productdata?.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    codeofproduct: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    nameofproduct: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    categoryofproduct: searchByCategory\r\n                        .replace(/\\s+/g, ' ')\r\n                        .trim(),\r\n                },\r\n            }\r\n            dispatch(getExchangesFilter(body))\r\n        }\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Barcha almashinilgan maxsulotlar'\r\n        const exportHeader = [\r\n            '№',\r\n            'Kategoriyasi',\r\n            'Kodi',\r\n            'Maxsulot Nomi',\r\n            'Maxsulot Soni',\r\n            'Kelgan Narxi UZS',\r\n            'Jami Summasi UZS',\r\n        ]\r\n        if (data?.length > 0) {\r\n            const BarcodeData = map(data, (item, index) => ({\r\n                nth: index + 1,\r\n                Category_code: item?.category?.code || '',\r\n                Product_code: item?.productdata?.code || '',\r\n                Product_name: item?.productdata?.name || '',\r\n                Product_number: item?.pieces || '',\r\n                incomingprice:\r\n                    currency === 'UZS'\r\n                        ? (\r\n                              Math.round(item?.price?.incomingpriceuzs * 1) / 1\r\n                          ).toLocaleString('ru-RU')\r\n                        : (\r\n                              Math.round(item?.price?.incomingprice * 1000) /\r\n                              1000\r\n                          ).toLocaleString('ru-RU'),\r\n                allIncomingPrice:\r\n                    currency === 'UZS'\r\n                        ? Math.round(\r\n                              item?.price?.incomingpriceuzs +\r\n                                  item?.price?.sellingpriceuzs\r\n                          ).toLocaleString('ru-RU')\r\n                        : Math.round(\r\n                              item?.price?.incomingprice +\r\n                                  item?.price?.sellingprice\r\n                          ).toLocaleString('ru-RU'),\r\n            }))\r\n            exportExcel(BarcodeData, fileName, exportHeader)\r\n        } else {\r\n            universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage: 0,\r\n            countPage: showByTotal,\r\n            transfer: dataId,\r\n        }\r\n        dispatch(getFilialIdProducts(body))\r\n    }, [dispatch, dataId, currentPage, showByTotal])\r\n\r\n    useEffect(() => {\r\n        setData(idProducts)\r\n    }, [idProducts])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedExchanges)\r\n    }, [searchedExchanges])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <div className='pagination-supplier mainPadding'>\r\n                <div className='flex gap-[1rem] items-center'>\r\n                    <span className='linktoback' onClick={() => navigate(-1)}>\r\n                        <IoChevronBack />\r\n                    </span>\r\n                    <ExportBtn onClick={exportData} />\r\n                </div>\r\n                <p className='supplier-title'>Barcha tovarlar ro'yxati</p>\r\n                <div>\r\n                    {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                        <Pagination\r\n                            countPage={Number(showByTotal)}\r\n                            totalDatas={totalSearched || filteredDataTotal}\r\n                            setCurrentPage={setCurrentPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <SearchForm\r\n                filterBy={['total', 'category', 'code', 'name']}\r\n                filterByTotal={filterByTotal}\r\n                searchByCategory={searchByCategory}\r\n                filterByCategory={filterByCategory}\r\n                searchByCode={searchByCode}\r\n                filterByCode={filterByCode}\r\n                searchByName={searchByName}\r\n                filterByName={filterByName}\r\n                filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                    filterWhenPressEnter\r\n                }\r\n            />\r\n            <div className='pl-[2.5rem] pr-[1.25rem] pb-[1.25rem]'>\r\n                {loading ? (\r\n                    <SmallLoader />\r\n                ) : data.length === 0 ? (\r\n                    <NotFind text={'Tovarlar mavjud emas'} />\r\n                ) : (\r\n                    <Table\r\n                        data={data}\r\n                        page={'filialShopDataId'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        currency={currency}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default ProductIdExchanges\r\n","import React, { useEffect, useState } from 'react'\r\nimport ExportBtn from '../../../Components/Buttons/ExportBtn.js'\r\nimport Pagination from '../../../Components/Pagination/Pagination.js'\r\nimport Table from '../../../Components/Table/Table.js'\r\nimport SearchForm from '../../../Components/SearchForm/SearchForm.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Spinner from '../../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../../Components/NotFind/NotFind.js'\r\nimport { motion } from 'framer-motion'\r\nimport {\r\n    clearSearchedSellings,\r\n    getSellings,\r\n    getSellingsByFilter,\r\n    excelAllSellings,\r\n    addClient,\r\n} from '../Slices/sellingsSlice.js'\r\nimport { regexForTypeNumber } from '../../../Components/RegularExpressions/RegularExpressions.js'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal.js'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { filter, map } from 'lodash'\r\nimport { universalSort, exportExcel } from './../../../App/globalFunctions'\r\nimport { universalToast } from '../../../Components/ToastMessages/ToastMessages.js'\r\nimport socket from '../../../Config/socket.js'\r\nimport { setAllProductsBySocket } from '../Slices/registerSellingSlice.js'\r\nimport { getPaymentReport } from '../../Reports/reportsSlice.js'\r\n\r\nconst Sellings = ({ id }) => {\r\n    const { t } = useTranslation(['common'])\r\n    const headers = [\r\n        {\r\n            title: '№',\r\n        },\r\n        {\r\n            title: 'Sana',\r\n            filter: 'createdAt',\r\n        },\r\n        {\r\n            title: 'ID',\r\n            filter: 'saleconnector.id',\r\n        },\r\n        {\r\n            title: 'Mijoz'\r\n        },\r\n        {\r\n            title: \"To'lov UZS\",\r\n        },\r\n        {\r\n            title: \"To'lov USD\",\r\n        },\r\n        {\r\n            title: \"Qarzdan to'lov USD\",\r\n        },\r\n        {\r\n            title: \"Qarzdan to'lov UZS\",\r\n        },\r\n        // {\r\n        //     title: \"Qaytarilgan\",\r\n        // },\r\n        {\r\n            title: \"\",\r\n        },\r\n    ]\r\n    const dispatch = useDispatch()\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    const { user, market } = useSelector((state) => state.login)\r\n    const {\r\n        // sellings,\r\n        searchedSellings,\r\n        getSellingsLoading,\r\n        total,\r\n        totalSearched,\r\n    } = useSelector((state) => state.sellings)\r\n    const { datas: sellings } = useSelector(\r\n        (state) => state.reports\r\n    )\r\n    const [chooseBody, setChooseBody] = useState('')\r\n    const [data, setData] = useState(sellings)\r\n    const [storeData, setStoreData] = useState(sellings)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchedData, setSearchedData] = useState(searchedSellings)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [search, setSearch] = useState({\r\n        id: '',\r\n        client: '',\r\n        product: \"\"\r\n    })\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(\r\n            new Date().getFullYear(),\r\n            new Date().getMonth(),\r\n            new Date().getDate()\r\n        )\r\n    )\r\n    const [endDate, setEndDate] = useState(new Date())\r\n    const [printedSelling, setPrintedSelling] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [saleConnectorId, setSaleConnectorId] = useState(null)\r\n    const [filteredProducts, setFilteredProducts] = useState([])\r\n    const [selectedProduct, setSelectedProduct] = useState('')\r\n\r\n    // filter by total\r\n    const filterByTotal = ({ value }) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle change client and id\r\n    const handleChangeId = (e) => {\r\n        const val = e.target.value\r\n        const valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        regexForTypeNumber.test(val) && setSearch({ ...search, id: val })\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedSellings())\r\n        if (valForSearch === '') {\r\n            setData(sellings)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(sellings, (selling) => {\r\n                return selling.id.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const handleChangeClient = (e) => {\r\n        const val = e.target.value\r\n        const valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearch({ ...search, client: val })\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedSellings())\r\n        if (valForSearch === '') {\r\n            setData(sellings)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(sellings, (selling) => {\r\n                return (\r\n                    selling?.client?.name\r\n                        .toLowerCase()\r\n                        .includes(valForSearch) ||\r\n                    selling?.packman?.name.toLowerCase().includes(valForSearch)\r\n                )\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const handleChangeIdAndClientWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                filialId: id,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                startDate: startDate.toISOString(),\r\n                endDate: endDate.toISOString(),\r\n                search: search,\r\n            }\r\n            dispatch(getPaymentReport(body))\r\n        }\r\n    }\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setPrintedSelling(null)\r\n        const body = {\r\n            filialId: id,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate: startDate.toISOString(),\r\n            endDate: endDate.toISOString(),\r\n            search: {\r\n                id: '',\r\n                client: '',\r\n                product: selectedProduct?.label\r\n            },\r\n        }\r\n        dispatch(getSellings(body))\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Sotuvlar' - new Date().toLocaleDateString()\r\n        const sellingHeaders = [\r\n            '№',\r\n            t('ID'),\r\n            t('Mijoz'),\r\n            t('Jami UZS'),\r\n            t('Jami USD'),\r\n            t('Chegirma UZS'),\r\n            t('Chegirma USD'),\r\n            t('Qarz UZS'),\r\n            t('Qarz USD'),\r\n        ]\r\n        if (data?.length > 0) {\r\n            const SellingData = map(data, (item, index) => ({\r\n                nth: index + 1,\r\n                id: item?.id || '',\r\n                client: item?.client?.name || item?.packman?.name,\r\n                alluzs: item?.products[0]?.totalpriceuzs || '',\r\n                allusd: item?.products[0]?.totalprice || '',\r\n                discount:\r\n                    item.discounts.length > 0\r\n                        ? item.discounts.map((discount) => {\r\n                            return discount\r\n                        })\r\n                        : 0,\r\n                discountusd:\r\n                    item.discounts.length > 0\r\n                        ? item.discounts.map((discount) => {\r\n                            return discount\r\n                        })\r\n                        : 0,\r\n                debd:\r\n                    item?.products[0]?.totalpriceuzs -\r\n                        item?.payments[0]?.paymentuzs -\r\n                        item?.discounts.length >\r\n                        0\r\n                        ? item.discounts.map((discount) => {\r\n                            return discount.discount\r\n                        })\r\n                        : 0,\r\n                debdusd:\r\n                    item.products[0].totalprice -\r\n                        item.payments[0].payment -\r\n                        item.discounts.length >\r\n                        0\r\n                        ? item.discounts.map((discount) => {\r\n                            return discount.discount\r\n                        })\r\n                        : 0,\r\n            }))\r\n            exportExcel(SellingData, fileName, sellingHeaders)\r\n        } else {\r\n            universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n        }\r\n    }\r\n\r\n    const handleClickPrint = (selling) => {\r\n        setChooseBody('checkSell')\r\n        setPrintedSelling(selling)\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const addPlus = (id) => {\r\n        setChooseBody('addPlus')\r\n        setModalVisible(true)\r\n        setSaleConnectorId(id)\r\n    }\r\n\r\n    const [commentText, setCommentText] = useState('')\r\n    const [dailyId, setDailyId] = useState(null)\r\n\r\n    const editComment = (daily, text) => {\r\n        setCommentText(text)\r\n        setDailyId(daily._id)\r\n        setChooseBody('changeComment')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    // effects\r\n    useEffect(() => {\r\n        setData(sellings)\r\n        setStoreData(sellings)\r\n    }, [sellings])\r\n    useEffect(() => {\r\n        setSearchedData(searchedSellings)\r\n    }, [searchedSellings])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n    useEffect(() => {\r\n        // const body = {\r\n        //     filialId: id,\r\n        //     currentPage,\r\n        //     countPage: showByTotal,\r\n        //     startDate: startDate.toISOString(),\r\n        //     endDate: endDate.toISOString(),\r\n        //     search: {\r\n        //         id: '',\r\n        //         client: '',\r\n        //     },\r\n        // }\r\n        const body = {\r\n            type: 'payments',\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate: startDate.toISOString(),\r\n            endDate: endDate.toISOString(),\r\n            // market: _id,\r\n            search: {\r\n                id: '',\r\n                client: '',\r\n            },\r\n        }\r\n        dispatch(getPaymentReport(body))\r\n    }, [currentPage, showByTotal, startDate, endDate, dispatch])\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            startDate,\r\n            endDate,\r\n            search,\r\n        }\r\n        dispatch(excelAllSellings(body))\r\n    }, [dispatch, startDate, endDate, search])\r\n\r\n    const handleAddClient = (client) => {\r\n        dispatch(\r\n            addClient({\r\n                ...client,\r\n                saleconnectorid: saleConnectorId,\r\n            })\r\n        ).then(() => {\r\n            const body = {\r\n                filialId: id,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                startDate: startDate.toISOString(),\r\n                endDate: endDate.toISOString(),\r\n                search: {\r\n                    id: '',\r\n                    client: '',\r\n                },\r\n            }\r\n            dispatch(getSellings(body))\r\n        })\r\n        setModalVisible(false)\r\n    }\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(data, setData, filterKey, 1, storeData)\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(data, setData, filterKey, '', storeData)\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(data, setData, filterKey, -1, storeData)\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(data, setData, filterKey, -1, storeData)\r\n        }\r\n    }\r\n\r\n    //\r\n    useEffect(() => {\r\n        let allProductsReducer = []\r\n        let productsForSearch = [\r\n            {\r\n                label: \"Xammasi\",\r\n                value: \"\"\r\n            },\r\n        ]\r\n        market &&\r\n            socket.emit('getProductsOfCount', {\r\n                market: market._id,\r\n            })\r\n        market &&\r\n            socket.on('getProductsOfCount', ({ id, products }) => {\r\n                if (id === market._id) {\r\n                    productsForSearch = [\r\n                        ...productsForSearch,\r\n                        ...map(products, (product) => ({\r\n                            value: product._id,\r\n                            label: product.productdata.name\r\n                        })),\r\n                    ]\r\n                    setFilteredProducts(productsForSearch)\r\n                    allProductsReducer.push(...products)\r\n                    dispatch(setAllProductsBySocket(allProductsReducer))\r\n                }\r\n            })\r\n        market &&\r\n            socket.on('error', ({ id, message }) => {\r\n                id === market._id && universalToast(message, 'error')\r\n            })\r\n\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [market, dispatch])\r\n\r\n    const handleChangeSelectedProduct = (option) => {\r\n        setSelectedProduct(option)\r\n        const body = {\r\n            filialId: id,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate: startDate.toISOString(),\r\n            endDate: endDate.toISOString(),\r\n            search: {\r\n                id: '',\r\n                client: '',\r\n                product: option.label\r\n            },\r\n        }\r\n        dispatch(getSellingsByFilter(body))\r\n    }\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: { opacity: 1, height: 'auto' },\r\n                collapsed: { opacity: 0, height: 0 },\r\n            }}\r\n            transition={{ duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        >\r\n            <UniversalModal\r\n                printedSelling={printedSelling}\r\n                currency={currencyType}\r\n                body={chooseBody}\r\n                isOpen={modalVisible}\r\n                toggleModal={toggleModal}\r\n                approveFunction={handleAddClient}\r\n                commentText={commentText}\r\n                dailyid={dailyId}\r\n            />\r\n            <div className='pagination mainPadding'>\r\n                <ExportBtn onClick={exportData} />\r\n                <p className='flex items-center'>{t('Sotuvlar')}</p>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <SearchForm\r\n                filterBy={['total', 'startDate', 'endDate', 'id', 'clientName', \"product_name\"]}\r\n                filterByTotal={filterByTotal}\r\n                startDate={startDate}\r\n                setStartDate={setStartDate}\r\n                endDate={endDate}\r\n                setEndDate={setEndDate}\r\n                searchById={search.id}\r\n                searchByClientName={search.client}\r\n                filterByClientName={handleChangeClient}\r\n                filterById={handleChangeId}\r\n                filterByClientNameWhenPressEnter={\r\n                    handleChangeIdAndClientWhenPressEnter\r\n                }\r\n                filterByIdWhenPressEnter={handleChangeIdAndClientWhenPressEnter}\r\n                filteredProducts={filteredProducts}\r\n                handleChangeSelectedProduct={handleChangeSelectedProduct}\r\n                selectedProduct={selectedProduct}\r\n            />\r\n            <div className='tableContainerPadding'>\r\n                {getSellingsLoading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={\"Ro'yxat mavjud emas...\"} />\r\n                ) : (\r\n                    <Table\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        currentPage={currentPage}\r\n                        currency={currencyType}\r\n                        countPage={showByTotal}\r\n                        page={'payments_selling'}\r\n                        headers={headers}\r\n                        Print={handleClickPrint}\r\n                        addPlus={addPlus}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        // sellers={user?.type === 'Seller' ? true : false}\r\n                        editComment={editComment}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Sellings\r\n"],"names":["_ref","type","onClick","active","propsType","product","icon","_jsx","IoNewspaperOutline","className","bgColor","selling","IoCartOutline","payments","IoCubeOutline","income","IoEnterOutline","concat","children","socket","io","process","userData","JSON","parse","localStorage","getItem","auth","token","market","presenceId","getPresenceId","id","PresenceChild","_a","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","key","React","size","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","_b","exitBeforeEnter","_c","forceRender","unloadingRef","useRef","__read","useState","forcedRenderCount","setForcedRenderCount","useUnmountEffect","current","useCallback","useForceUpdate","layoutContext","useContext","SharedLayoutContext","isSharedLayout","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","map","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","currency","dispatch","useDispatch","_useSelector","useSelector","state","filialData","shops","loading","total","totalSearched","searchedExchanges","startDate","endDate","_useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","showByTotal","setShowByTotal","_useState5","_useState6","data","setData","_useState7","_useState8","filteredDataTotal","setFilteredDataTotal","_useState9","_useState10","searchById","setSearchById","_useState11","_useState12","searchedData","setSearchedData","useEffect","body","countPage","Date","getFullYear","getMonth","getDate","toISOString","filial","getFilialShopData","console","log","_jsxs","motion","section","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","ExportBtn","ExchangesDatas","item","index","nth","date","createdAt","toLocaleDateString","product_id","_id","product_type","products","product_number","pieces","all_get_product","Math","round","totalincomingpriceuzs","toLocaleString","totalincomingprice","all_sell_product","totalsellingpriceuzs","totalsellingprice","exportExcel","universalToast","Pagination","Number","totalDatas","SearchForm","filterBy","filterByTotal","_ref2","filterById","e","val","target","valForSearch","replace","trim","clearSearchedExchanges","filteredExchanges","filter","includes","filterByIdWhenPressEnter","search","name","getExchangesFilterId","setStartDate","changeStartDate","start","setEndDate","changeEndDate","end","SmallLoader","NotFind","text","Table","page","headers","styles","title","t","useTranslation","searchedProducts","loadingExcel","currencyType","login","searchByCode","setSearchByCode","_useState13","_useState14","searchByName","setSearchByName","_useState15","_useState16","searchByCategory","setSearchByCategory","_useState17","_useState18","productForCheques","setProductForCheques","_useState19","_useState20","countOfCheques","setCountOfCheques","_useState21","sort","count","_useState22","sorItem","setSorItem","_useState23","_useState24","dataLoaded","setDataLoaded","_useState25","_useState26","printedData","setPrintedData","componentRef","onBeforeGetContentResolve","handlePrint","useReactToPrint","content","onBeforeGetContent","Promise","resolve","setTimeout","handlePrintToProduct","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","single","wrap","_context","prev","next","_toConsumableArray","stop","_x","_x2","apply","arguments","code","category","getIncomeProducts","Spinner","exportProductHead","getProductsAll","then","_ref4","error","payload","ReportData","_item$productdata","_item$productdata2","_item$unit","_item$price","_item$price2","_item$price3","_item$price4","_item$price5","_item$price6","_item$price7","_item$price8","productdata","unit","incomingprice","price","incomingpriceuzs","incomingpricealluzs","incomingpriceallusd","sellingprice","sellingpriceuzs","sellingalluzs","sellingallusd","filterByCode","clearSearchedProducts","filteredProducts","filterByName","toLowerCase","filterByCategory","numberOfChecks","filterByCodeAndNameAndCategoryWhenPressEnter","filialId","getProductsByFilter","clickPrintBtn","setNumberOfChecks","Sort","filterKey","universalSort","sortItem","placeholder","changeHandler","prevIndex","Print","BarCode","marketName","_useParams","useParams","tablename","location","useLocation","reportOpen","setReprotOpen","salesOpen","setSalesOpen","paymentOpen","setPaymentOpen","useParamsId","setUseParamsId","incomeProducts","setIncomeProducts","Avatar","border","director","typecount","productcount","totalPrice","totalPriceUSD","shopname","Link","to","preventDefault","FilialButtons","pathname","Routes","Route","path","element","Labels","LabelsIncome","Sellings","FilialExchangesProduct","ProductIdExchanges","setLoading","emit","on","filials","setFilialDatas","_filial$director","_filial$director2","_filial$director3","_filial$products","_filial$products2","firstname","lastname","image","productCategory","productCount","totalPriceuzs","err","message","Filial","uniqueId","_location$state","navigate","useNavigate","dataId","exchangesIdData","idProducts","transfer","getFilialIdProducts","IoChevronBack","BarcodeData","_item$category2","_item$productdata3","_item$productdata4","Category_code","Product_code","Product_name","Product_number","allIncomingPrice","_item$category","codeofproduct","nameofproduct","categoryofproduct","getExchangesFilter","_useSelector2","user","_useSelector3","sellings","searchedSellings","getSellingsLoading","reports","datas","chooseBody","setChooseBody","storeData","setStoreData","client","setSearch","printedSelling","setPrintedSelling","modalVisible","setModalVisible","_useState27","_useState28","saleConnectorId","setSaleConnectorId","_useState29","_useState30","setFilteredProducts","_useState31","_useState32","selectedProduct","setSelectedProduct","handleChangeIdAndClientWhenPressEnter","getPaymentReport","_useState33","_useState34","commentText","setCommentText","_useState35","_useState36","dailyId","setDailyId","excelAllSellings","allProductsReducer","productsForSearch","label","setAllProductsBySocket","UniversalModal","isOpen","toggleModal","getSellings","approveFunction","addClient","_objectSpread","saleconnectorid","dailyid","fileName","sellingHeaders","SellingData","_item$client","_item$packman","_item$products$","_item$products$2","_item$products$3","_item$payments$","packman","alluzs","totalpriceuzs","allusd","totalprice","discount","discounts","discountusd","debd","paymentuzs","debdusd","payment","searchByClientName","filterByClientName","clearSearchedSellings","_selling$client","_selling$packman","regexForTypeNumber","test","filterByClientNameWhenPressEnter","handleChangeSelectedProduct","option","getSellingsByFilter","addPlus","editComment","daily"],"sourceRoot":""}