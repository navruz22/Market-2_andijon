{"version":3,"file":"static/js/1288.e28ac6de.chunk.js","mappings":"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","sources":["Pages/Units/Unit.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Button from '../../Components/Buttons/BtnAddRemove.js'\r\nimport Table from '../../Components/Table/Table.js'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    successAddUnitMessage,\r\n    successDeleteUnitMessage,\r\n    successUpdateUnitMessage,\r\n    universalToast,\r\n    warningEmptyInput\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {\r\n    addUnit,\r\n    clearErrorUnits,\r\n    clearSuccessAddUnit,\r\n    clearSuccessDeleteUnit,\r\n    clearSuccessUpdateUnit,\r\n    deleteUnit,\r\n    getUnits,\r\n    updateUnit\r\n} from './unitsSlice.js'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {motion} from 'framer-motion'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction Unit() {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {\r\n        errorUnits,\r\n        units,\r\n        successAddUnit,\r\n        successUpdateUnit,\r\n        successDeleteUnit,\r\n        loading\r\n    } = useSelector((state) => state.units)\r\n    const headers = [\r\n        {styles: 'w-[10%] text-start', filter: '', title: t('â„–')},\r\n        {\r\n            styles: 'w-[80%] text-start',\r\n            filter: '',\r\n            title: t('O`lchov birligi nomi')\r\n        },\r\n        {styles: 'w-[10%]', filter: '', title: ' '}\r\n    ]\r\n\r\n    // states\r\n    const [data, setData] = useState(units)\r\n    const [unitName, setUnitName] = useState('')\r\n    const [currentUnit, setCurrentUnit] = useState('')\r\n    const [deletedUnit, setDeletedUnit] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n\r\n    // modal toggle\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n\r\n    // handle change of inputs\r\n    const handleChangeUnitName = (e) => {\r\n        setUnitName(e.target.value)\r\n    }\r\n\r\n    // table edit and delete\r\n    const handleEditUnit = (unit) => {\r\n        setCurrentUnit(unit)\r\n        setUnitName(unit.name)\r\n        setStickyForm(true)\r\n    }\r\n    const handleDeleteUnit = (unit) => {\r\n        setDeletedUnit(unit)\r\n        toggleModal()\r\n    }\r\n    const handleClickApproveToDelete = () => {\r\n        const body = {_id: deletedUnit._id}\r\n        dispatch(deleteUnit(body))\r\n        handleClickCancelToDelete()\r\n    }\r\n    const handleClickCancelToDelete = () => {\r\n        setModalVisible(false)\r\n        setDeletedUnit(null)\r\n    }\r\n\r\n    // handle submit of inputs\r\n    const addNewUnit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString(\r\n            [{\r\n                value: unitName,\r\n                message: t('O`lchov birligi nomi')\r\n            }]\r\n        )\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {name: unitName}\r\n            dispatch(addUnit(body))\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString(\r\n            [{\r\n                value: unitName,\r\n                message: t('O`lchov birligi nomi')\r\n            }]\r\n        )\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: unitName,\r\n                _id: currentUnit._id\r\n            }\r\n            dispatch(updateUnit(body))\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setUnitName('')\r\n        setCurrentUnit(null)\r\n        setDeletedUnit(null)\r\n        setStickyForm(false)\r\n    }\r\n\r\n    // useEffects\r\n    useEffect(() => {\r\n        if (errorUnits) {\r\n            universalToast(errorUnits, 'error')\r\n            dispatch(clearErrorUnits())\r\n        }\r\n        if (successAddUnit) {\r\n            successAddUnitMessage()\r\n            dispatch(clearSuccessAddUnit())\r\n            clearForm()\r\n        }\r\n        if (successUpdateUnit) {\r\n            successUpdateUnitMessage()\r\n            dispatch(clearSuccessUpdateUnit())\r\n            setCurrentUnit('')\r\n            setStickyForm(false)\r\n            clearForm()\r\n        }\r\n        if (successDeleteUnit) {\r\n            successDeleteUnitMessage()\r\n            dispatch(clearSuccessDeleteUnit())\r\n            clearForm()\r\n        }\r\n    }, [\r\n        dispatch,\r\n        errorUnits,\r\n        successAddUnit,\r\n        successUpdateUnit,\r\n        successDeleteUnit\r\n    ])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUnits())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setData(units)\r\n    }, [units])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0}\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}>\r\n            <UniversalModal\r\n                headerText={`${deletedUnit && deletedUnit.name\r\n                } ${t('o`lchov birligini o`chirishni tasdiqlaysizmi?')}`}\r\n                title={t('O`chirilgan o`lchov birligini tiklashning imkoni mavjud emas!')}\r\n                toggleModal={toggleModal}\r\n                body={'approve'}\r\n                approveFunction={handleClickApproveToDelete}\r\n                closeModal={handleClickCancelToDelete}\r\n                isOpen={modalVisible}\r\n            />\r\n            <form className={`unitFormStyle ${stickyForm && 'stickyForm'}`}>\r\n                <FieldContainer\r\n                    onChange={handleChangeUnitName}\r\n                    value={unitName}\r\n                    label={t('O`lchov birligini kiriting')}\r\n                    placeholder={t('misol: kg')}\r\n                    maxWidth={'w-[43.75rem]'}\r\n                />\r\n\r\n                <div className={'flex gap-[1.25rem] grow items-end'}>\r\n                    <Button\r\n                        add={!stickyForm}\r\n                        edit={stickyForm}\r\n                        text={stickyForm ? t(`Saqlash`) : t('Yangi o`lchov qo`shish')}\r\n                        onClick={stickyForm ? handleEdit : addNewUnit}\r\n                    />\r\n                    <Button text={t('Tozalash')} onClick={clearForm} />\r\n                </div>\r\n            </form>\r\n\r\n            <div className='mainPadding text-[1.25rem] text-blue-900'>\r\n                {t('O\\'lchov birliklari')}\r\n            </div>\r\n\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 ? (\r\n                    <NotFind text={t('O`lchov birliklari mavjud emas')} />\r\n                ) : (\r\n                    <Table\r\n                        page='unit'\r\n                        data={data}\r\n                        headers={headers}\r\n                        currentPage={0}\r\n                        countPage={0}\r\n                        Delete={handleDeleteUnit}\r\n                        Edit={handleEditUnit}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Unit\r\n"],"names":["t","useTranslation","dispatch","useDispatch","_useSelector","useSelector","state","units","errorUnits","successAddUnit","successUpdateUnit","successDeleteUnit","loading","headers","styles","filter","title","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","unitName","setUnitName","_useState5","_useState6","currentUnit","setCurrentUnit","_useState7","_useState8","deletedUnit","setDeletedUnit","_useState9","_useState10","modalVisible","setModalVisible","_useState11","_useState12","stickyForm","setStickyForm","toggleModal","handleClickCancelToDelete","clearForm","e","preventDefault","useEffect","universalToast","clearErrorUnits","successAddUnitMessage","clearSuccessAddUnit","successUpdateUnitMessage","clearSuccessUpdateUnit","successDeleteUnitMessage","clearSuccessDeleteUnit","getUnits","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","headerText","concat","name","body","approveFunction","_id","deleteUnit","closeModal","isOpen","className","FieldContainer","onChange","target","value","label","placeholder","maxWidth","Button","add","edit","text","onClick","_checkEmptyString2","checkEmptyString","message","failed","warningEmptyInput","updateUnit","_checkEmptyString","addUnit","Spinner","length","NotFind","Table","page","currentPage","countPage","Delete","unit","Edit"],"sourceRoot":""}