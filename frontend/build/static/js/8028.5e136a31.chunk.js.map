{"version":3,"file":"static/js/8028.5e136a31.chunk.js","mappings":"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","sources":["Pages/AdminProducts/AdminProduct.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport Table from '../../Components/Table/Table'\r\nimport BtnAddRemove from './../../Components/Buttons/BtnAddRemove'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    clearSearchedMarkets,\r\n    deleteMarket,\r\n    createDirector,\r\n    createMarket,\r\n    editDirector,\r\n    editMarket,\r\n    getMarkets,\r\n    getMarketsByFilter,\r\n} from './adminproductsSlice.js'\r\nimport Pagination from '../../Components/Pagination/Pagination.js'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport {\r\n    successAddDirectory,\r\n    successEditProfile,\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {filter} from 'lodash'\r\n\r\nconst AdminProduct = () => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        markets,\r\n        total,\r\n        searchedMarkets,\r\n        totalSearched,\r\n        loadingGetMarkets,\r\n        loadingDeleteMarket,\r\n    } = useSelector((state) => state.adminmarkets)\r\n    const [data, setData] = useState(markets)\r\n    const [searchedData, setSearchedData] = useState(searchedMarkets)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [name, setName] = useState('')\r\n    const [director, setDirector] = useState('')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [currentStep, setCurrentStep] = useState(1)\r\n    const [bgActive, setBgActive] = useState(false)\r\n    const [createdMarketId, setCreatedMarketId] = useState(null)\r\n    const [image, setImage] = useState('')\r\n    const [currentMarket, setCurrentMarket] = useState(null)\r\n    const [editedMarket, setEditedMarket] = useState(null)\r\n    const [deletedMarket, setDeletedMarket] = useState(null)\r\n\r\n    const headers = [\r\n        {title: 'â„–', styles: 'text-center'},\r\n        {title: 'Logotip', styles: 'w-[4.25rem]'},\r\n        {title: \"Do'kon nomi\", styles: 'text-center'},\r\n        {title: 'Director', styles: 'text-center'},\r\n        {title: 'Telefon', styles: 'w-[7.875rem]'},\r\n        {title: 'Turi', styles: 'text-center w-[3.1875rem]'},\r\n        {title: '', styles: 'w-[3rem]'},\r\n        {title: 'Delete', styles: 'w-[3rem]'},\r\n    ]\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n            setCurrentMarket(null)\r\n            setEditedMarket(null)\r\n            setImage('')\r\n            setCreatedMarketId(null)\r\n            setCurrentStep(1)\r\n            setBgActive(false)\r\n        }, 100)\r\n    }\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n    const filterByMarketName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedMarkets())\r\n        if (valForSearch === '') {\r\n            setData(markets)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(markets, (market) => {\r\n                return market.name.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByDirectorName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setDirector(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedMarkets())\r\n        if (valForSearch === '') {\r\n            setData(markets)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(markets, (market) => {\r\n                return (\r\n                    market.director.firstname\r\n                        .toLowerCase()\r\n                        .includes(valForSearch) ||\r\n                    market.director.lastname\r\n                        .toLowerCase()\r\n                        .includes(valForSearch)\r\n                )\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByMarketNameAndDirectorNameWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: name.replace(/\\s+/g, ' ').trim(),\r\n                    director: director.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(getMarketsByFilter(body))\r\n        }\r\n    }\r\n    const handleAddNext = (body) => {\r\n        dispatch(createMarket(body)).then(({error, payload}) => {\r\n            if (!error) {\r\n                setCurrentStep(currentStep + 1)\r\n                setBgActive(true)\r\n                setImage('')\r\n                setCreatedMarketId(payload._id)\r\n            }\r\n        })\r\n    }\r\n    const handleAddFinish = (data) => {\r\n        const body = {\r\n            ...data,\r\n            image,\r\n            market: createdMarketId,\r\n        }\r\n        dispatch(createDirector(body)).then(({error}) => {\r\n            if (!error) {\r\n                const body = {\r\n                    currentPage,\r\n                    countPage: showByTotal,\r\n                    search: {\r\n                        name: name.replace(/\\s+/g, ' ').trim(),\r\n                        director: director.replace(/\\s+/g, ' ').trim(),\r\n                    },\r\n                }\r\n                setImage('')\r\n                setCurrentStep(1)\r\n                setBgActive(false)\r\n                setCreatedMarketId(null)\r\n                successAddDirectory()\r\n                dispatch(getMarkets(body))\r\n                toggleModal()\r\n            }\r\n        })\r\n    }\r\n    const handleEditFinish = (data) => {\r\n        const body = {\r\n            ...data,\r\n            image,\r\n            market: createdMarketId,\r\n            _id: editedMarket.director._id,\r\n        }\r\n        dispatch(editDirector(body)).then(({error}) => {\r\n            if (!error) {\r\n                const body = {\r\n                    currentPage,\r\n                    countPage: showByTotal,\r\n                    search: {\r\n                        name: name.replace(/\\s+/g, ' ').trim(),\r\n                        director: director.replace(/\\s+/g, ' ').trim(),\r\n                    },\r\n                }\r\n                setImage('')\r\n                setCurrentStep(1)\r\n                setBgActive(false)\r\n                setCreatedMarketId(null)\r\n                successEditProfile()\r\n                dispatch(getMarkets(body))\r\n                toggleModal()\r\n            }\r\n        })\r\n    }\r\n    const handleEditNext = (body) => {\r\n        const sendingBody = {\r\n            market: {\r\n                ...body,\r\n                _id: editedMarket._id,\r\n            },\r\n        }\r\n        dispatch(editMarket(sendingBody)).then(({error, payload}) => {\r\n            if (!error) {\r\n                setCurrentStep(currentStep + 1)\r\n                setBgActive(true)\r\n                setImage(editedMarket?.director?.image || '')\r\n                setCreatedMarketId(payload._id)\r\n                const body = {\r\n                    currentPage,\r\n                    countPage: showByTotal,\r\n                    search: {\r\n                        name: name.replace(/\\s+/g, ' ').trim(),\r\n                        director: director.replace(/\\s+/g, ' ').trim(),\r\n                    },\r\n                }\r\n                dispatch(getMarkets(body))\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDelete = (market) => {\r\n        setDeletedMarket(market)\r\n        setModalBody('approve')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const handleDeleteMarket = () => {\r\n        dispatch(deleteMarket({id: deletedMarket._id})).then(\r\n            ({error, payload}) => {\r\n                if (!error) {\r\n                    const body = {\r\n                        currentPage,\r\n                        countPage: showByTotal,\r\n                        search: {\r\n                            name: name.replace(/\\s+/g, ' ').trim(),\r\n                            director: director.replace(/\\s+/g, ' ').trim(),\r\n                        },\r\n                    }\r\n                    setDeletedMarket(null)\r\n                    setModalVisible(false)\r\n                    setModalBody('')\r\n                    dispatch(getMarkets(body))\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleClickRow = (market) => {\r\n        setCurrentMarket(market)\r\n        setModalBody('filterBranch')\r\n        setModalVisible(true)\r\n    }\r\n    const handleClickSave = () => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: name.replace(/\\s+/g, ' ').trim(),\r\n                director: director.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n        }\r\n        dispatch(getMarkets(body))\r\n        toggleModal()\r\n    }\r\n    const handleClickEdit = (market) => {\r\n        setEditedMarket(market)\r\n        setImage(market?.image ? market?.image : '')\r\n        setModalBody('addMarket')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: name.replace(/\\s+/g, ' ').trim(),\r\n                director: director.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n        }\r\n        dispatch(getMarkets(body))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, currentPage, showByTotal])\r\n    useEffect(() => {\r\n        setData(markets)\r\n    }, [markets])\r\n    useEffect(() => {\r\n        setSearchedData(searchedMarkets)\r\n    }, [searchedMarkets])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    return (\r\n        <section>\r\n            {loadingDeleteMarket ? (\r\n                <Spinner />\r\n            ) : (\r\n                <UniversalModal\r\n                    title={\r\n                        modalBody === 'approve' &&\r\n                        \"O'chirilgan do'kon ma'lumotlarini tiklashning imkoni mavjud emas\"\r\n                    }\r\n                    headerText={\r\n                        modalBody === 'approve' &&\r\n                        \"Diqqat do'kon ma'lumotlarni o'chirishni tasdiqlaysizmi?\"\r\n                    }\r\n                    body={modalBody}\r\n                    isOpen={modalVisible}\r\n                    toggleModal={\r\n                        !editedMarket\r\n                            ? currentStep === 1\r\n                                ? toggleModal\r\n                                : () => {}\r\n                            : toggleModal\r\n                    }\r\n                    addMarket={{\r\n                        currentStep,\r\n                        bgActive,\r\n                        handleNext: !editedMarket\r\n                            ? handleAddNext\r\n                            : handleEditNext,\r\n                        handleFinish: !editedMarket\r\n                            ? handleAddFinish\r\n                            : handleEditFinish,\r\n                        image: image,\r\n                        setImage: setImage,\r\n                        editedMarket,\r\n                    }}\r\n                    product={currentMarket}\r\n                    approveFunction={\r\n                        deletedMarket ? handleDeleteMarket : handleClickSave\r\n                    }\r\n                />\r\n            )}\r\n            <div className='mainPadding'>\r\n                <BtnAddRemove\r\n                    text={\"Yangi do'kon qo`shish\"}\r\n                    add={true}\r\n                    onClick={() => {\r\n                        setModalBody('addMarket')\r\n                        setModalVisible(true)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={'flex justify-between items-center mainPadding'}>\r\n                <h3 className={'text-blue-900 text-[xl] leading-[1.875rem]'}>\r\n                    Do'konlar\r\n                </h3>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <SearchForm\r\n                filterBy={['total', 'marketName', 'directorName']}\r\n                filterByMarketName={filterByMarketName}\r\n                filterByDirectorName={filterByDirectorName}\r\n                searchByDirectorName={director}\r\n                searchByMarketName={name}\r\n                filterByDirectorNameWhenPressEnter={\r\n                    filterByMarketNameAndDirectorNameWhenPressEnter\r\n                }\r\n                filterByMarketNameWhenPressEnter={\r\n                    filterByMarketNameAndDirectorNameWhenPressEnter\r\n                }\r\n                filterByTotal={filterByTotal}\r\n            />\r\n            <div className={'tableContainerPadding'}>\r\n                {loadingGetMarkets ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={\"Do'konlar mavjud emas\"} />\r\n                ) : (\r\n                    <Table\r\n                        page={'adminProduct'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        headers={headers}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        onClickTableRow={handleClickRow}\r\n                        Edit={handleClickEdit}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                )}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdminProduct\r\n"],"names":["dispatch","useDispatch","_useSelector","useSelector","state","adminmarkets","markets","total","searchedMarkets","totalSearched","loadingGetMarkets","loadingDeleteMarket","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","searchedData","setSearchedData","_useState5","_useState6","filteredDataTotal","setFilteredDataTotal","_useState7","_useState8","showByTotal","setShowByTotal","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","name","setName","_useState13","_useState14","director","setDirector","_useState15","_useState16","modalVisible","setModalVisible","_useState17","_useState18","modalBody","setModalBody","_useState19","_useState20","currentStep","setCurrentStep","_useState21","_useState22","bgActive","setBgActive","_useState23","_useState24","createdMarketId","setCreatedMarketId","_useState25","_useState26","image","setImage","_useState27","_useState28","currentMarket","setCurrentMarket","_useState29","_useState30","editedMarket","setEditedMarket","_useState31","_useState32","deletedMarket","setDeletedMarket","toggleModal","setTimeout","filterByMarketNameAndDirectorNameWhenPressEnter","e","key","body","countPage","search","replace","trim","getMarketsByFilter","useEffect","getMarkets","_jsxs","children","_jsx","Spinner","UniversalModal","title","headerText","isOpen","addMarket","handleNext","sendingBody","market","_objectSpread","_id","editMarket","then","_ref5","error","payload","_editedMarket$directo","createMarket","_ref2","handleFinish","editDirector","_ref4","successEditProfile","createDirector","_ref3","successAddDirectory","product","approveFunction","deleteMarket","id","_ref6","className","BtnAddRemove","text","add","onClick","Pagination","Number","totalDatas","SearchForm","filterBy","filterByMarketName","val","target","value","valForSearch","toLowerCase","length","clearSearchedMarkets","filteredProducts","filter","includes","filterByDirectorName","firstname","lastname","searchByDirectorName","searchByMarketName","filterByDirectorNameWhenPressEnter","filterByMarketNameWhenPressEnter","filterByTotal","_ref","NotFind","Table","page","headers","styles","onClickTableRow","Edit","handleDelete"],"sourceRoot":""}