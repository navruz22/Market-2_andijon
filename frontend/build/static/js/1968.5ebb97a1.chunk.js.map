{"version":3,"file":"static/js/1968.5ebb97a1.chunk.js","mappings":"8HA0BA,IAxBA,SAAqBA,GAAwD,IAAtDC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAQJ,EAARI,SAAUC,EAAcL,EAAdK,eAAgBC,EAAON,EAAPM,QAC9D,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,iBAAAC,OAAmBJ,EAAiB,kBAAoB,IACjEC,QAAS,kBAAMA,EAAQL,EAAG,EAACS,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAIH,UAAS,+CAAiDE,SAAER,GAAS,uBACzEK,EAAAA,EAAAA,MAAA,OAAKC,UAAW,uBAAuBE,SAAA,EACnCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCE,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,KAAGH,UAAW,cAAcE,SAAC,YAC7BC,EAAAA,EAAAA,KAAA,QACIH,UAAW,gHAAgHE,SAAEP,GAAQ,QAE7II,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCE,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,KAAGH,UAAW,cAAcE,SAAC,wBAC7BC,EAAAA,EAAAA,KAAA,QACIH,UAAW,gHAAgHE,SAAEN,GAAY,WAGrJO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0BAAyBE,UACpCC,EAAAA,EAAAA,KAACC,EAAAA,IAAW,CAACC,KAAM,OAAQL,UAAW,mBAItD,C,2BCrBMM,GAASC,E,QAAAA,IAFCC,yBAGVC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aACjDP,EAAOQ,KAAO,CAACC,MAAON,EAASM,MAAOC,OAAQP,EAASO,QAEvD,K,6QC6hBA,UAngBA,WACI,IAAOC,GAAKC,EAAAA,EAAAA,GAAe,CAAC,WAArBD,EACDE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAAiCC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IAA/DC,EAAYJ,EAAZI,aAAcD,EAAQH,EAARG,SACrBE,GAA+BJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,WAAW,IAAhEA,EAAWD,EAAXC,YAAaC,EAAOF,EAAPE,QACbhB,GAAUU,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMM,KAAK,IAA5CjB,OACPkB,GAAgDR,EAAAA,EAAAA,KAC5C,SAACC,GAAK,OAAKA,EAAMQ,cAAc,IAD5BC,EAAiBF,EAAjBE,kBAAmBC,EAAkBH,EAAlBG,mBAI1BC,GAAgCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA4CL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GACIT,EAAAA,EAAAA,UAASH,GAAkBa,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GADxBE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAwChDG,GAAgDb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,IAA4CjB,EAAAA,EAAAA,UAAS,MAAKkB,IAAAhB,EAAAA,EAAAA,GAAAe,GAAA,GAAnD3D,GAAc4D,GAAA,GAAEC,GAAiBD,GAAA,GACxCE,IAA4CpB,EAAAA,EAAAA,UAAS,IAAGqB,IAAAnB,EAAAA,EAAAA,GAAAkB,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAA0CxB,EAAAA,EAAAA,UAAS,IAAGyB,IAAAvB,EAAAA,EAAAA,GAAAsB,GAAA,GAA/CE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAkC5B,EAAAA,EAAAA,UAAS,IAAG6B,IAAA3B,EAAAA,EAAAA,GAAA0B,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAwChC,EAAAA,EAAAA,WAAS,GAAMiC,IAAA/B,EAAAA,EAAAA,GAAA8B,GAAA,GAAhDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAkCpC,EAAAA,EAAAA,UAAS,MAAKqC,IAAAnC,EAAAA,EAAAA,GAAAkC,GAAA,GAAzCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAwCxC,EAAAA,EAAAA,UAAS,MAAKyC,IAAAvC,EAAAA,EAAAA,GAAAsC,GAAA,GAA/CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAkC5C,EAAAA,EAAAA,UAAS,MAAK6C,IAAA3C,EAAAA,EAAAA,GAAA0C,GAAA,GAAzCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAA8ChD,EAAAA,EAAAA,UAAS,WAAUiD,IAAA/C,EAAAA,EAAAA,GAAA8C,GAAA,GAA1DE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAC1CG,IAAkCpD,EAAAA,EAAAA,UAAS,iBAAgBqD,IAAAnD,EAAAA,EAAAA,GAAAkD,GAAA,GAApDE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAcxBG,GAAsB,SAACtG,GACrBI,KAAmBJ,EACnBiE,GAAkB,OAElBA,GAAkBjE,GAClBqE,GAAkB,IAClBX,EAAsBf,GAE9B,EA8HM4D,GAAW,WACb9B,GAAiB,IACjBnB,EAAkB,KACtB,EAuLA,OAnHAkD,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAqB,GACrBC,EAAoB,GACpBnF,GAAU8B,IACVxC,EAAAA,EAAO8F,KAAK,qBAAsB,CAC9BpF,OAAQA,EAAOqF,IACfC,QAASxD,EAAeyD,QAE5BjG,EAAAA,EAAOkG,GAAG,qBAAqB,SAAAC,GAAuB,IAArBhH,EAAEgH,EAAFhH,GAAIiH,EAAUD,EAAVC,WAC7BjH,IAAOuB,EAAOqF,MACdlF,GAASwF,EAAAA,EAAAA,IAAqBD,IAC9BvD,EAAsBuD,GAE9B,IACApG,EAAAA,EAAOkG,GAAG,sBAAsB,SAAAI,GAAqB,IAAnBnH,EAAEmH,EAAFnH,GAAIG,EAAQgH,EAARhH,SAC9BH,IAAOuB,EAAOqF,MACdF,EAAiB,GAAAlG,QAAA4G,EAAAA,EAAAA,GACVV,IAAiBU,EAAAA,EAAAA,IACjBC,EAAAA,EAAAA,KAAIlH,GAAU,SAACmH,GAAO,MAAM,CAC3BR,MAAOQ,EAAQV,IACfW,MAAM,IAAD/G,OAAM8G,EAAQE,MAAK,MAAAhH,OAAK8G,EAAQG,SAASvH,MAAIM,OAAG8G,EAAQI,YAAYxH,KAAI,OAAAM,OAAM8G,EAAQI,YAAYC,MAC1G,MAEL7D,EAAoB4C,GACpBD,EAAmBmB,KAAIC,MAAvBpB,GAAkBW,EAAAA,EAAAA,GAASjH,IAC3BuB,GAASoG,EAAAA,EAAAA,IAAsBrB,IAEvC,IACA5F,EAAAA,EAAOkG,GAAG,SAAS,SAAAgB,GAAoB,IAAlB/H,EAAE+H,EAAF/H,GAAIgI,EAAOD,EAAPC,QACrBhI,IAAOuB,EAAOqF,MAAOqB,EAAAA,EAAAA,IAAeD,EAAS,QACjD,IAER,GAAG,CAACzG,EAAQG,EAAU2B,KACtBmD,EAAAA,EAAAA,YAAU,WACN9E,GAASwG,EAAAA,EAAAA,MACb,GAAG,CAACxG,KACJ8E,EAAAA,EAAAA,YAAU,WACN,GAAIpG,GAAgB,CAChB,IAAM+H,GAAeC,EAAAA,EAAAA,QACjBxF,GACA,SAAC0E,GAAO,OAAKA,EAAQG,SAASb,MAAQxG,EAAc,IAExD0D,GACIuD,EAAAA,EAAAA,KAAIc,GAAc,SAACb,GAAO,MAAM,CAC5BR,MAAOQ,EAAQV,IACfW,MAAM,IAAD/G,OAAM8G,EAAQE,MAAK,MAAAhH,OAAK8G,EAAQG,SAASvH,MAAIM,OAAG8G,EAAQI,YAAYxH,KAAI,OAAAM,OAAM8G,EAAQI,YAAYC,MAC1G,IAET,MACI7D,GACIuD,EAAAA,EAAAA,KAAIzE,GAAoB,SAAC0E,GAAO,MAAM,CAClCR,MAAOQ,EAAQV,IACfW,MAAM,IAAD/G,OAAM8G,EAAQE,MAAK,MAAAhH,OAAK8G,EAAQG,SAASvH,MAAIM,OAAG8G,EAAQI,YAAYxH,KAAI,OAAAM,OAAM8G,EAAQI,YAAYC,MAC1G,IAIb,GAAG,CAACvH,GAAgBwC,KACpB4D,EAAAA,EAAAA,YAAU,WACN,IAAMvD,GAAWoE,EAAAA,EAAAA,KAAI/E,GAAa,SAAC+F,GAK/B,MAJY,CACRd,OAAiB,OAAVc,QAAU,IAAVA,OAAU,EAAVA,EAAYV,MAAO,OAAkB,OAAVU,QAAU,IAAVA,OAAU,EAAVA,EAAYC,KAC9CxB,MAAOuB,EAAWzB,IAG1B,IACA1D,EAAYD,EAChB,GAAG,CAACX,KACJkE,EAAAA,EAAAA,YAAU,WACN,IAC4B+B,EADtBC,EAAO5G,EAASM,MAClBsG,GAAQA,EAAKpD,YACbC,GAAamD,GACb/D,GAAqB,OAAJ+D,QAAI,IAAJA,OAAI,EAAJA,EAAMpD,UAAUZ,eACjClB,EAAsB,OAAJkF,QAAI,IAAJA,GAAe,QAAXD,EAAJC,EAAMpD,iBAAS,IAAAmD,OAAX,EAAJA,EAAiB1B,UAEvC,GAAI2B,GAAQA,EAAKC,MAAO,CACE,cAAlBD,EAAKE,WACLzC,GAAmB,WACnBI,GAAa,kBAEK,cAAlBmC,EAAKE,WACLzC,GAAmB,aACnBI,GAAa,yBAEjBR,GAAa2C,EAAKC,OAClBnF,EAAkB,CACdiE,MAAOiB,EAAKC,MAAME,OAAOhB,KAAO,MAAQa,EAAKC,MAAME,OAAOL,IAC1DxB,MAAO0B,EAAKC,MAAME,OAAO/B,MAE7B,IAAMzG,GAAWkH,EAAAA,EAAAA,KAAImB,EAAKC,MAAMtI,UAAU,SAACmH,GAAa,IAADsB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnD,MAAO,CACH1C,IAAKU,EAAQV,IACb+B,OAAQrB,EAAQqB,OAChBrB,QAAS,CACLV,IAAoB,QAAjBgC,EAAEtB,EAAQA,eAAO,IAAAsB,OAAA,EAAfA,EAAiBhC,IACtB1G,KAAqB,QAAjB2I,EAAEvB,EAAQA,eAAO,IAAAuB,GAAa,QAAbC,EAAfD,EAAiBnB,mBAAW,IAAAoB,OAAb,EAAfA,EAA8B5I,KACpCyH,KAAqB,QAAjBoB,EAAEzB,EAAQA,eAAO,IAAAyB,GAAa,QAAbC,EAAfD,EAAiBrB,mBAAW,IAAAsB,OAAb,EAAfA,EAA8BrB,KACpC4B,QAAwB,QAAjBN,EAAE3B,EAAQA,eAAO,IAAA2B,GAAa,QAAbC,EAAfD,EAAiBvB,mBAAW,IAAAwB,OAAb,EAAfA,EAA8BK,SAE3C7B,YAA4B,QAAjByB,EAAE7B,EAAQA,eAAO,IAAA6B,OAAA,EAAfA,EAAiBzB,YAAYd,IAC1Ca,SAAiB,OAAPH,QAAO,IAAPA,GAAgB,QAAT8B,EAAP9B,EAASA,eAAO,IAAA8B,OAAT,EAAPA,EAAkB3B,SAASb,IACrC4C,WAAmB,OAAPlC,QAAO,IAAPA,OAAO,EAAPA,EAASkC,WACrBC,cAAenC,EAAQmC,cACvBC,QAAMC,EAAAA,EAAAA,GAAA,GAAa,OAAPrC,QAAO,IAAPA,OAAO,EAAPA,EAASoC,QACrBlC,MAAc,OAAPF,QAAO,IAAPA,GAAgB,QAAT+B,EAAP/B,EAASA,eAAO,IAAA+B,OAAT,EAAPA,EAAkB7B,MACzBoC,UAAkB,OAAPtC,QAAO,IAAPA,OAAO,EAAPA,EAASsC,UACpBC,aAAqB,OAAPvC,QAAO,IAAPA,OAAO,EAAPA,EAASuC,aACvBC,KAAa,OAAPxC,QAAO,IAAPA,GAAgB,QAATgC,EAAPhC,EAASA,eAAO,IAAAgC,OAAT,EAAPA,EAAkBQ,KAEhC,IACArF,GAAiBtE,EACrB,CACA4J,OAAOC,QAAQC,aAAa,CAAC,EAAGC,SAASjK,MAC7C,GAAG,CAAC2B,EAASM,SAGT5B,EAAAA,EAAAA,MAAA,WAASC,UAAW,mCAAmCE,SAAA,EACnDC,EAAAA,EAAAA,KAACyJ,EAAAA,EAAc,CACXC,KAAMxF,GACNyF,OAAQrF,GACRsF,WACkB,aAAd1F,GACM,mDACA,GAEV2F,YAnNa,WACrBtF,IAAgB,GAChBuF,YAAW,WACP3F,GAAa,GACjB,GAAG,IACP,EA+MY4F,gBA/Jc,WACtB,GAAIjG,GAAckG,OAAS,EAAG,CAC1B,IAAMN,EAAO,CACTvD,QAASxD,EAAeyD,MACxB3G,SAAUqE,GACVmG,QAAS/E,GAAYA,GAAUgB,IAAM,MAEzClF,EACwB,cAApBsE,IACM4E,EAAAA,EAAAA,IAAeR,GACfxE,IACAiF,EAAAA,EAAAA,IAAYT,IACZU,EAAAA,EAAAA,IAAYV,IACpBW,MAAK,SAAAC,GAAuB,IAArBC,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QACPD,IACDrF,IAAaC,GAAa,MAC1BJ,GAAgByF,GAChBV,YAAW,WACP3F,GAAa,cACbI,IAAgB,GAChBsB,IACJ,GAAG,KACCnB,KACA1D,GAASyJ,EAAAA,EAAAA,IAAiB,CAACC,YAAahG,GAAUwB,OAClDvB,GAAa,OAGzB,GACJ,MACI4C,EAAAA,EAAAA,IAAezG,EAAE,+BAAgC,UAEzD,EAiIYiH,MAAOjD,MAEXlF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDE,SAAA,EAC3DH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCE,SAAA,EAChDC,EAAAA,EAAAA,KAAC2K,EAAAA,EAAc,CACXC,QAAQ,EACRC,YAAa,eACbzE,MAAOzD,GAAkB,GACzBkE,MAAO,cACPiE,SAAU,SAACC,GAAC,OAAKnI,EAAkBmI,EAAE,EACrCC,QAASzI,EACT0I,QAAQ,EACRC,SAA8B,cAApB5F,MAEdtF,EAAAA,EAAAA,KAAC2K,EAAAA,EAAc,CACXO,UACKvI,GAAsC,cAApB2C,GAEvBsF,QAAQ,EACRC,YAAa,mBACbzE,MAAO,GACPS,MAAO,cACPiE,SAzVgB,SAACK,GAQjC,GAPmBA,EAAOtC,SACpBnB,EAAAA,EAAAA,QACI5D,IACA,SAACsH,GAAG,OAAKA,EAAIxE,QAAQiC,UAAYsC,EAAOtC,OAAO,IACjDmB,OAAS,GACXtC,EAAAA,EAAAA,QAAO5D,IAAe,SAACsH,GAAG,OAAKA,EAAIxE,QAAQV,MAAQiF,EAAO/E,KAAK,IAC1D4D,OAAS,GA6BhBzC,EAAAA,EAAAA,IAAezG,EAAE,+BAAgC,aA5BpC,CACb,IAAM8F,EAAUuE,EAAOtC,QACjB3G,EAAmBmJ,MACf,SAACD,GAAG,OAAKA,EAAIpE,YAAY6B,UAAYsC,EAAOtC,OAAO,IAEvD3G,EAAmBmJ,MAAK,SAACD,GAAG,OAAKA,EAAIlF,MAAQiF,EAAO/E,KAAK,IAGzDkF,EAAiB,CACnBrD,OAAQtF,EAAeyD,MACvBQ,QAAS,CACLV,IAAKU,EAAQV,IACb1G,KAAMoH,EAAQI,YAAYxH,KAC1ByH,KAAML,EAAQI,YAAYC,KAC1B4B,QAASjC,EAAQI,YAAY6B,SAEjC7B,YAAaJ,EAAQI,YAAYd,IACjCa,SAAUH,EAAQG,SAASb,IAC3B4C,WAAYlC,EAAQ2E,MAAMC,aAC1BzC,cAAenC,EAAQ2E,MAAME,gBAC7BzC,OAAQ,CAAC0C,QAAS,GAClB5E,MAAOF,EAAQE,MACfoC,UAAWtC,EAAQ2E,MAAMC,aACzBrC,aAAcvC,EAAQ2E,MAAME,gBAC5BrC,KAAMxC,EAAQwC,MAElBrF,GAAiB,GAADjE,QAAA4G,EAAAA,EAAAA,GAAK5C,IAAa,CAAEwH,IACxC,CAGJ,EAoToBN,QAAS7H,QAGjBnD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,SAChC+D,GAAckG,QAKZhK,EAAAA,EAAAA,KAAC2L,EAAAA,EAAK,CACFC,KAAMlG,GACNoC,KAAMhE,GACN+H,QA7aR,CACZH,QAAS,CACL,CAACnM,MAAO,UACR,CACIA,MAAO,iBAEX,CACIA,MAAO,iBAEX,CAACA,MAAO,iBACR,CAACA,MAAO,kBACR,CACIA,MAAO,QAEX,CAACA,MAAO,QACR,CACIA,MAAO,KAGfuM,UAAW,CACP,CAACvM,MAAO,UACR,CACIA,MAAO,iBAEX,CACIA,MAAO,iBAEX,CAACA,MAAO,aACR,CAACA,MAAO,cACR,CACIA,MAAO,sBAEX,CAACA,MAAO,SACR,CACIA,MAAO,UA2YsB+F,IACjB7D,SAAUC,EACVqK,UAjUN,SAACzM,GACf,IAAM0M,GAAarF,EAAAA,EAAAA,KAAI7C,IAAe,SAACmI,GAAW,OAC9CA,EAAYrF,QAAQV,MAAQ5G,GAAE2J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEjBgD,GAAW,IACdjD,QAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCgD,EAAYjD,QAAM,IAAAkD,EAAAA,EAAAA,GAAA,GACpB5G,GACG6G,OAAOF,EAAYjD,OAAO1D,KAAoB,IAEtDwD,YAAYsD,EAAAA,EAAAA,KACPD,OAAOF,EAAYjD,OAAO1D,KAAoB,GAC3C2G,EAAY/C,WAEpBH,eAAesD,EAAAA,EAAAA,KACVF,OAAOF,EAAYjD,OAAO1D,KAAoB,GAC3C2G,EAAY9C,gBAGxB8C,CAAW,IAErBlI,GAAiBiI,EACrB,EA4SwBM,UA3SN,SAAChN,GACf,IAAM0M,GAAarF,EAAAA,EAAAA,KAAI7C,IAAe,SAACmI,GAAW,OAC9CA,EAAYrF,QAAQV,MAAQ5G,GAAE2J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEjBgD,GAAW,IACdjD,QAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCgD,EAAYjD,QAAM,IAAAkD,EAAAA,EAAAA,GAAA,GACpB5G,GACG6G,OAAOF,EAAYjD,OAAO1D,KAAoB,EACxC6G,OACIF,EAAYjD,OAAO1D,KACnB,EACJ,IAEdwD,YAAYsD,EAAAA,EAAAA,KACPD,OAAOF,EAAYjD,OAAO1D,KAAoB,EACzC6G,OAAOF,EAAYjD,OAAO1D,KAAoB,EAC9C,GAAK2G,EAAY/C,WAE3BH,eAAesD,EAAAA,EAAAA,KACVF,OAAOF,EAAYjD,OAAO1D,KAAoB,EACzC6G,OAAOF,EAAYjD,OAAO1D,KAAoB,EAC9C,GAAK2G,EAAY9C,gBAG/B8C,CAAW,IAErBlI,GAAiBiI,EACrB,EAgRwBO,aAjQH,SAACC,GAClB1I,GAAc2I,OAAOD,EAAO,GAC5BzI,IAAgB2C,EAAAA,EAAAA,GAAK5C,IACzB,EA+PwB4I,OAAQ,eACRC,mBAjRG,SAAC5B,EAAGzL,GAC3B,IAAMsN,EAAMT,OAAOpB,EAAE8B,OAAOzG,OACtB4F,GAAarF,EAAAA,EAAAA,KAAI7C,IAAe,SAACmI,GAAW,OAC9CA,EAAYrF,QAAQV,MAAQ5G,GAAE2J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEjBgD,GAAW,IACdjD,QAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMgD,EAAYjD,QAAM,IAAAkD,EAAAA,EAAAA,GAAA,GAAG5G,GAAkBsH,IACnD9D,YAAYsD,EAAAA,EAAAA,IAASQ,EAAMX,EAAY/C,WACvCH,eAAesD,EAAAA,EAAAA,IAASO,EAAMX,EAAY9C,gBAE9C8C,CAAW,IAErBlI,GAAiBiI,EACrB,KAuPoBhM,EAAAA,EAAAA,KAAC8M,EAAAA,EAAO,CACJC,KAAMjM,EAAE,gDAiBxBlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8HAA6HE,SAAA,EACxIH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCE,SAAA,EAC7CC,EAAAA,EAAAA,KAACgN,EAAAA,EAAW,CACRnC,YAAa/J,EAAE,4BACfsF,MAAO1C,GACPoH,SA3YS,SAACC,GAC1B,IAAMkC,EAAMlC,EAAE8B,OAAOzG,MACrBzC,GAAkBsJ,GAClB,IAAMC,EAAcD,EAAIE,QAAQ,OAAQ,KAAKC,OACvCC,GAAa3F,EAAAA,EAAAA,QAAOzF,GAAmB,SAACmJ,GAAG,OAC7CA,EAAInE,MACEmE,EAAInE,KAAKqG,cAAcC,SAASL,IAEhC9B,EAAI5L,KAAK+N,SAASL,EAAY,IAExClK,EAA8B,KAARiK,EAAaI,EAAapL,EACpD,EAiYoBuL,QAAS,WAAO,KAEpBxN,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8BAA6BE,UACxCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kEAAiEE,SAC3E8B,GACG7B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,UAClCC,EAAAA,EAAAA,KAACyN,EAAAA,EAAO,MAEZ1K,EAAmBiH,OAAS,GAC5BrD,EAAAA,EAAAA,KAAI5D,GAAoB,SAACgE,GAAQ,OAC7B/G,EAAAA,EAAAA,KAAC0N,EAAAA,EAAY,CAETpO,GAAIyH,EAASb,IACbxG,eACIqH,EAASb,MAAQxG,GAErBH,MAAOwH,EAASE,KAChBzH,KAAMuH,EAASvH,KACfC,SAAUsH,EAAStH,SAASuK,OAC5BrK,QAASiG,IARJmB,EAASb,IAShB,KAGNlG,EAAAA,EAAAA,KAAC8M,EAAAA,EAAO,CAACC,KAAMjM,EAAE,oCAKjClB,EAAAA,EAAAA,MAAA,OAAKC,UAAW,sBAAsBE,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UACI2N,KAAM,SACN9N,UAAW,oCACXF,QAnSK,WACjBmE,GAAckG,QACdzF,IAAgB,GAChBJ,GAAa,aAEZ1C,GAAmCmM,EAAAA,EAAAA,OAAxBC,EAAAA,EAAAA,KAEpB,EA4R8C9N,SAGpBe,EADe,cAApBwE,GACO,eACA,qBAES,cAApBA,KACGtF,EAAAA,EAAAA,KAAA,UACI2N,KAAM,SACNhO,QA9RA,WACpB,GAAImE,GAAckG,OAAS,EAAG,CAC1B,IAAM8D,EAAMhK,GAAciK,QACtB,SAACC,EAAKC,GAAG,OAAK7B,EAAAA,EAAAA,IAAS4B,EAAMC,EAAInF,WAAW,GAC5C,GAEEoF,EAASpK,GAAciK,QACzB,SAACC,EAAKC,GAAG,OAAK5B,EAAAA,EAAAA,IAAS2B,EAAMC,EAAIlF,cAAc,GAC/C,GAEEW,EAAO,CACThF,UAAW,CACPyB,QAASxD,EACTmB,cAAAA,GACAqK,WAAYL,EACZM,cAAeF,IAGvBlN,GAASqN,EAAAA,EAAAA,IAAqB3E,IAAOW,MAAK,SAAAhL,GAAOA,EAALkL,QAEpC1E,KACAzE,EAAS,0CAEjB,IACIsD,KACA1D,GAASyJ,EAAAA,EAAAA,IAAiB,CAACC,YAAahG,GAAUwB,OAClDvB,GAAa,MAErB,MACI4C,EAAAA,EAAAA,IAAezG,EAAE,+BAAgC,UAEzD,EAgQwBjB,UAAW,kCAAkCE,UAE7CC,EAAAA,EAAAA,KAACsO,EAAAA,IAAQ,CAACpO,KAAM,qBAO5C,C","sources":["Components/CategoryCard/CategoryCard.js","Config/socket.js","Pages/Orders/SendingOrders/Routes/RegisterOrders.js"],"sourcesContent":["import {IoCheckmark} from 'react-icons/io5'\r\n\r\nfunction CategoryCard({id, title, code, products, activeCategory, onClick}) {\r\n    return (\r\n        <div className={`category-card ${activeCategory ? 'active-category' : ''}`}\r\n             onClick={() => onClick(id)}>\r\n            <h1 className={`text-black-700 text-base leading-[1.5625rem]`}>{title || 'Nomsiz kategoriya'}</h1>\r\n            <div className={'flex justify-between'}>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>Kodi :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-warning-500 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{code || 0}</span>\r\n                </div>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>Maxsulot turlari :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-success-400 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{products || 0}</span>\r\n                </div>\r\n            </div>\r\n            <div className='category-card-checkmark'>\r\n                <IoCheckmark size={'1rem'} className={'check-icon'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryCard","import io from 'socket.io-client'\r\nconst baseURL = process.env.REACT_APP_API_SOCKET_ENDPOINT || 'http://alo24.uz'\r\n\r\nconst socket = io(baseURL)\r\nconst userData = JSON.parse(localStorage.getItem('userData'))\r\nsocket.auth = {token: userData.token, market: userData.market}\r\n\r\nexport default socket\r\n","import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../../../../Components/FieldContainer/FieldContainer'\r\nimport Table from '../../../../Components/Table/Table'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport SearchInput from '../../../../Components/Inputs/SearchInput.js'\r\nimport Spinner from '../../../../Components/Spinner/SmallLoader.js'\r\nimport {filter, map} from 'lodash'\r\nimport CategoryCard from '../../../../Components/CategoryCard/CategoryCard.js'\r\nimport NotFind from '../../../../Components/NotFind/NotFind.js'\r\nimport {IoAttach} from 'react-icons/io5'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {getConnectionMarkets} from '../../../Connection/connectionSlice.js'\r\nimport socket from '../../../../Config/socket.js'\r\nimport {\r\n    universalToast,\r\n    warningCurrencyRate,\r\n    warningSaleProductsEmpty,\r\n} from '../../../../Components/ToastMessages/ToastMessages.js'\r\nimport {\r\n    createOrder,\r\n    deliveredOrder,\r\n    setAllProductsPartner,\r\n    setCategoriesPartner,\r\n    updateOrder,\r\n} from '../Slices/registerOrdersSlice.js'\r\nimport {roundUsd, roundUzs} from '../../../../App/globalFunctions.js'\r\nimport UniversalModal from '../../../../Components/Modal/UniversalModal.js'\r\nimport {useLocation, useNavigate} from 'react-router-dom'\r\nimport {\r\n    createTemporaryOrder,\r\n    deleteSavedOrder,\r\n} from '../Slices/savedOrdersSlice.js'\r\n\r\nfunction RegisterOrders() {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const {currencyType, currency} = useSelector((state) => state.currency)\r\n    const {connections, loading} = useSelector((state) => state.connections)\r\n    const {market} = useSelector((state) => state.login)\r\n    const {categoriesPartner, allProductsPartner} = useSelector(\r\n        (state) => state.registerOrders\r\n    )\r\n\r\n    const [partners, setPartners] = useState()\r\n    const [currentPartner, setCurrentPartner] = useState(null)\r\n    const [filteredCategories, setFilteredCategories] =\r\n        useState(categoriesPartner)\r\n    const headers = {\r\n        recived: [\r\n            {title: '№'},\r\n            {\r\n                title: 'Maxsulot kodi',\r\n            },\r\n            {\r\n                title: 'Maxsulot nomi',\r\n            },\r\n            {title: 'Maxsulot soni'},\r\n            {title: 'Maxsulot narxi'},\r\n            {\r\n                title: 'Soni',\r\n            },\r\n            {title: 'Jami'},\r\n            {\r\n                title: '',\r\n            },\r\n        ],\r\n        delivered: [\r\n            {title: '№'},\r\n            {\r\n                title: 'Maxsulot kodi',\r\n            },\r\n            {\r\n                title: 'Maxsulot nomi',\r\n            },\r\n            {title: \"So'ralgan\"},\r\n            {title: 'Yuborilgan'},\r\n            {\r\n                title: 'Qabul qilinayotgan',\r\n            },\r\n            {title: 'Narxi'},\r\n            {\r\n                title: 'Jami',\r\n            },\r\n        ],\r\n    }\r\n    const [filteredProducts, setFilteredProducts] = useState([])\r\n    const [activeCategory, setActiveCategory] = useState(null)\r\n    const [searchCategory, setSearchCategory] = useState('')\r\n    const [tableProducts, setTableProducts] = useState([])\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [temporary, setTemporary] = useState(null)\r\n    const [sendingOrder, setSendingOrder] = useState(null)\r\n    const [editOrder, setEditOrder] = useState(null)\r\n    const [currentPosition, setCurrentPosition] = useState('recived')\r\n    const [tableBody, setTableBody] = useState('orderProducts')\r\n\r\n    const handleSearchCategory = (e) => {\r\n        const str = e.target.value\r\n        setSearchCategory(str)\r\n        const searchedStr = str.replace(/\\s+/g, ' ').trim()\r\n        const filterData = filter(categoriesPartner, (obj) =>\r\n            obj.name\r\n                ? obj.name.toLowerCase().includes(searchedStr) ||\r\n                  obj.code.includes(searchedStr)\r\n                : obj.code.includes(searchedStr)\r\n        )\r\n        setFilteredCategories(str !== '' ? filterData : categoriesPartner)\r\n    }\r\n    const handleClickCategory = (id) => {\r\n        if (activeCategory === id) {\r\n            setActiveCategory(null)\r\n        } else {\r\n            setActiveCategory(id)\r\n            setSearchCategory('')\r\n            setFilteredCategories(categoriesPartner)\r\n        }\r\n    }\r\n    const handleChangeSelectedProduct = (option) => {\r\n        const hasProduct = option.barcode\r\n            ? filter(\r\n                  tableProducts,\r\n                  (obj) => obj.product.barcode === option.barcode\r\n              ).length > 0\r\n            : filter(tableProducts, (obj) => obj.product._id === option.value)\r\n                  .length > 0\r\n        if (!hasProduct) {\r\n            const product = option.barcode\r\n                ? allProductsPartner.find(\r\n                      (obj) => obj.productdata.barcode === option.barcode\r\n                  )\r\n                : allProductsPartner.find((obj) => obj._id === option.value)\r\n\r\n            // if (product.total === 0) return warningCountSellPayment()\r\n            const currentProduct = {\r\n                sender: currentPartner.value,\r\n                product: {\r\n                    _id: product._id,\r\n                    code: product.productdata.code,\r\n                    name: product.productdata.name,\r\n                    barcode: product.productdata.barcode,\r\n                },\r\n                productdata: product.productdata._id,\r\n                category: product.category._id,\r\n                totalprice: product.price.sellingprice,\r\n                totalpriceuzs: product.price.sellingpriceuzs,\r\n                pieces: {recived: 1},\r\n                total: product.total,\r\n                unitprice: product.price.sellingprice,\r\n                unitpriceuzs: product.price.sellingpriceuzs,\r\n                unit: product.unit,\r\n            }\r\n            setTableProducts([...tableProducts, currentProduct])\r\n        } else {\r\n            universalToast(t(\"Maxsulot ro'yxatda mavjud !\"), 'error')\r\n        }\r\n    }\r\n    const increment = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                      ...prevProduct,\r\n                      pieces: {\r\n                          ...prevProduct.pieces,\r\n                          [currentPosition]:\r\n                              Number(prevProduct.pieces[currentPosition]) + 1,\r\n                      },\r\n                      totalprice: roundUsd(\r\n                          (Number(prevProduct.pieces[currentPosition]) + 1) *\r\n                              prevProduct.unitprice\r\n                      ),\r\n                      totalpriceuzs: roundUzs(\r\n                          (Number(prevProduct.pieces[currentPosition]) + 1) *\r\n                              prevProduct.unitpriceuzs\r\n                      ),\r\n                  }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n    const decrement = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                      ...prevProduct,\r\n                      pieces: {\r\n                          ...prevProduct.pieces,\r\n                          [currentPosition]:\r\n                              Number(prevProduct.pieces[currentPosition]) > 0\r\n                                  ? Number(\r\n                                        prevProduct.pieces[currentPosition]\r\n                                    ) - 1\r\n                                  : 0,\r\n                      },\r\n                      totalprice: roundUsd(\r\n                          (Number(prevProduct.pieces[currentPosition]) > 0\r\n                              ? Number(prevProduct.pieces[currentPosition]) - 1\r\n                              : 0) * prevProduct.unitprice\r\n                      ),\r\n                      totalpriceuzs: roundUzs(\r\n                          (Number(prevProduct.pieces[currentPosition]) > 0\r\n                              ? Number(prevProduct.pieces[currentPosition]) - 1\r\n                              : 0) * prevProduct.unitpriceuzs\r\n                      ),\r\n                  }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n    const handleCountProduct = (e, id) => {\r\n        const val = Number(e.target.value)\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                      ...prevProduct,\r\n                      pieces: {...prevProduct.pieces, [currentPosition]: val},\r\n                      totalprice: roundUsd(val * prevProduct.unitprice),\r\n                      totalpriceuzs: roundUzs(val * prevProduct.unitpriceuzs),\r\n                  }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n    const handleDelete = (index) => {\r\n        tableProducts.splice(index, 1)\r\n        setTableProducts([...tableProducts])\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n    const handleClickOrder = () => {\r\n        if (tableProducts.length) {\r\n            setModalVisible(true)\r\n            setModalBody('complete')\r\n        } else {\r\n            !currency ? warningCurrencyRate() : warningSaleProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const clearAll = () => {\r\n        setTableProducts([])\r\n        setCurrentPartner(null)\r\n    }\r\n\r\n    const handleClickSave = () => {\r\n        if (tableProducts.length > 0) {\r\n            const all = tableProducts.reduce(\r\n                (acc, cur) => roundUsd(acc + cur.totalprice),\r\n                0\r\n            )\r\n            const allUzs = tableProducts.reduce(\r\n                (acc, cur) => roundUzs(acc + cur.totalpriceuzs),\r\n                0\r\n            )\r\n            const body = {\r\n                temporary: {\r\n                    partner: currentPartner,\r\n                    tableProducts,\r\n                    totalPrice: all,\r\n                    totalPriceUzs: allUzs,\r\n                },\r\n            }\r\n            dispatch(createTemporaryOrder(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearAll()\r\n                    navigate('/dukonlar/buyurtma_berish/saqlanganlar')\r\n                }\r\n            })\r\n            if (temporary) {\r\n                dispatch(deleteSavedOrder({temporaryId: temporary._id}))\r\n                setTemporary(null)\r\n            }\r\n        } else {\r\n            universalToast(t(\"Maxsulotlar ro'yxati bo'sh!\"), 'warning')\r\n        }\r\n    }\r\n\r\n    const handleCreateOrder = () => {\r\n        if (tableProducts.length > 0) {\r\n            const body = {\r\n                partner: currentPartner.value,\r\n                products: tableProducts,\r\n                orderId: editOrder ? editOrder._id : null,\r\n            }\r\n            dispatch(\r\n                currentPosition === 'delivered'\r\n                    ? deliveredOrder(body)\r\n                    : editOrder\r\n                    ? updateOrder(body)\r\n                    : createOrder(body)\r\n            ).then(({error, payload}) => {\r\n                if (!error) {\r\n                    editOrder && setEditOrder(null)\r\n                    setSendingOrder(payload)\r\n                    setTimeout(() => {\r\n                        setModalBody('checkOrder')\r\n                        setModalVisible(true)\r\n                        clearAll()\r\n                    }, 500)\r\n                    if (temporary) {\r\n                        dispatch(deleteSavedOrder({temporaryId: temporary._id}))\r\n                        setTemporary(null)\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            universalToast(t(\"Maxsulotlar ro'yxati bo'sh!\"), 'warning')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let allProductsReducer = []\r\n        let productsForSearch = []\r\n        if (market && currentPartner) {\r\n            socket.emit('getPartnerProducts', {\r\n                market: market._id,\r\n                partner: currentPartner.value,\r\n            })\r\n            socket.on('partnerCategories', ({id, categories}) => {\r\n                if (id === market._id) {\r\n                    dispatch(setCategoriesPartner(categories))\r\n                    setFilteredCategories(categories)\r\n                }\r\n            })\r\n            socket.on('setPartnerProducts', ({id, products}) => {\r\n                if (id === market._id) {\r\n                    productsForSearch = [\r\n                        ...productsForSearch,\r\n                        ...map(products, (product) => ({\r\n                            value: product._id,\r\n                            label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                        })),\r\n                    ]\r\n                    setFilteredProducts(productsForSearch)\r\n                    allProductsReducer.push(...products)\r\n                    dispatch(setAllProductsPartner(allProductsReducer))\r\n                }\r\n            })\r\n            socket.on('error', ({id, message}) => {\r\n                id === market._id && universalToast(message, 'error')\r\n            })\r\n        }\r\n    }, [market, dispatch, currentPartner])\r\n    useEffect(() => {\r\n        dispatch(getConnectionMarkets())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        if (activeCategory) {\r\n            const filteredData = filter(\r\n                allProductsPartner,\r\n                (product) => product.category._id === activeCategory\r\n            )\r\n            setFilteredProducts(\r\n                map(filteredData, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        } else {\r\n            setFilteredProducts(\r\n                map(allProductsPartner, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [activeCategory, allProductsPartner])\r\n    useEffect(() => {\r\n        const partners = map(connections, (connection) => {\r\n            const val = {\r\n                label: connection?.name + ' - ' + connection?.inn,\r\n                value: connection._id,\r\n            }\r\n            return val\r\n        })\r\n        setPartners(partners)\r\n    }, [connections])\r\n    useEffect(() => {\r\n        const data = location.state\r\n        if (data && data.temporary) {\r\n            setTemporary(data)\r\n            setTableProducts(data?.temporary.tableProducts)\r\n            setCurrentPartner(data?.temporary?.partner)\r\n        }\r\n        if (data && data.order) {\r\n            if (data.position === 'requested') {\r\n                setCurrentPosition('recived')\r\n                setTableBody('orderProducts')\r\n            }\r\n            if (data.position === 'delivered') {\r\n                setCurrentPosition('delivered')\r\n                setTableBody('receiveOrderProducts')\r\n            }\r\n            setEditOrder(data.order)\r\n            setCurrentPartner({\r\n                label: data.order.sender.name + ' - ' + data.order.sender.inn,\r\n                value: data.order.sender._id,\r\n            })\r\n            const products = map(data.order.products, (product) => {\r\n                return {\r\n                    _id: product._id,\r\n                    sender: product.sender,\r\n                    product: {\r\n                        _id: product.product?._id,\r\n                        code: product.product?.productdata?.code,\r\n                        name: product.product?.productdata?.name,\r\n                        barcode: product.product?.productdata?.barcode,\r\n                    },\r\n                    productdata: product.product?.productdata._id,\r\n                    category: product?.product?.category._id,\r\n                    totalprice: product?.totalprice,\r\n                    totalpriceuzs: product.totalpriceuzs,\r\n                    pieces: {...product?.pieces},\r\n                    total: product?.product?.total,\r\n                    unitprice: product?.unitprice,\r\n                    unitpriceuzs: product?.unitpriceuzs,\r\n                    unit: product?.product?.unit,\r\n                }\r\n            })\r\n            setTableProducts(products)\r\n        }\r\n        window.history.replaceState({}, document.title)\r\n    }, [location.state])\r\n\r\n    return (\r\n        <section className={'flex grow relative overflow-auto'}>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                isOpen={modalVisible}\r\n                headerText={\r\n                    modalBody === 'complete'\r\n                        ? \"Buyurtma uchun so'rov yuborishni tasdiqlaysizmi?\"\r\n                        : ''\r\n                }\r\n                toggleModal={handleCloseModal}\r\n                approveFunction={handleCreateOrder}\r\n                order={sendingOrder}\r\n            />\r\n            <div className='flex flex-col grow gap-[1.25rem] overflow-auto'>\r\n                <div className='mainPadding flex flex gap-[1.25rem]'>\r\n                    <FieldContainer\r\n                        select={true}\r\n                        placeholder={'misol: Alo24'}\r\n                        value={currentPartner || ''}\r\n                        label={'Do`kon nomi'}\r\n                        onChange={(e) => setCurrentPartner(e)}\r\n                        options={partners}\r\n                        border={true}\r\n                        disabled={currentPosition === 'delivered'}\r\n                    />\r\n                    <FieldContainer\r\n                        disabled={\r\n                            !currentPartner || currentPosition === 'delivered'\r\n                        }\r\n                        select={true}\r\n                        placeholder={'misol: kompyuter'}\r\n                        value={''}\r\n                        label={'Maxsulotlar'}\r\n                        onChange={handleChangeSelectedProduct}\r\n                        options={filteredProducts}\r\n                    />\r\n                </div>\r\n                <div className='tableContainerPadding'>\r\n                    {!tableProducts.length ? (\r\n                        <NotFind\r\n                            text={t(\"Buyurtmaga mahsulotlar qo'shilmagan!\")}\r\n                        />\r\n                    ) : (\r\n                        <Table\r\n                            page={tableBody}\r\n                            data={tableProducts}\r\n                            headers={headers[currentPosition]}\r\n                            currency={currencyType}\r\n                            increment={increment}\r\n                            decrement={decrement}\r\n                            handleDelete={handleDelete}\r\n                            footer={'registersale'}\r\n                            handleCountProduct={handleCountProduct}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className='register-selling-right min-w-[20.25rem] bg-white-400 backdrop-blur-[3.125rem] rounded-[0.25rem] flex flex-col gap-[1.25rem]'>\r\n                <div className='flex flex-col grow gap-[1.25rem]'>\r\n                    <SearchInput\r\n                        placeholder={t('kategoriyani qidirish...')}\r\n                        value={searchCategory}\r\n                        onChange={handleSearchCategory}\r\n                        onKeyUp={() => {}}\r\n                    />\r\n                    <div className='grow relative overflow-auto'>\r\n                        <div className='cards-container absolute left-0 right-[0.125rem] top-0 bottom-0'>\r\n                            {loading ? (\r\n                                <div className='tableContainerPadding'>\r\n                                    <Spinner />\r\n                                </div>\r\n                            ) : filteredCategories.length > 0 ? (\r\n                                map(filteredCategories, (category) => (\r\n                                    <CategoryCard\r\n                                        key={category._id}\r\n                                        id={category._id}\r\n                                        activeCategory={\r\n                                            category._id === activeCategory\r\n                                        }\r\n                                        title={category.name}\r\n                                        code={category.code}\r\n                                        products={category.products.length}\r\n                                        onClick={handleClickCategory}\r\n                                    />\r\n                                ))\r\n                            ) : (\r\n                                <NotFind text={t('Kategoriya mavjud emas')} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'flex gap-[0.625rem]'}>\r\n                    <button\r\n                        type={'button'}\r\n                        className={'register-selling-right-accept-btn'}\r\n                        onClick={handleClickOrder}\r\n                    >\r\n                        {currentPosition === 'delivered'\r\n                            ? t('Qabul qilish')\r\n                            : t('Buyurtma berish')}\r\n                    </button>\r\n                    {currentPosition !== 'delivered' && (\r\n                        <button\r\n                            type={'button'}\r\n                            onClick={handleClickSave}\r\n                            className={'register-selling-right-deny-btn'}\r\n                        >\r\n                            <IoAttach size={'1.5rem'} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RegisterOrders\r\n"],"names":["_ref","id","title","code","products","activeCategory","onClick","_jsxs","className","concat","children","_jsx","IoCheckmark","size","socket","io","process","userData","JSON","parse","localStorage","getItem","auth","token","market","t","useTranslation","dispatch","useDispatch","location","useLocation","navigate","useNavigate","_useSelector","useSelector","state","currency","currencyType","_useSelector2","connections","loading","login","_useSelector4","registerOrders","categoriesPartner","allProductsPartner","_useState","useState","_useState2","_slicedToArray","partners","setPartners","_useState3","_useState4","currentPartner","setCurrentPartner","_useState5","_useState6","filteredCategories","setFilteredCategories","_useState7","_useState8","filteredProducts","setFilteredProducts","_useState9","_useState10","setActiveCategory","_useState11","_useState12","searchCategory","setSearchCategory","_useState13","_useState14","tableProducts","setTableProducts","_useState15","_useState16","modalBody","setModalBody","_useState17","_useState18","modalVisible","setModalVisible","_useState19","_useState20","temporary","setTemporary","_useState21","_useState22","sendingOrder","setSendingOrder","_useState23","_useState24","editOrder","setEditOrder","_useState25","_useState26","currentPosition","setCurrentPosition","_useState27","_useState28","tableBody","setTableBody","handleClickCategory","clearAll","useEffect","allProductsReducer","productsForSearch","emit","_id","partner","value","on","_ref3","categories","setCategoriesPartner","_ref4","_toConsumableArray","map","product","label","total","category","productdata","name","push","apply","setAllProductsPartner","_ref5","message","universalToast","getConnectionMarkets","filteredData","filter","connection","inn","_data$temporary","data","order","position","sender","_product$product","_product$product2","_product$product2$pro","_product$product3","_product$product3$pro","_product$product4","_product$product4$pro","_product$product5","_product$product6","_product$product7","_product$product8","barcode","totalprice","totalpriceuzs","pieces","_objectSpread","unitprice","unitpriceuzs","unit","window","history","replaceState","document","UniversalModal","body","isOpen","headerText","toggleModal","setTimeout","approveFunction","length","orderId","deliveredOrder","updateOrder","createOrder","then","_ref2","error","payload","deleteSavedOrder","temporaryId","FieldContainer","select","placeholder","onChange","e","options","border","disabled","option","obj","find","currentProduct","price","sellingprice","sellingpriceuzs","recived","Table","page","headers","delivered","increment","newRelease","prevProduct","_defineProperty","Number","roundUsd","roundUzs","decrement","handleDelete","index","splice","footer","handleCountProduct","val","target","NotFind","text","SearchInput","str","searchedStr","replace","trim","filterData","toLowerCase","includes","onKeyUp","Spinner","CategoryCard","type","warningSaleProductsEmpty","warningCurrencyRate","all","reduce","acc","cur","allUzs","totalPrice","totalPriceUzs","createTemporaryOrder","IoAttach"],"sourceRoot":""}