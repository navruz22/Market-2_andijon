{"version":3,"file":"static/js/6656.9df2ef8a.chunk.js","mappings":"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","sources":["Components/LinkToBack/LinkToBack.js","Components/Buttons/SaleBtns.js","Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/SupplierPage/SupplierReport.js"],"sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {IoChevronBack} from 'react-icons/io5'\r\n\r\nconst LinkToBack = ({link}) => {\r\n    return (\r\n        <Link to={link} className='linktoback'>\r\n            <IoChevronBack />\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default LinkToBack\r\n","import React from 'react'\r\nimport {\r\n    IoCardOutline,\r\n    IoCashOutline,\r\n    IoGitCompareOutline,\r\n    IoPricetagOutline,\r\n    IoSwapHorizontalOutline,\r\n    IoWalletOutline,\r\n} from 'react-icons/io5'\r\n\r\nexport const SaleBtn = ({ onClick, text, type, active }) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        card: <IoCardOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        transfer: (\r\n            <IoSwapHorizontalOutline\r\n                className='paymentsstyle'\r\n                size={'1.3125rem'}\r\n            />\r\n        ),\r\n        mixed: (\r\n            <IoGitCompareOutline className='paymentsstyle' size={'1.3125rem'} />\r\n        ),\r\n    }\r\n    return (\r\n        <button\r\n            onClick={() => onClick(type)}\r\n            className={`salestyle ${active ? 'bg-primary-700 text-white-900' : 'bg-[#E9ECEB]'\r\n                }`}\r\n        >\r\n            {icons[type]}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const DiscountBtn = ({ onClick, text }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='discountstyle w-full h-[3.25rem] bg-warning-500 text-white-900 duration-200 shadow-lg'\r\n        >\r\n            <IoPricetagOutline className='discstyle' size={'1.5rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const Payment = ({ onClick, text, onDoubleClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            onDoubleClick={onDoubleClick}\r\n            className={`paymentstyle grow`}\r\n        >\r\n            <IoWalletOutline className='paystyle' size={'1.3125rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n","//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'}\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={'misol: 100 000 000'}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>Chegirma :</div>\r\n            <PaymentSelect onChange={onChange} onSelect={onSelect} value={value} option={option} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\n\r\nfunction PaymentInput({mix, value, onChange, label, onClose, keyInput, placeholder, type}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `misol: 100 000 000`}\r\n                    type={type ||'number'}\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }} />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import { IoPerson } from 'react-icons/io5'\r\nimport { DiscountBtn, Payment, SaleBtn } from '../Buttons/SaleBtns.js'\r\nimport { DiscountInput } from '../Inputs/DiscountInputs.js'\r\nimport { useSelector } from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport { t } from 'i18next'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Checkbox from '../Checkbox/Checkbox.js'\r\nimport { roundUsd } from '../../App/globalFunctions.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    type = 'cash',\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    discount,\r\n    hasDiscount,\r\n    debt,\r\n    allPayment,\r\n    allPaymentUzs,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    exchangerate,\r\n    handleClickPay,\r\n    saleComment,\r\n    changeComment,\r\n    onDoubleClick,\r\n    paymentUsd = \"\",\r\n    debtuzs,\r\n    debtType,\r\n    setDebtType\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    { label: t('Naqd'), key: 'cash', value: cash },\r\n                    { label: t('Plastik'), key: 'card', value: card },\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return location.pathname.includes('/kassa/debts') ?\r\n                    (\r\n                        debtType === 'sum' ?\r\n                            <PaymentInput\r\n                                key={'sale-cash'}\r\n                                value={cash}\r\n                                onChange={onChange}\r\n                                keyInput={type}\r\n                                onClose={onClose}\r\n                                label={t('Naqd')}\r\n                            /> :\r\n                            <PaymentInput\r\n                                key={'sale-usd'}\r\n                                value={paymentUsd}\r\n                                onChange={onChange}\r\n                                keyInput={'usd'}\r\n                                onClose={onClose}\r\n                                label={t('USD')}\r\n                            />\r\n                    )\r\n                    :\r\n                    <>\r\n                        {type !== 'mixed' && <PaymentInput\r\n                            key={'sale-usd'}\r\n                            value={paymentUsd}\r\n                            onChange={onChange}\r\n                            keyInput={'usd'}\r\n                            onClose={onClose}\r\n                            label={t('USD')}\r\n                        />}\r\n                        <PaymentInput\r\n                            key={'sale-cash'}\r\n                            value={cash}\r\n                            onChange={onChange}\r\n                            keyInput={type}\r\n                            onClose={onClose}\r\n                            label={t('Naqd')}\r\n                        />\r\n                    </>\r\n        }\r\n    }\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`absolute transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${active\r\n                ? 'opacity-100 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none'\r\n                }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('Oynani yopish uchun bu yerga bosing !')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${active ? 'translate-x-0' : 'translate-x-full'\r\n                    }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {location.pathname.includes('/kassa/debts') && debtType === 'dollar' ? allPayment + ' USD' : allPaymentUzs + ' UZS'}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') || location.pathname.includes('/qarzdorlar') || location.pathname.includes('/maxsulotlar/qabul/qabulqilish') || location.pathname.includes('/maxsulotlar/qabul/qabullar')) && defineLabel()}\r\n                        <PaymentInput\r\n                            value={saleComment}\r\n                            key={'sale-card'}\r\n                            keyInput={type}\r\n                            onChange={changeComment}\r\n                            onClose={onClose}\r\n                            label={t('Izoh')}\r\n                            placeholder={t('misol: qarzga olindi')}\r\n                            type={'text'}\r\n                        />\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') ?\r\n                            (\r\n                                debtType === 'sum' ?\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {debtuzs} UZS\r\n                                        </h3>\r\n                                    </li>\r\n                                    :\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {roundUsd(debt)} USD <br /><br />\r\n                                        </h3>\r\n                                    </li>\r\n                            )\r\n                            :\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {roundUsd(debt)} USD <br /><br />\r\n                                    {debtuzs} UZS\r\n                                </h3>\r\n                            </li>\r\n                        }\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarz')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem] flex items-center gap-2'>\r\n                                <Checkbox\r\n                                    id={`debt`}\r\n                                    onChange={() => setDebtType('dollar')}\r\n                                    value={debtType === 'dollar' ? true : false}\r\n                                    label={t('USD')}\r\n                                />\r\n                                <Checkbox\r\n                                    id={`debt2`}\r\n                                    onChange={() => setDebtType('sum')}\r\n                                    value={debtType === 'sum' ? true : false}\r\n                                    label={t('UZS')}\r\n                                />\r\n                            </h3>\r\n                        </li>\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />}\r\n                        {/* {location.pathname.includes('/kassa/debts') && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />} */}\r\n                    </div>\r\n                    {/* {!returned && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )} */}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        onClick={handleClickPay}\r\n                        onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\nimport {UsdToUzs, UzsToUsd} from '../../App/globalFunctions'\r\nimport LinkToBack from '../../Components/LinkToBack/LinkToBack'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport CustomerPayment from '../../Components/Payment/CustomerPayment'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport Table from '../../Components/Table/Table'\r\nimport {warningMorePayment} from '../../Components/ToastMessages/ToastMessages'\r\nimport {payDebt} from '../Incomings/incomingSlice'\r\nimport {getIncomingConnectorsBySupplier} from './suppliersSlice'\r\n\r\nconst SupplierReport = () => {\r\n    const {id} = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const {user} = useSelector((state) => state.login)\r\n    const {currencyType, currency} = useSelector((state) => state.currency)\r\n    const {incomingconnectors, connectorscount} = useSelector(\r\n        (state) => state.suppliers\r\n    )\r\n\r\n    const [currentData, setCurrentData] = useState([])\r\n\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [countPage, setCountPage] = useState(10)\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(\r\n            new Date().getFullYear(),\r\n            new Date().getMonth(),\r\n            1\r\n        ).toISOString()\r\n    )\r\n    const [endDate, setEndDate] = useState(\r\n        new Date(new Date().setHours(23, 59, 59, 0)).toISOString()\r\n    )\r\n\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('approve')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [saleComment, setSaleComment] = useState('')\r\n    const [currentId, setCurrentId] = useState('')\r\n    let delay = null\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n    const convertToUsd = (value) => Math.round(value * 1000) / 1000\r\n    const convertToUzs = (value) => Math.round(value)\r\n    const currentEchangerate = (uzs, usd) => {\r\n        setExchangerate(convertToUzs(uzs / usd))\r\n    }\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(allPayment)\r\n                    setPaymentCashUzs(allPaymentUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(allPayment)\r\n                    setPaymentCardUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(allPayment)\r\n                    setPaymentTransferUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment)\r\n                    setPaymentDebtUzs(allPaymentUzs)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment)\r\n        const maxSumUzs = Math.abs(allPaymentUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, exchangerate))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, exchangerate))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate))\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleClickPay = () => {\r\n        if (delay === null) {\r\n            delay = window.setTimeout(() => {\r\n                delay = null\r\n                setModalBody('complete')\r\n                setModalVisible(true)\r\n            }, 300)\r\n        }\r\n    }\r\n    const handleDoubleClick = () => {\r\n        window.clearTimeout(delay)\r\n        delay = null\r\n        handleApprovePay()\r\n    }\r\n    const onClickPayDebt = (debts) => {\r\n        const all = debts.debt\r\n        const allUzs = debts.debtuzs\r\n        setCurrentId(debts._id)\r\n        setAllPayment(all)\r\n        setAllPaymentUzs(allUzs)\r\n        setPaymentCash(all)\r\n        setPaymentCashUzs(allUzs)\r\n        setPaid(all)\r\n        setPaidUzs(allUzs)\r\n        setPaymentModalVisible(true)\r\n        currentEchangerate(allUzs, all)\r\n        setPaymentModalVisible(true)\r\n    }\r\n    const handleApprovePay = () => {\r\n        const isMinus = (num) => (num < 0 && num) || -1 * num\r\n        const body = {\r\n            payment: {\r\n                payment:\r\n                    Number(\r\n                        allPayment < 0 ? isMinus(paymentCash) : paymentCash\r\n                    ) +\r\n                    Number(\r\n                        allPayment < 0 ? isMinus(paymentCard) : paymentCard\r\n                    ) +\r\n                    Number(\r\n                        allPayment < 0\r\n                            ? isMinus(paymentTransfer)\r\n                            : paymentTransfer\r\n                    ),\r\n                paymentuzs:\r\n                    Number(\r\n                        allPayment < 0\r\n                            ? isMinus(paymentCashUzs)\r\n                            : paymentCashUzs\r\n                    ) +\r\n                    Number(\r\n                        allPayment < 0\r\n                            ? isMinus(paymentCardUzs)\r\n                            : paymentCardUzs\r\n                    ) +\r\n                    Number(\r\n                        allPayment < 0\r\n                            ? paymentTransfer < 0 && isMinus(paymentTransferUzs)\r\n                            : paymentTransferUzs\r\n                    ),\r\n                type: paymentType,\r\n                cash: Number(\r\n                    allPayment < 0 ? isMinus(paymentCash) : paymentCash\r\n                ),\r\n                cashuzs: Number(\r\n                    allPaymentUzs < 0 ? isMinus(paymentCashUzs) : paymentCashUzs\r\n                ),\r\n                card: Number(\r\n                    allPayment < 0 ? isMinus(paymentCard) : paymentCard\r\n                ),\r\n                carduzs: Number(\r\n                    allPayment < 0 ? isMinus(paymentCardUzs) : paymentCardUzs\r\n                ),\r\n                transfer: Number(\r\n                    allPayment < 0 ? isMinus(paymentTransfer) : paymentTransfer\r\n                ),\r\n                transferuzs: Number(\r\n                    allPayment < 0\r\n                        ? isMinus(paymentTransferUzs)\r\n                        : paymentTransferUzs\r\n                ),\r\n                comment: saleComment,\r\n            },\r\n            user: user._id,\r\n            incomingconnectorid: currentId,\r\n        }\r\n        dispatch(payDebt(body)).then(({error}) => {\r\n            if (!error) {\r\n                dispatch(\r\n                    getIncomingConnectorsBySupplier({\r\n                        supplierid: id,\r\n                        startDate,\r\n                        endDate,\r\n                        currentPage,\r\n                        countPage,\r\n                    })\r\n                )\r\n                setModalVisible(false)\r\n                setModalBody('')\r\n                togglePaymentModal()\r\n            }\r\n        })\r\n    }\r\n    const changeComment = (e) => {\r\n        setSaleComment(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            supplierid: id,\r\n            startDate,\r\n            endDate,\r\n            currentPage,\r\n            countPage,\r\n        }\r\n        dispatch(getIncomingConnectorsBySupplier(body))\r\n    }, [dispatch, startDate, endDate, currentPage, countPage, id])\r\n\r\n    useEffect(() => {\r\n        setCurrentData(incomingconnectors)\r\n    }, [incomingconnectors])\r\n\r\n    const headers = [\r\n        {\r\n            title: '№',\r\n        },\r\n        {\r\n            title: 'Sana',\r\n        },\r\n        {\r\n            title: 'Vaqti',\r\n        },\r\n        {\r\n            title: 'ID',\r\n        },\r\n        {\r\n            title: 'Mahsulot turi',\r\n        },\r\n        {\r\n            title: 'Soni',\r\n        },\r\n        {\r\n            title: 'Umumiy',\r\n        },\r\n        {\r\n            title: \"To'langan\",\r\n        },\r\n        {\r\n            title: 'Qarz',\r\n        },\r\n        {\r\n            title: '',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className='relative grow overflow-hidden h-full'>\r\n            <div className='mainPadding'>\r\n                <LinkToBack link={'/hamkorlar/yetkazuvchilar'} />\r\n            </div>\r\n            <div className='flex items-center'>\r\n                <SearchForm\r\n                    filterBy={['total', 'startDate', 'endDate']}\r\n                    filterByTotal={(e) => setCountPage(e.value)}\r\n                    startDate={new Date(startDate)}\r\n                    endDate={new Date(endDate)}\r\n                    setStartDate={setStartDate}\r\n                    setEndDate={setEndDate}\r\n                />\r\n                <Pagination\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    countPage={countPage}\r\n                    totalDatas={connectorscount || 1}\r\n                />\r\n            </div>\r\n            <div className='tableContainerPadding'>\r\n                {currentData.length > 0 && (\r\n                    <Table\r\n                        page={'incomingsupplier'}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currencyType}\r\n                        headers={headers}\r\n                        data={currentData}\r\n                        Pay={onClickPayDebt}\r\n                    />\r\n                )}\r\n            </div>\r\n            <CustomerPayment\r\n                returned={true}\r\n                type={paymentType}\r\n                active={paymentModalVisible}\r\n                togglePaymentModal={togglePaymentModal}\r\n                changePaymentType={handleChangePaymentType}\r\n                onChange={handleChangePaymentInput}\r\n                allPayment={currencyType === 'USD' ? allPayment : allPaymentUzs}\r\n                card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                hasDiscount={false}\r\n                transfer={\r\n                    currencyType === 'USD'\r\n                        ? paymentTransfer\r\n                        : paymentTransferUzs\r\n                }\r\n                paid={currencyType === 'USD' ? paid : paidUzs}\r\n                handleClickPay={handleClickPay}\r\n                changeComment={changeComment}\r\n                saleComment={saleComment}\r\n                onDoubleClick={handleDoubleClick}\r\n            />\r\n            <UniversalModal\r\n                body={modalBody}\r\n                isOpen={modalVisible}\r\n                headerText={\"To'lovni amalga oshirishni tasdiqlaysizmi ?\"}\r\n                title={\r\n                    \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                }\r\n                approveFunction={handleApprovePay}\r\n                toggleModal={toggleModal}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SupplierReport\r\n"],"names":["_ref","link","_jsx","Link","to","className","children","IoChevronBack","SaleBtn","onClick","text","type","active","icons","cash","IoCashOutline","size","card","IoCardOutline","transfer","IoSwapHorizontalOutline","mixed","IoGitCompareOutline","_jsxs","concat","Payment","_ref3","onDoubleClick","IoWalletOutline","DropdownIcon","props","components","DropdownIndicator","_objectSpread","IoCaretDown","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","placeholder","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","TableInput","returned","togglePaymentModal","_ref$type","_ref$cash","_ref$card","_ref$transfer","discount","hasDiscount","debt","allPayment","allPaymentUzs","_ref$paid","paid","_ref$client","client","changePaymentType","discountSelectOption","handleChangeDiscountSelectOption","handleClickDiscountBtn","handleChangeDiscount","handleClickPay","exchangerate","saleComment","changeComment","_ref$paymentUsd","paymentUsd","debtuzs","debtType","setDebtType","location","useLocation","defineLabel","PaymentInput","t","key","map","obj","pathname","includes","stopPropagation","autoFocus","IoPerson","roundUsd","Checkbox","id","toLocaleString","useParams","dispatch","useDispatch","user","login","_useSelector2","_useSelector3","suppliers","incomingconnectors","connectorscount","_useState","useState","_useState2","_slicedToArray","currentData","setCurrentData","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","countPage","setCountPage","_useState7","Date","getFullYear","getMonth","toISOString","_useState8","startDate","setStartDate","_useState9","setHours","_useState10","endDate","setEndDate","_useState11","_useState12","paymentModalVisible","setPaymentModalVisible","_useState13","_useState14","paymentType","setPaymentType","_useState15","_useState16","paymentCash","setPaymentCash","_useState17","_useState18","paymentCashUzs","setPaymentCashUzs","_useState19","_useState20","paymentCard","setPaymentCard","_useState21","_useState22","paymentCardUzs","setPaymentCardUzs","_useState23","_useState24","paymentTransfer","setPaymentTransfer","_useState25","_useState26","paymentTransferUzs","setPaymentTransferUzs","_useState27","_useState28","paymentDebt","setPaymentDebt","_useState29","_useState30","paymentDebtUzs","setPaymentDebtUzs","_useState31","_useState32","setAllPayment","_useState33","_useState34","setAllPaymentUzs","_useState35","_useState36","setPaid","_useState37","_useState38","paidUzs","setPaidUzs","_useState39","_useState40","modalBody","setModalBody","_useState41","_useState42","modalVisible","setModalVisible","_useState43","_useState44","setExchangerate","_useState45","_useState46","setSaleComment","_useState47","_useState48","currentId","setCurrentId","delay","convertToUsd","Math","round","convertToUzs","bool","writePayment","maxSum","abs","maxSumUzs","all","Number","allUzs","UsdToUzs","warningMorePayment","allUsd","UzsToUsd","handleApprovePay","isMinus","num","body","payment","paymentuzs","cashuzs","carduzs","transferuzs","comment","_id","incomingconnectorid","payDebt","then","error","getIncomingConnectorsBySupplier","supplierid","useEffect","LinkToBack","SearchForm","filterBy","filterByTotal","Pagination","totalDatas","length","Table","page","headers","title","data","Pay","debts","CustomerPayment","window","setTimeout","clearTimeout","UniversalModal","isOpen","headerText","approveFunction","toggleModal"],"sourceRoot":""}