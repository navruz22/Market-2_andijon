{"version":3,"file":"static/js/3131.28a74558.chunk.js","mappings":"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","sources":["Pages/Incomings/Routes/SavedIncomings.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport Table from '../../../Components/Table/Table'\r\nimport {universalSort} from './../../../App/globalFunctions'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {\r\n    deleteTemporary,\r\n    getTemporary,\r\n    setTemporaryRegister,\r\n} from '../incomingSlice'\r\nimport {filter, map} from 'lodash'\r\nimport NotFind from '../../../Components/NotFind/NotFind.js'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal.js'\r\n\r\nconst SavedIncomings = () => {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    let navigate = useNavigate()\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const {\r\n        market: {_id},\r\n    } = useSelector((state) => state.login)\r\n\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const {temporaries} = useSelector((state) => state.incoming)\r\n\r\n    const [currentTemporaryData, setCurrentTemporaryData] = useState([])\r\n    const [storeData, setStoreData] = useState([])\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [modalBody, setModalBody] = useState('approve')\r\n    const [printBody, setPrintBody] = useState({})\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setPrintBody({})\r\n        setModalBody('')\r\n    }\r\n\r\n    const changeTemporaryData = useCallback((data) => {\r\n        const count = (arr, key) =>\r\n            arr.reduce((prev, item) => prev + item[key], 0)\r\n        const temporary = map(data, (temp) => {\r\n            let {\r\n                _id,\r\n                createdAt,\r\n                temporaryincoming: {supplier, incomings},\r\n            } = temp\r\n            return {\r\n                _id,\r\n                createdAt,\r\n                supplier,\r\n                incomings: {\r\n                    totalprice: count(incomings, 'totalprice'),\r\n                    totalpriceuzs: count(incomings, 'totalpriceuzs'),\r\n                    pieces: count(incomings, 'pieces'),\r\n                },\r\n                temporaries: incomings,\r\n            }\r\n        })\r\n        setCurrentTemporaryData(temporary)\r\n        setStoreData(temporary)\r\n    }, [])\r\n\r\n    const sendTemporayToRegister = (temporary) => {\r\n        const incomings = filter(\r\n            temporaries,\r\n            (temp) => temp._id === temporary._id\r\n        )[0]\r\n        dispatch(\r\n            setTemporaryRegister({\r\n                _id: temporary._id,\r\n                incomings: incomings.temporaryincoming.incomings,\r\n                supplier: temporary.supplier,\r\n            })\r\n        )\r\n        navigate('/maxsulotlar/qabul/qabulqilish')\r\n    }\r\n\r\n    const handlePrintModal = (el) => {\r\n        toggleModal()\r\n        setModalBody('savedincomingscheck')\r\n        setPrintBody({\r\n            createdAt: el.createdAt,\r\n            temporaries: el.temporaries,\r\n            supplier: el.supplier,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getTemporary({\r\n                market: _id,\r\n            })\r\n        )\r\n    }, [dispatch, _id])\r\n\r\n    const removeTemporary = (temporary) => {\r\n        dispatch(\r\n            deleteTemporary({\r\n                _id: temporary._id,\r\n            })\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        changeTemporaryData(temporaries)\r\n    }, [temporaries, changeTemporaryData])\r\n\r\n    // Tableheader\r\n    const headers = [\r\n        {\r\n            title: 'â„–',\r\n            styles: 'w-[8%]',\r\n        },\r\n        {\r\n            title: t('Yetkazib beruvchi'),\r\n            filter: 'supplier.name',\r\n            styles: '',\r\n        },\r\n        {\r\n            title: t('Maxsulotlar'),\r\n            filter: 'incomings.pieces',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Jami'),\r\n            filter: 'incomings.totalprice',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Sana'),\r\n            filter: 'createdAt',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Vaqti'),\r\n            filter: 'createdAt',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: '',\r\n            styles: 'w-[10%]',\r\n        },\r\n    ]\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        currentTemporaryData,\r\n                        setCurrentTemporaryData,\r\n                        filterKey,\r\n                        1,\r\n                        storeData\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        currentTemporaryData,\r\n                        setCurrentTemporaryData,\r\n                        filterKey,\r\n                        '',\r\n                        storeData\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        currentTemporaryData,\r\n                        setCurrentTemporaryData,\r\n                        filterKey,\r\n                        -1,\r\n                        storeData\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(\r\n                currentTemporaryData,\r\n                setCurrentTemporaryData,\r\n                filterKey,\r\n                -1,\r\n                storeData\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='tableContainerPadding grow mainPadding'>\r\n            <UniversalModal\r\n                isOpen={modalVisible}\r\n                body={modalBody}\r\n                // approveFunction={deletePayment}\r\n                printedIncomings={printBody}\r\n                toggleModal={toggleModal}\r\n            />\r\n            {currentTemporaryData.length > 0 ? (\r\n                <Table\r\n                    page={'temporaryincoming'}\r\n                    headers={headers}\r\n                    data={currentTemporaryData}\r\n                    currency={currencyType}\r\n                    Edit={sendTemporayToRegister}\r\n                    Delete={removeTemporary}\r\n                    Sort={filterData}\r\n                    sortItem={sorItem}\r\n                    Print={handlePrintModal}\r\n                />\r\n            ) : (\r\n                <NotFind text={t('Saqlangan qabullar mavjud emas')} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedIncomings\r\n"],"names":["t","useTranslation","dispatch","useDispatch","navigate","useNavigate","_useState","useState","filter","sort","count","_useState2","_slicedToArray","sorItem","setSorItem","_id","useSelector","state","login","market","currencyType","currency","temporaries","incoming","_useState3","_useState4","currentTemporaryData","setCurrentTemporaryData","_useState5","_useState6","storeData","setStoreData","_useState7","_useState8","modalVisible","setModalVisible","_useState9","_useState10","modalBody","setModalBody","_useState11","_useState12","printBody","setPrintBody","toggleModal","changeTemporaryData","useCallback","data","arr","key","reduce","prev","item","temporary","map","temp","createdAt","_temp$temporaryincomi","temporaryincoming","supplier","incomings","totalprice","totalpriceuzs","pieces","useEffect","getTemporary","headers","title","styles","_jsxs","className","children","_jsx","UniversalModal","isOpen","body","printedIncomings","length","Table","page","Edit","setTemporaryRegister","Delete","deleteTemporary","Sort","filterKey","universalSort","sortItem","Print","el","NotFind","text"],"sourceRoot":""}