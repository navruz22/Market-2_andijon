{"version":3,"file":"static/js/7991.30e6d80e.chunk.js","mappings":"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","sources":["Components/Dates/Dates.js","Components/FilterButtons/FilterButtons.js","Components/SelectInput/CustomStyle.js","Components/SelectInput/SelectInput.js","Pages/Incomings/Components/ResultIncomings.js","Components/Card/CardLink.js","Pages/Incomings/Routes/Incomings.js"],"sourcesContent":["import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport {IoCalendarNumber} from 'react-icons/io5'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nfunction Dates({value, onChange, placeholder, maxWidth}) {\r\n    return (\r\n        <div className={`group relative ${maxWidth ? maxWidth : 'grow'}`}>\r\n            <DatePicker\r\n                selected={value}\r\n                placeholderText={placeholder}\r\n                onChange={onChange}\r\n                className={`datePickerStyle`}\r\n                dateFormat={'dd.MM.yyyy'}\r\n            />\r\n            <IoCalendarNumber\r\n                size={'0.625rem'}\r\n                className='datePickerIcon group-hover:text-blue-500'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import React from 'react'\r\n\r\nfunction FilterButtons({label, element, grow}) {\r\n    return (\r\n        <div\r\n            className={`flex items-center gap-[0.75rem] ${grow ? 'grow' : ''}`}\r\n        >\r\n            {label && (\r\n                <h3\r\n                    className={\r\n                        'font-light text-blue-700 leading-[1rem] text-sm'\r\n                    }\r\n                >\r\n                    {label}:\r\n                </h3>\r\n            )}\r\n            {element}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterButtons\r\n","import React from 'react'\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} color={'#86A7E9'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\n\r\nconst DropdownIndicator = (styles, {isFocused}) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    paddingRight: '.625rem',\r\n    color: isFocused ? '#193F8A' : '#071F45'\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    zIndex: 30\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    color: '#1c1c1c',\r\n    fontSize: '.875rem',\r\n    lineHeight: '1.25rem',\r\n    fontWeight: '400',\r\n    margin: 0\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\n\r\nconst Placeholder = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    margin: 0,\r\n    color: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#86A7E9'\r\n})\r\nconst Control = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: '.625rem .58rem',\r\n    borderRadius: '.25rem',\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: '#86A7E9',\r\n    outline: 'none',\r\n    boxShadow: '0px 10px 10px rgba(0, 0, 0, 0.05)',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        backgroundColor: '#EAEAEA'\r\n    },\r\n    '&:focus-within': {\r\n        outline: '4px solid #A9C0EF',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    backgroundColor: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#fff',\r\n    border: isDisabled ? 'none' : '1px solid #86A7E9'\r\n})\r\n\r\nconst inputStyles = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    display: 'flex',\r\n    lineHeight: '1.25rem',\r\n    margin: 0\r\n})\r\n\r\nconst CustomStyle = {\r\n    container: (styles) => ({\r\n        ...styles,\r\n        height: '100%'\r\n    }),\r\n    control: Control,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    dropdownIndicator: DropdownIndicator,\r\n    placeholder: Placeholder,\r\n    input: inputStyles\r\n}\r\n\r\nexport default CustomStyle\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle'\r\n\r\nconst SelectInput = ({\r\n    onSelect,\r\n    options,\r\n    isDisabled,\r\n    label,\r\n    placeholder,\r\n    value,\r\n}) => {\r\n    return (\r\n        <div className='grow'>\r\n            {label && (\r\n                <label\r\n                    className={\r\n                        'text-blue-700 block leading-[1.125rem] mb-[.625rem]'\r\n                    }\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                value={value}\r\n                defaultValue={''}\r\n                options={options}\r\n                isDisabled={isDisabled}\r\n                placeholder={placeholder}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ResultIncomings = ({ connectors, styles, currencyType }) => {\r\n\r\n    const { t } = useTranslation(['common'])\r\n\r\n    const price = () => {\r\n        if (connectors.length > 0) {\r\n            return currencyType === 'USD'\r\n                ? connectors\r\n                    .reduce((prev, item) => prev + item.totalprice, 0)\r\n                    .toLocaleString('ru-RU')\r\n                : connectors\r\n                    .reduce((prev, item) => prev + item.totalpriceuzs, 0)\r\n                    .toLocaleString('ru-RU')\r\n        }\r\n        return 0\r\n    }\r\n\r\n    return (\r\n        <div className={`productTypeBlock ${styles}`}>\r\n            <div className='productType'>\r\n                {t(\"Maxsulotlar soni:\")}{' '}\r\n                <span className='ml-[0.5rem] font-[400] text-black-900'>\r\n                    {connectors\r\n                        .reduce((prev, item) => prev + item.products, 0)\r\n                        .toLocaleString('ru-RU')}\r\n                </span>\r\n            </div>\r\n            <div className='productSumAll'>\r\n                {t(\"Jami\")} :{' '}\r\n                <span className='ml-[0.5rem] font-[400] text-black-900'>\r\n                    {price()} {currencyType}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultIncomings\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CardLink = (\r\n    {\r\n        totalprice,\r\n        pieces,\r\n        suppliers,\r\n        createdAt,\r\n        currencyType,\r\n        path,\r\n        totalpriceuzs,\r\n        state,\r\n        debt,\r\n        debtUzs,\r\n        paid,\r\n        paidUzs\r\n    }) => {\r\n    return (\r\n        <Link to={path} className='flex-[0_0_23.5%]' state={state}>\r\n            <div className='w-full h-full cardStyle'>\r\n                <h1 className='headerStyle'>\r\n                    {(currencyType === 'USD'\r\n                            ? totalprice\r\n                            : totalpriceuzs\r\n                    ).toLocaleString('ru-Ru')}\r\n                    <span className='cardSpan'>{currencyType}</span>\r\n                </h1>\r\n\r\n                <div className='text-[.875rem] mt-[1rem]'>\r\n                    <div className='numberCard'>\r\n                        <p className='paragrafCard'>Maxsulot:</p>\r\n                        <p>{pieces.toLocaleString('ru-Ru')}</p>\r\n                    </div>\r\n                    <div className='numberCard'>\r\n                        <p className='paragrafCard'> Yetkazuvchilar</p>\r\n                        <p>{suppliers.toLocaleString('ru-Ru')}</p>\r\n                    </div>\r\n                    <div className='numberCard'>\r\n                        <p className='paragrafCard'>Sana:</p>\r\n                        <p>{new Date(createdAt).toLocaleDateString('ru-RU')}</p>\r\n                    </div>\r\n                    <span className={'block h-[1px] bg-white-400 my-[0.5rem]'}></span>\r\n                    <div className='numberCard items-center'>\r\n                        <p className='paragrafCard'>To'langan :</p>\r\n                        <span\r\n                            className={'block p-[0.1rem_0.5rem] rounded-[4px] bg-success-500'}>\r\n                            {currencyType === 'UZS' ? paidUzs.toLocaleString('ru-Ru') : paid.toLocaleString('ru-Ru')}{' '}\r\n                            <span>{currencyType}</span>\r\n                        </span>\r\n                    </div>\r\n                    {debt > 0 && <div className='numberCard items-center'>\r\n                        <p className='paragrafCard'>Qarzlar :</p>\r\n                        <span\r\n                            className={'block p-[0.1rem_0.5rem] rounded-[4px] bg-error-500'}>\r\n                            {currencyType === 'UZS' ? debtUzs.toLocaleString('ru-Ru') : debt.toLocaleString('ru-Ru')}{' '}\r\n                            <span>{currencyType}</span>\r\n                        </span>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CardLink\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport CardLink from '../../../Components/Card/CardLink'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {filter, map, uniqueId} from 'lodash'\r\nimport {getIncomingConnectors, getAllSuppliers} from '../incomingSlice'\r\nimport Dates from '../../../Components/Dates/Dates'\r\nimport SelectInput from '../../../Components/SelectInput/SelectInput'\r\nimport FilterButtons from '../../../Components/FilterButtons/FilterButtons'\r\nimport ResultIncomings from '../Components/ResultIncomings'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction Incomings() {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {\r\n        market: {_id},\r\n    } = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const {incomingconnectors, suppliers} = useSelector(\r\n        (state) => state.incoming\r\n    )\r\n\r\n    const [beginDay, setBeginDay] = useState(\r\n        new Date(\r\n            new Date().getFullYear(),\r\n            new Date().getMonth(),\r\n            1\r\n        ).toISOString()\r\n    )\r\n    const [endDay, setEndDay] = useState(\r\n        new Date(new Date().setHours(23, 59, 59, 0)).toISOString()\r\n    )\r\n\r\n    const [suppliersData, setSuppliersData] = useState([])\r\n    const [cardConnectors, setCardConnectors] = useState([])\r\n    const [supplierSearch, setSupplierSearch] = useState('')\r\n\r\n    // change suppliers data\r\n    const changeSuppliersData = (data) => {\r\n        const suppliers = map(data, (supplier) => {\r\n            return {\r\n                label: supplier.name,\r\n                value: supplier._id,\r\n            }\r\n        })\r\n        setSuppliersData(suppliers)\r\n    }\r\n\r\n    //change connectors data START\r\n    const changeConnectorsData = useCallback((data) => {\r\n        let groups = []\r\n        const convert = (el) => new Date(el.createdAt).toLocaleDateString()\r\n        for (let element of data) {\r\n            let existingGroups = filter(\r\n                groups,\r\n                (group) => convert(group) === convert(element)\r\n            )\r\n            if (existingGroups.length > 0) {\r\n                currentGroup(existingGroups, element)\r\n            } else {\r\n                newGroup(groups, element)\r\n            }\r\n        }\r\n        addChnagedIncomings(groups)\r\n    }, [])\r\n\r\n    const addChnagedIncomings = (groups) => {\r\n        const sumSupplier = (arr) => {\r\n            let repeat = []\r\n            return arr.reduce((prev, {_id}) => {\r\n                if (!repeat.includes(_id)) {\r\n                    repeat.push(_id)\r\n                    return prev + 1\r\n                }\r\n                return prev\r\n            }, 0)\r\n        }\r\n        const sumTotal = (arr) => {\r\n            return arr.reduce((prev, total) => prev + total, 0)\r\n        }\r\n        const data = map(groups, (income) => {\r\n            return {\r\n                createdAt: income.createdAt,\r\n                products: income.incoming.length,\r\n                suppliers: sumSupplier(income.supplier),\r\n                totalprice: sumTotal(income.total),\r\n                totalpriceuzs: sumTotal(income.totaluzs),\r\n                totalpayment: sumTotal(income.totalpayment),\r\n                totalpaymentuzs: sumTotal(income.totalpaymentuzs),\r\n                debt: sumTotal(income.debt),\r\n                debtuzs: sumTotal(income.debtuzs),\r\n            }\r\n        })\r\n        setCardConnectors(data)\r\n    }\r\n\r\n    const currentGroup = (exist, el) => {\r\n        exist[0].incoming.push(...el.incoming)\r\n        exist[0].supplier.push(el.supplier)\r\n        exist[0].total.push(el.total)\r\n        exist[0].totaluzs.push(el.totaluzs)\r\n        exist[0].totalpayment.push(el.totalpayment)\r\n        exist[0].totalpaymentuzs.push(el.totalpaymentuzs)\r\n        exist[0].debt.push(el.debt)\r\n        exist[0].debtuzs.push(el.debtuzs)\r\n        exist[0]._id = el._id\r\n    }\r\n\r\n    const newGroup = (group, el) => {\r\n        let newgroup = {\r\n            createdAt: el.createdAt,\r\n            incoming: [...el.incoming],\r\n            total: [el.total],\r\n            totaluzs: [el.totaluzs],\r\n            totalpayment: [el.totalpayment],\r\n            totalpaymentuzs: [el.totalpaymentuzs],\r\n            debt: [el.debt],\r\n            debtuzs: [el.debtuzs],\r\n            supplier: [el.supplier],\r\n            _id: el._id,\r\n        }\r\n        group.push(newgroup)\r\n    }\r\n    //change connectors data END\r\n\r\n    const selectSuppliers = (e) => {\r\n        let target = e.value\r\n        if (target === 'all') {\r\n            changeConnectorsData(incomingconnectors)\r\n            setSupplierSearch('')\r\n        } else {\r\n            const connectorsForSupplier = filter(\r\n                incomingconnectors,\r\n                ({supplier}) => {\r\n                    return supplier._id === target\r\n                }\r\n            )\r\n            changeConnectorsData(connectorsForSupplier)\r\n            setSupplierSearch(e.label)\r\n        }\r\n    }\r\n\r\n    // change date func\r\n    const changeDate = (value, name) => {\r\n        name === 'beginDay' && setBeginDay(new Date(value).toISOString())\r\n        name === 'endDay' && setEndDay(new Date(value).toISOString())\r\n    }\r\n\r\n    useEffect(() => {\r\n        changeSuppliersData(suppliers)\r\n    }, [suppliers])\r\n\r\n    useEffect(() => {\r\n        changeConnectorsData(incomingconnectors)\r\n    }, [incomingconnectors, changeConnectorsData])\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getIncomingConnectors({\r\n                market: _id,\r\n                beginDay,\r\n                endDay,\r\n            })\r\n        )\r\n    }, [dispatch, _id, beginDay, endDay])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllSuppliers({_id}))\r\n    }, [dispatch, _id])\r\n    return (\r\n        <section className={'grow overflow-auto'}>\r\n            <div className='flex items-center gap-[1.25rem] mainPadding'>\r\n                <Dates\r\n                    label={t('dan')}\r\n                    value={new Date(beginDay)}\r\n                    onChange={(value) => changeDate(value, 'beginDay')}\r\n                    maxWidth={'max-w-[9.6875rem]'}\r\n                />\r\n                <Dates\r\n                    label={t('gacha')}\r\n                    value={new Date(endDay)}\r\n                    onChange={(value) => changeDate(value, 'endDay')}\r\n                    maxWidth={'max-w-[9.6875rem]'}\r\n                />\r\n                <FilterButtons\r\n                    element={\r\n                        <SelectInput\r\n                            isSearchable={true}\r\n                            options={[\r\n                                {\r\n                                    label: t('Yetkazib beruvchilar'),\r\n                                    value: 'all',\r\n                                },\r\n                                ...suppliersData,\r\n                            ]}\r\n                            onSelect={selectSuppliers}\r\n                        />\r\n                    }\r\n                    grow={true}\r\n                    label={t('Yetkazuvchini tanlang')}\r\n                />\r\n            </div>\r\n            <ResultIncomings\r\n                currencyType={currencyType}\r\n                connectors={cardConnectors}\r\n                styles={'mainPadding'}\r\n            />\r\n            <div className='flex flex-wrap gap-[1.25rem] mainPadding'>\r\n                {map(cardConnectors, (item) => {\r\n                    return (\r\n                        <CardLink\r\n                            key={uniqueId('card')}\r\n                            totalprice={item.totalprice}\r\n                            totalpriceuzs={item.totalpriceuzs}\r\n                            currencyType={currencyType}\r\n                            pieces={item.products}\r\n                            suppliers={item.suppliers}\r\n                            createdAt={item.createdAt}\r\n                            debt={item.debt}\r\n                            debtUzs={item.debtuzs}\r\n                            paid={item.totalpayment}\r\n                            paidUzs={item.totalpaymentuzs}\r\n                            path={`/maxsulotlar/qabul/qabullar/${uniqueId()}`}\r\n                            state={{\r\n                                date: item.createdAt,\r\n                                supplier: supplierSearch,\r\n                            }}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Incomings\r\n"],"names":["_ref","value","onChange","placeholder","maxWidth","_jsxs","className","concat","children","_jsx","DatePicker","selected","placeholderText","dateFormat","IoCalendarNumber","size","label","element","grow","DropdownIcon","props","components","DropdownIndicator","_objectSpread","IoCaretDown","color","container","styles","height","control","_ref4","isDisabled","width","padding","borderRadius","fontSize","fontWeight","outline","boxShadow","cursor","backgroundColor","border","option","_ref2","isFocused","isSelected","transition","overflow","menu","zIndex","singleValue","lineHeight","margin","valueContainer","dropdownIndicator","paddingRight","_ref3","input","display","onSelect","options","Select","CustomStyle","defaultValue","IndicatorSeparator","connectors","currencyType","t","useTranslation","reduce","prev","item","products","toLocaleString","length","totalprice","totalpriceuzs","pieces","suppliers","createdAt","path","state","debt","debtUzs","paid","paidUzs","Link","to","Date","toLocaleDateString","dispatch","useDispatch","_id","useSelector","login","market","currency","_useSelector3","incoming","incomingconnectors","_useState","useState","getFullYear","getMonth","toISOString","_useState2","_slicedToArray","beginDay","setBeginDay","_useState3","setHours","_useState4","endDay","setEndDay","_useState5","_useState6","suppliersData","setSuppliersData","_useState7","_useState8","cardConnectors","setCardConnectors","_useState9","_useState10","supplierSearch","setSupplierSearch","changeConnectorsData","useCallback","data","_step","groups","convert","el","_iterator","_createForOfIteratorHelper","_loop","existingGroups","filter","group","currentGroup","newGroup","s","n","done","err","e","f","addChnagedIncomings","sumSupplier","arr","repeat","includes","push","sumTotal","total","map","income","supplier","totaluzs","totalpayment","totalpaymentuzs","debtuzs","exist","_exist$0$incoming","apply","_toConsumableArray","newgroup","changeDate","name","useEffect","changeSuppliersData","getIncomingConnectors","getAllSuppliers","Dates","FilterButtons","SelectInput","isSearchable","target","connectorsForSupplier","ResultIncomings","CardLink","uniqueId","date"],"sourceRoot":""}