{"version":3,"file":"static/js/7458.8f013e53.chunk.js","mappings":"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","sources":["Components/CategoryCard/CategoryCard.js","Components/Buttons/SaleBtns.js","Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Config/socket.js","Pages/Sale/Routes/RegisterSelling.js"],"sourcesContent":["import {IoCheckmark} from 'react-icons/io5'\r\n\r\nfunction CategoryCard({id, title, code, products, activeCategory, onClick}) {\r\n    return (\r\n        <div className={`category-card ${activeCategory ? 'active-category' : ''}`}\r\n             onClick={() => onClick(id)}>\r\n            <h1 className={`text-black-700 text-base leading-[1.5625rem]`}>{title || 'Nomsiz kategoriya'}</h1>\r\n            <div className={'flex justify-between'}>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>Kodi :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-warning-500 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{code || 0}</span>\r\n                </div>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>Maxsulot turlari :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-success-400 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{products || 0}</span>\r\n                </div>\r\n            </div>\r\n            <div className='category-card-checkmark'>\r\n                <IoCheckmark size={'1rem'} className={'check-icon'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryCard","import React from 'react'\r\nimport {\r\n    IoCardOutline,\r\n    IoCashOutline,\r\n    IoGitCompareOutline,\r\n    IoPricetagOutline,\r\n    IoSwapHorizontalOutline,\r\n    IoWalletOutline,\r\n} from 'react-icons/io5'\r\n\r\nexport const SaleBtn = ({ onClick, text, type, active }) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        card: <IoCardOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        transfer: (\r\n            <IoSwapHorizontalOutline\r\n                className='paymentsstyle'\r\n                size={'1.3125rem'}\r\n            />\r\n        ),\r\n        mixed: (\r\n            <IoGitCompareOutline className='paymentsstyle' size={'1.3125rem'} />\r\n        ),\r\n    }\r\n    return (\r\n        <button\r\n            onClick={() => onClick(type)}\r\n            className={`salestyle ${active ? 'bg-primary-700 text-white-900' : 'bg-[#E9ECEB]'\r\n                }`}\r\n        >\r\n            {icons[type]}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const DiscountBtn = ({ onClick, text }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='discountstyle w-full h-[3.25rem] bg-warning-500 text-white-900 duration-200 shadow-lg'\r\n        >\r\n            <IoPricetagOutline className='discstyle' size={'1.5rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const Payment = ({ onClick, text, onDoubleClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            onDoubleClick={onDoubleClick}\r\n            className={`paymentstyle grow`}\r\n        >\r\n            <IoWalletOutline className='paystyle' size={'1.3125rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n","//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'}\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={'misol: 100 000 000'}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>Chegirma :</div>\r\n            <PaymentSelect onChange={onChange} onSelect={onSelect} value={value} option={option} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\n\r\nfunction PaymentInput({mix, value, onChange, label, onClose, keyInput, placeholder, type}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `misol: 100 000 000`}\r\n                    type={type ||'number'}\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }} />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import { IoPerson } from 'react-icons/io5'\r\nimport { DiscountBtn, Payment, SaleBtn } from '../Buttons/SaleBtns.js'\r\nimport { DiscountInput } from '../Inputs/DiscountInputs.js'\r\nimport { useSelector } from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport { t } from 'i18next'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Checkbox from '../Checkbox/Checkbox.js'\r\nimport { roundUsd } from '../../App/globalFunctions.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    type = 'cash',\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    discount,\r\n    hasDiscount,\r\n    debt,\r\n    allPayment,\r\n    allPaymentUzs,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    exchangerate,\r\n    handleClickPay,\r\n    saleComment,\r\n    changeComment,\r\n    onDoubleClick,\r\n    paymentUsd = \"\",\r\n    debtuzs,\r\n    debtType,\r\n    setDebtType\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    { label: t('Naqd'), key: 'cash', value: cash },\r\n                    { label: t('Plastik'), key: 'card', value: card },\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return location.pathname.includes('/kassa/debts') ?\r\n                    (\r\n                        debtType === 'sum' ?\r\n                            <PaymentInput\r\n                                key={'sale-cash'}\r\n                                value={cash}\r\n                                onChange={onChange}\r\n                                keyInput={type}\r\n                                onClose={onClose}\r\n                                label={t('Naqd')}\r\n                            /> :\r\n                            <PaymentInput\r\n                                key={'sale-usd'}\r\n                                value={paymentUsd}\r\n                                onChange={onChange}\r\n                                keyInput={'usd'}\r\n                                onClose={onClose}\r\n                                label={t('USD')}\r\n                            />\r\n                    )\r\n                    :\r\n                    <>\r\n                        {type !== 'mixed' && <PaymentInput\r\n                            key={'sale-usd'}\r\n                            value={paymentUsd}\r\n                            onChange={onChange}\r\n                            keyInput={'usd'}\r\n                            onClose={onClose}\r\n                            label={t('USD')}\r\n                        />}\r\n                        <PaymentInput\r\n                            key={'sale-cash'}\r\n                            value={cash}\r\n                            onChange={onChange}\r\n                            keyInput={type}\r\n                            onClose={onClose}\r\n                            label={t('Naqd')}\r\n                        />\r\n                    </>\r\n        }\r\n    }\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`absolute transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${active\r\n                ? 'opacity-100 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none'\r\n                }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('Oynani yopish uchun bu yerga bosing !')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${active ? 'translate-x-0' : 'translate-x-full'\r\n                    }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {location.pathname.includes('/kassa/debts') && debtType === 'dollar' ? allPayment + ' USD' : allPaymentUzs + ' UZS'}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') || location.pathname.includes('/qarzdorlar') || location.pathname.includes('/maxsulotlar/qabul/qabulqilish') || location.pathname.includes('/maxsulotlar/qabul/qabullar')) && defineLabel()}\r\n                        <PaymentInput\r\n                            value={saleComment}\r\n                            key={'sale-card'}\r\n                            keyInput={type}\r\n                            onChange={changeComment}\r\n                            onClose={onClose}\r\n                            label={t('Izoh')}\r\n                            placeholder={t('misol: qarzga olindi')}\r\n                            type={'text'}\r\n                        />\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') ?\r\n                            (\r\n                                debtType === 'sum' ?\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {debtuzs} UZS\r\n                                        </h3>\r\n                                    </li>\r\n                                    :\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {roundUsd(debt)} USD <br /><br />\r\n                                        </h3>\r\n                                    </li>\r\n                            )\r\n                            :\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {roundUsd(debt)} USD <br /><br />\r\n                                    {debtuzs} UZS\r\n                                </h3>\r\n                            </li>\r\n                        }\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarz')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem] flex items-center gap-2'>\r\n                                <Checkbox\r\n                                    id={`debt`}\r\n                                    onChange={() => setDebtType('dollar')}\r\n                                    value={debtType === 'dollar' ? true : false}\r\n                                    label={t('USD')}\r\n                                />\r\n                                <Checkbox\r\n                                    id={`debt2`}\r\n                                    onChange={() => setDebtType('sum')}\r\n                                    value={debtType === 'sum' ? true : false}\r\n                                    label={t('UZS')}\r\n                                />\r\n                            </h3>\r\n                        </li>\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />}\r\n                        {/* {location.pathname.includes('/kassa/debts') && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />} */}\r\n                    </div>\r\n                    {/* {!returned && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )} */}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        onClick={handleClickPay}\r\n                        onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import io from 'socket.io-client'\r\nconst baseURL = process.env.REACT_APP_API_SOCKET_ENDPOINT || 'http://alo24.uz'\r\n\r\nconst socket = io(baseURL)\r\nconst userData = JSON.parse(localStorage.getItem('userData'))\r\nsocket.auth = {token: userData.token, market: userData.market}\r\n\r\nexport default socket\r\n","import React, { useEffect, useState } from 'react'\r\nimport Checkbox from '../../../Components/Checkbox/Checkbox.js'\r\nimport FieldContainer from '../../../Components/FieldContainer/FieldContainer.js'\r\nimport Table from '../../../Components/Table/Table.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IoAttach } from 'react-icons/io5'\r\nimport CategoryCard from '../../../Components/CategoryCard/CategoryCard.js'\r\nimport NotFind from '../../../Components/NotFind/NotFind.js'\r\nimport Spinner from '../../../Components/Spinner/SmallLoader.js'\r\nimport SmallLoader from '../../../Components/Spinner/SmallLoader.js'\r\nimport {\r\n    addPayment,\r\n    getClients,\r\n    getFilials,\r\n    makePayment,\r\n    returnSaleProducts,\r\n    savePayment,\r\n    setAllProductsBySocket,\r\n} from '../Slices/registerSellingSlice.js'\r\nimport { deleteSavedPayment } from '../Slices/savedSellingsSlice.js'\r\nimport { getAllPackmans } from '../../Clients/clientsSlice.js'\r\nimport SearchInput from '../../../Components/Inputs/SearchInput.js'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal.js'\r\nimport { roundUsd, UsdToUzs, UzsToUsd } from '../../../App/globalFunctions.js'\r\nimport {\r\n    universalToast,\r\n    warningCountSellPayment,\r\n    warningCurrencyRate,\r\n    warningEmptyPackCount,\r\n    warningLessPackCount,\r\n    warningLessSellPayment,\r\n    warningMoreDiscount,\r\n    warningMorePayment,\r\n    warningReturnProductsEmpty,\r\n    warningSaleProductsEmpty,\r\n} from '../../../Components/ToastMessages/ToastMessages.js'\r\nimport CustomerPayment from '../../../Components/Payment/CustomerPayment.js'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { filter, map } from 'lodash'\r\nimport socket from '../../../Config/socket.js'\r\nimport { setAllCategories } from '../../Category/categorySlice.js'\r\nimport Api from '../../../Config/Api.js'\r\n\r\nconst RegisterSelling = () => {\r\n    const { t } = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const { user, market } = useSelector((state) => state.login)\r\n    const { currencyType, currency } = useSelector((state) => state.currency)\r\n    const { allcategories, loading } = useSelector((state) => state.category)\r\n    const { allProducts, clients, loadingMakePayment, lastPayments } =\r\n        useSelector((state) => state.registerSelling)\r\n    const { packmans } = useSelector((state) => state.clients)\r\n    const [filteredProducts, setFilteredProducts] = useState([])\r\n    const [selectedProduct, setSelectedProduct] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    const [tableProducts, setTableProducts] = useState([])\r\n    const [filteredCategories, setFilteredCategories] = useState(allcategories)\r\n    const [activeCategory, setActiveCategory] = useState(null)\r\n    const [searchCategory, setSearchCategory] = useState('')\r\n    const [optionPackman, setOptionPackman] = useState([])\r\n    const [packmanValue, setPackmanValue] = useState('')\r\n    const [optionClient, setOptionClient] = useState([])\r\n    const [clientValue, setClientValue] = useState('')\r\n    const [userValue, setUserValue] = useState('')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [currentProduct, setCurrentProduct] = useState(null)\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentUsd, setPaymentUsd] = useState(\"\")\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDiscount, setPaymentDiscount] = useState('')\r\n    const [paymentDiscountUzs, setPaymentDiscountUzs] = useState('')\r\n    const [paymentDiscountPercent, setPaymentDiscountPercent] = useState('')\r\n    const [hasDiscount, setHasDiscount] = useState(false)\r\n    const [discountSelectOption, setDiscountSelectOption] = useState({\r\n        label: '%',\r\n        value: '%',\r\n    })\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n    const [temporary, setTemporary] = useState(null)\r\n    const [saleConnectorId, setSaleConnectorId] = useState(null)\r\n    const [returnProducts, setReturnProducts] = useState([])\r\n    const [discounts, setDiscounts] = useState([])\r\n    const [returnDiscounts, setReturnDiscounts] = useState([])\r\n    const [totalPaymentsUsd, setTotalPaymentsUsd] = useState(0)\r\n    const [totalPaymentsUzs, setTotalPaymentsUzs] = useState(0)\r\n    const [totalPaysUsd, setTotalPaysUsd] = useState(0)\r\n    const [totalPaysUzs, setTotalPaysUzs] = useState(0)\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [saleComment, setSaleComment] = useState('')\r\n    const [lowUnitpriceProducts, setLowUnitpriceProducts] = useState([])\r\n    const [wholesale, setWholesale] = useState(false)\r\n    const [debtType, setDebtType] = useState('sum')\r\n\r\n    const [selectedFilial, setSelectedFilial] = useState({\r\n        label: market.name,\r\n        value: market._id,\r\n    })\r\n\r\n    let delay = null\r\n\r\n    const headers = [\r\n        { title: '№' },\r\n        { title: t('Filial') },\r\n        { title: t('Qoldiq') },\r\n        { title: t('Nomi') },\r\n        { title: t('Soni') },\r\n        { title: t('Narxi') },\r\n        { title: t('Jami'), styles: 'w-[8rem]' },\r\n        { title: '' },\r\n        { title: '' },\r\n    ]\r\n\r\n    const headerReturn = [\r\n        { title: '№' },\r\n        { title: t('Kodi') },\r\n        { title: t('Nomi') },\r\n        { title: t('Soni') },\r\n        { title: t('Jami') },\r\n        { title: t('Soni') },\r\n        { title: t('Jami') },\r\n    ]\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setHasDiscount(false)\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setDiscountSelectOption({ label: '%', value: '%' })\r\n    }\r\n\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n\r\n    const convertToUsd = (value) => Math.round(value * 10000) / 10000\r\n\r\n    const convertToUzs = (value) => Math.round(value)\r\n\r\n    const currentEchangerate = (uzs, usd) => {\r\n        setExchangerate(convertToUzs(uzs / usd))\r\n    }\r\n\r\n    // if (product.total === 0) return warningCountSellPayment()\r\n    const handleClickPayment = () => {\r\n        if (tableProducts.length) {\r\n            if (\r\n                tableProducts.some(\r\n                    (prod) => prod.total === 0 && prod.fromFilial === 0\r\n                )\r\n            )\r\n                return warningCountSellPayment()\r\n            const filteredData = tableProducts\r\n                .filter((item) => item.unitprice <= item.incomingprice)\r\n                .map((item) => item.product._id)\r\n            if (filteredData.length > 0) {\r\n                setLowUnitpriceProducts(filteredData)\r\n                warningLessSellPayment()\r\n            } else {\r\n                setLowUnitpriceProducts(filteredData)\r\n                const all = tableProducts.reduce(\r\n                    (acc, cur) => convertToUsd(acc + cur.totalprice),\r\n                    0\r\n                )\r\n                const allUzs = tableProducts.reduce(\r\n                    (acc, cur) => convertToUzs(acc + cur.totalpriceuzs),\r\n                    0\r\n                )\r\n                const allUzs2 = tableProducts.reduce(\r\n                    (acc, cur) => convertToUzs(acc + (!cur.isUsd && cur.totalpriceuzs || 0)),\r\n                    0\r\n                )\r\n                const allUsd = tableProducts.reduce(\r\n                    (prev, el) => prev + (el.isUsd && el.totalprice || 0),\r\n                0 )\r\n\r\n                const allUsd2 = tableProducts.reduce(\r\n                    (prev, el) => prev + (!el.isUsd && el.totalprice || 0),\r\n                0 )\r\n                setAllPayment(roundUsd(all))\r\n                setAllPaymentUzs(allUzs)\r\n                setPaymentUsd(roundUsd(allUsd))\r\n                setPaymentCash(roundUsd(allUsd2))\r\n                setPaymentCashUzs(allUzs2)\r\n                setPaid(roundUsd(all))\r\n                setPaidUzs(allUzs)\r\n                setPaymentModalVisible(true)\r\n                currentEchangerate(allUzs, all)\r\n            }\r\n        } else {\r\n            !currency ? warningCurrencyRate() : warningSaleProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const handleChangePaymentType = (type) => {\r\n        const all = allPayment - Number(paymentDiscount)\r\n        const allUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        const all2 = returnProducts.reduce(\r\n            (summ, product) => convertToUsd(summ + product.totalprice),\r\n            0\r\n        )\r\n        const all2Uzs = returnProducts.reduce(\r\n            (summ, product) => convertToUzs(summ + product.totalpriceuzs),\r\n            0\r\n        )\r\n        const payment = convertToUsd(totalPaymentsUsd - totalPaysUsd - all2)\r\n        const paymentUzs = convertToUzs(\r\n            totalPaymentsUzs - totalPaysUzs - all2Uzs\r\n        )\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentCash(Math.abs(payment))\r\n                            setPaymentCashUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentCash(0)\r\n                            setPaymentCashUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentCash(all)\r\n                        setPaymentCashUzs(allUzs)\r\n                        setPaymentCard('')\r\n                        setPaymentCardUzs('')\r\n                        setPaymentTransfer('')\r\n                        setPaymentTransferUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    break\r\n                case 'card':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentCard(Math.abs(payment))\r\n                            setPaymentCardUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentCard(0)\r\n                            setPaymentCardUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentCard(all)\r\n                        setPaymentCardUzs(allUzs)\r\n                        setPaymentCash('')\r\n                        setPaymentCashUzs('')\r\n                        setPaymentTransfer('')\r\n                        setPaymentTransferUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    break\r\n                case 'transfer':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentTransfer(Math.abs(payment))\r\n                            setPaymentTransferUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentTransfer(0)\r\n                            setPaymentTransferUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentTransfer(all)\r\n                        setPaymentTransferUzs(allUzs)\r\n                        setPaymentCash('')\r\n                        setPaymentCashUzs('')\r\n                        setPaymentCard('')\r\n                        setPaymentCardUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentUsd('')\r\n                    setPaymentDebt(allPayment - Number(paymentDiscount))\r\n                    setPaymentDebtUzs(\r\n                        allPaymentUzs - Number(paymentDiscountUzs)\r\n                    )\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    \r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment) \r\n        const maxSumUzs = Math.abs(allPaymentUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentUsd)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(UsdToUzs(paymentUsd, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'usd') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCashUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentUsd(value)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(UsdToUzs(paymentUsd, exchangerate)) +\r\n                    Number(paymentTransferUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentUsd) +\r\n                    Number(paymentTransfer) +\r\n                    Number(paymentCard)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'usd') {\r\n                const all =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) \r\n                const allUsd =\r\n                    Number(value) + paymentCash \r\n                if (all <= maxSumUzs) {\r\n                    // console.log(maxSum, allUsd);\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                    setPaymentUsd(value)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, exchangerate))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, exchangerate))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate))\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChangeDiscount = (value) => {\r\n        const allPaymentAfterDiscount =\r\n            Math.round(((allPayment * 30) / 100) * 1000) / 1000\r\n        const allPaymentUzsAfterDiscount =\r\n            Math.round(((allPaymentUzs * 30) / 100) * 1) / 1\r\n        if (discountSelectOption.value === 'USD') {\r\n            if (value > allPaymentAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentAfterDiscount} USD`)\r\n            } else {\r\n                setPaymentDiscount(value)\r\n                setPaymentDiscountUzs(UsdToUzs(value, exchangerate))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPayment * value) / 100) * 1000) / 1000\r\n                )\r\n                setPaymentDebt(allPayment - value)\r\n                setPaymentDebtUzs(UsdToUzs(allPayment - value, exchangerate))\r\n            }\r\n        } else if (discountSelectOption.value === 'UZS') {\r\n            if (value > allPaymentUzsAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentUzsAfterDiscount} UZS`)\r\n            } else {\r\n                setPaymentDiscountUzs(value)\r\n                setPaymentDiscount(UzsToUsd(value, exchangerate))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPaymentUzs * value) / 100) * 1000) / 1000\r\n                )\r\n                setPaymentDebt(UzsToUsd(allPaymentUzs - value, exchangerate))\r\n                setPaymentDebtUzs(allPaymentUzs - value)\r\n            }\r\n        } else {\r\n            if (value > 30) {\r\n                warningMoreDiscount('30%')\r\n            } else {\r\n                const discountUsd =\r\n                    Math.round(((allPayment * value) / 100) * 1000) / 1000\r\n                const discountUzs =\r\n                    Math.round(((allPaymentUzs * value) / 100) * 1) / 1\r\n                setPaymentDiscountPercent(value)\r\n                setPaymentDiscount(discountUsd)\r\n                setPaymentDiscountUzs(discountUzs)\r\n                setPaymentDebt(convertToUsd(allPayment - discountUsd))\r\n                setPaymentDebtUzs(convertToUzs(allPaymentUzs - discountUzs))\r\n                setPaid(allPayment - discountUsd)\r\n                setPaidUzs(allPaymentUzs - discountUzs)\r\n            }\r\n        }\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n    }\r\n\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n\r\n    const handleClickDiscountBtn = () => {\r\n        setHasDiscount(!hasDiscount)\r\n        if (paymentType === 'cash') {\r\n            setPaymentCash(allPayment)\r\n            setPaymentCashUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'card') {\r\n            setPaymentCard(allPayment)\r\n            setPaymentCardUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'transfer') {\r\n            setPaymentTransfer(allPayment)\r\n            setPaymentTransferUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else {\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n        }\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n    }\r\n\r\n    const handleChangeDiscountSelectOption = (option) => {\r\n        if (discountSelectOption.value !== option.value) {\r\n            setDiscountSelectOption(option)\r\n            setPaymentDiscount('')\r\n            setPaymentDiscountUzs('')\r\n            setPaymentDiscountPercent('')\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n        }\r\n    }\r\n\r\n    const clearAll = (bool) => {\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaymentUsd('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n        setTableProducts([])\r\n        setClientValue('')\r\n        setPackmanValue('')\r\n        setOptionPackman([\r\n            {\r\n                label: t('Tanlang'),\r\n                value: '',\r\n            },\r\n            ...map([...packmans], (pack) => ({\r\n                value: pack._id,\r\n                label: pack.name,\r\n            })),\r\n        ])\r\n        setOptionClient([\r\n            {\r\n                label: t('Barchasi'),\r\n                value: '',\r\n            },\r\n            ...map([...clients], (client) => ({\r\n                value: client._id,\r\n                label: client.name,\r\n                saleconnectorid: client?.saleconnectorid || null,\r\n            })),\r\n        ])\r\n        setUserValue('')\r\n        setChecked(false)\r\n        setActiveCategory(null)\r\n        setCurrentProduct(null)\r\n        setSearchCategory('')\r\n        setSaleConnectorId(null)\r\n        setReturnDiscounts([])\r\n        setDiscounts([])\r\n        setReturnProducts([])\r\n        setTotalPaysUsd(0)\r\n        setTotalPaysUzs(0)\r\n        setTotalPaymentsUzs(0)\r\n        setTotalPaymentsUsd(0)\r\n        togglePaymentModal(bool)\r\n        setSelectedFilial({\r\n            label: market.name,\r\n            value: market._id,\r\n        })\r\n    }\r\n\r\n    const handleClickPay = () => {\r\n        if (delay === null) {\r\n            delay = window.setTimeout(() => {\r\n                delay = null\r\n                setModalBody('complete')\r\n                setModalVisible(true)\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    const handleDoubleClick = () => {\r\n        window.clearTimeout(delay)\r\n        delay = null\r\n        returnProducts.length > 0 ? handleApproveReturn() : handleApprovePay()\r\n    }\r\n\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    const handleApprovePay = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            saleproducts: map(tableProducts, (product) => {\r\n                if (wholesale) {\r\n                    const prev = {\r\n                        ...product,\r\n                        pieces:\r\n                            Number(product.pieces) + Number(product.fromFilial),\r\n                        unitprice: product.tradeprice || product.unitprice,\r\n                        unitpriceuzs:\r\n                            product.tradepriceuzs || product.unitpriceuzs,\r\n                    }\r\n                    prev?.tradeprice && delete prev?.tradeprice\r\n                    prev?.tradepriceuzs && delete prev?.tradepriceuzs\r\n                    return prev\r\n                } else {\r\n                    const prev = {\r\n                        ...product,\r\n                        pieces:\r\n                            Number(product.pieces) + Number(product.fromFilial),\r\n                    }\r\n                    prev?.tradeprice && delete prev?.tradeprice\r\n                    prev?.tradepriceuzs && delete prev?.tradepriceuzs\r\n                    return prev\r\n                }\r\n            }),\r\n            client: {\r\n                _id: clientValue ? clientValue.value : null,\r\n                name: clientValue ? clientValue.label : userValue,\r\n                packman: clientValue?.packman,\r\n            },\r\n            packman: packmanValue\r\n                ? {\r\n                    _id: packmanValue.value,\r\n                    name: packmanValue.label,\r\n                }\r\n                : null,\r\n            discount: {\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n                procient: Number(paymentDiscountPercent),\r\n                isProcient: !!paymentDiscountPercent,\r\n            },\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(paymentCash),\r\n                cashuzs: Number(paymentCashUzs),\r\n                card: Number(paymentCard),\r\n                carduzs: Number(paymentCardUzs),\r\n                transfer: Number(paymentTransfer),\r\n                transferuzs: Number(paymentTransferUzs),\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n                usdpayment: Number(paymentUsd),\r\n            },\r\n            debt: {\r\n                debt: Number(paymentDebt),\r\n                debtuzs: Number(paymentDebtUzs),\r\n                debtType: debtType,\r\n                comment: '',\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n            comment: saleComment,\r\n        }\r\n        dispatch(saleConnectorId ? addPayment(body) : makePayment(body)).then(\r\n            ({ payload, error }) => {\r\n                if (!error) {\r\n                    setModalData(payload)\r\n                    setWholesale(false)\r\n                    setTimeout(() => {\r\n                        setModalBody('checkSell')\r\n                        setModalVisible(true)\r\n                        clearAll()\r\n                    }, 500)\r\n                    if (temporary) {\r\n                        dispatch(deleteSavedPayment({ _id: temporary._id }))\r\n                        setTemporary(null)\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleApproveReturn = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            saleproducts: filter(\r\n                returnProducts,\r\n                (product) => Number(product.pieces) > 0\r\n            ),\r\n            discounts: returnDiscounts,\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(allPayment < 0 ? -1 * paymentCash : paymentCash),\r\n                cashuzs: Number(\r\n                    allPaymentUzs < 0 ? -1 * paymentCashUzs : paymentCashUzs\r\n                ),\r\n                card: Number(allPayment < 0 ? -1 * paymentCard : paymentCard),\r\n                carduzs: Number(\r\n                    allPayment < 0 ? -1 * paymentCardUzs : paymentCardUzs\r\n                ),\r\n                transfer: Number(\r\n                    allPayment < 0 ? -1 * paymentTransfer : paymentTransfer\r\n                ),\r\n                transferuzs: Number(\r\n                    allPayment < 0 ? -1 * paymentTransferUzs : paymentTransfer\r\n                ),\r\n            },\r\n            debt: {\r\n                debt: Number(allPayment < 0 ? -1 * paymentDebt : paymentDebt),\r\n                debtuzs: Number(\r\n                    allPayment < 0 ? -1 * paymentDebtUzs : paymentDebtUzs\r\n                ),\r\n                comment: '',\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n            comment: saleComment,\r\n        }\r\n        dispatch(returnSaleProducts(body)).then(({ payload, error }) => {\r\n            if (!error) {\r\n                setModalData(payload)\r\n                setTimeout(() => {\r\n                    setModalBody('checkSellReturn')\r\n                    setModalVisible(true)\r\n                    clearAll()\r\n                }, 500)\r\n            }\r\n        })\r\n    }\r\n    console.log(tableProducts);\r\n    const handleClickSave = () => {\r\n        if (tableProducts.length > 0) {\r\n            const all = tableProducts.reduce(\r\n                (acc, cur) => convertToUsd(acc + cur.totalprice),\r\n                0\r\n            )\r\n            const allUzs = tableProducts.reduce(\r\n                (acc, cur) => convertToUzs(acc + cur.totalpriceuzs),\r\n                0\r\n            )\r\n            const body = {\r\n                temporary: {\r\n                    saleconnectorid: null,\r\n                    clientValue,\r\n                    packmanValue,\r\n                    userValue,\r\n                    tableProducts,\r\n                    totalPrice: all,\r\n                    totalPriceUzs: allUzs,\r\n                },\r\n            }\r\n            dispatch(savePayment(body)).then(({ error }) => {\r\n                if (!error) {\r\n                    clearAll(false)\r\n                    navigate('/sotuv/saqlanganlar')\r\n                }\r\n            })\r\n            if (temporary) {\r\n                dispatch(deleteSavedPayment({ _id: temporary._id }))\r\n                setTemporary(null)\r\n            }\r\n        }\r\n    }\r\n\r\n    // bu yerda boshqa funksiyalar\r\n    const handleChange = (id, value, key) => {\r\n        switch (key) {\r\n            case 'unitprice':\r\n                handleChangeProductUnitPriceTable(id, value)\r\n                break\r\n            case 'pieces':\r\n                handleChangeProductNumberTable(id, value)\r\n                break\r\n            case 'fromFilial':\r\n                handleChangeFromFilial(id, value)\r\n                break\r\n            case 'select':\r\n                handleSelectFilial(id, value)\r\n                break\r\n            case 'packcount':\r\n                handlePackcount(id, value)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const handlePackcount = (index, value) => {\r\n        if (tableProducts.some((prod, i) => i === index && !prod.packcount)) {\r\n            return warningEmptyPackCount()\r\n        }\r\n        if (tableProducts.some((prod, i) => i === index && prod?.packcount > prod.total)) {\r\n            return warningEmptyPackCount()\r\n        }\r\n        console.log(value);\r\n        const newRelease = map(tableProducts, (prod, i) => {\r\n            if (i === index) {\r\n                return {\r\n                    ...prod,\r\n                    totalpackcount: !prod?.isPackcount && ((prod.total / prod.packcount) / 100) * 100,\r\n                    isPackcount: !prod?.isPackcount,\r\n                    totalprice: !prod?.isPackcount ? convertToUsd(\r\n                        (prod?.packcount) *\r\n                        (wholesale\r\n                            ? prod.tradeprice ||\r\n                            prod.unitprice\r\n                            : prod.unitprice)\r\n                    ) : prod.unitprice,\r\n                    totalpriceuzs: !prod?.isPackcount ? convertToUzs(\r\n                        (prod?.packcount) *\r\n                        (wholesale\r\n                            ? prod.tradepriceuzs ||\r\n                            prod.unitpriceuzs\r\n                            : prod.unitpriceuzs)\r\n                    ) : prod.unitpriceuzs,\r\n                    packcountpieces: 1,\r\n                    pieces: !prod?.isPackcount ? prod.packcount : 1\r\n                }\r\n            }\r\n\r\n            return prod\r\n        })\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    console.log(tableProducts);\r\n\r\n    const handleDelete = (index) => {\r\n        tableProducts.splice(index, 1)\r\n        setTableProducts([...tableProducts])\r\n    }\r\n\r\n    const handleChangeChecked = () => {\r\n        if (checked) {\r\n            setUserValue('')\r\n            setPackmanValue('')\r\n            setClientValue('')\r\n        }\r\n        setChecked(!checked)\r\n    }\r\n\r\n    const handleClickCategory = (id) => {\r\n        if (activeCategory === id) {\r\n            setActiveCategory(null)\r\n        } else {\r\n            setActiveCategory(id)\r\n            setSearchCategory('')\r\n            setFilteredCategories(allcategories)\r\n        }\r\n    }\r\n\r\n    const handleSearchCategory = (e) => {\r\n        const str = e.target.value\r\n        setSearchCategory(str)\r\n        const searchedStr = str.replace(/\\s+/g, ' ').trim()\r\n        const filterData = filter(allcategories, (obj) =>\r\n            obj.name\r\n                ? obj.name.toLowerCase().includes(searchedStr) ||\r\n                obj.code.includes(searchedStr)\r\n                : obj.code.includes(searchedStr)\r\n        )\r\n        setFilteredCategories(str !== '' ? filterData : allcategories)\r\n    }\r\n\r\n    const handleChangeSelectedProduct = (option) => {\r\n        // const hasProduct = option.barcode\r\n        //     ? filter(\r\n        //           tableProducts,\r\n        //           (obj) => obj.product.barcode === option.barcode\r\n        //       ).length > 0\r\n        //     : filter(tableProducts, (obj) => obj.product._id === option.value)\r\n        //           .length > 0\r\n\r\n        !option.barcode && setSelectedProduct(option)\r\n        const product = option.barcode\r\n            ? allProducts.find(\r\n                (obj) => obj.productdata.barcode === option.barcode\r\n            )\r\n            : allProducts.find((obj) => obj._id === option.value)\r\n\r\n        const currentProduct = {\r\n            total: product.total,\r\n            product: {\r\n                _id: product._id,\r\n                code: product.productdata.code,\r\n                name: product.productdata.name,\r\n                barcode: product.productdata.barcode,\r\n            },\r\n            totalprice: product.price.sellingprice,\r\n            totalpriceuzs: product.price.sellingpriceuzs,\r\n            tradeprice: product.price.tradeprice || 0,\r\n            tradepriceuzs: product.price.tradepriceuzs || 0,\r\n            pieces: 1,\r\n            isUsd: product?.isUsd || false,\r\n            incomingprice: product.price.incomingprice,\r\n            incomingpriceuzs: product.price.incomingpriceuzs,\r\n            unitprice: product.price.sellingprice,\r\n            unitpriceuzs: product.price.sellingpriceuzs,\r\n            categorycode: product.category.code,\r\n            filialProductsTotal: product.total,\r\n            fromFilial: 0,\r\n            filial: market._id,\r\n            packcount: product?.packcount,\r\n        }\r\n        if (\r\n            (currencyType === 'USD' &&\r\n                currentProduct.incomingprice <= currentProduct.unitprice) ||\r\n            (currencyType === 'UZS' &&\r\n                currentProduct.incomingpriceuzs <=\r\n                currentProduct.unitpriceuzs)\r\n        ) {\r\n            setTableProducts([...tableProducts, currentProduct])\r\n            setSelectedProduct('')\r\n        } else {\r\n            warningLessSellPayment()\r\n        }\r\n\r\n    }\r\n    console.log(tableProducts);\r\n    const handleChangePackmanValue = (option) => {\r\n        setPackmanValue(option)\r\n        const pack = filter(packmans, (pack) => pack._id === option.value)[0]\r\n        if (pack && pack.hasOwnProperty('clients')) {\r\n            setOptionClient(\r\n                map(pack.clients, (client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: pack,\r\n                    saleconnectorid: client?.saleconnectorid || null,\r\n                }))\r\n            )\r\n        } else {\r\n            setOptionClient([\r\n                {\r\n                    label: t('Tanlang'),\r\n                    value: '',\r\n                },\r\n                ...map([...clients], (client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: client?.packman,\r\n                    saleconnectorid: client?.saleconnectorid || null,\r\n                })),\r\n            ])\r\n        }\r\n        setClientValue('')\r\n        setUserValue('')\r\n    }\r\n\r\n    const handleClickPrint = () => { }\r\n\r\n    const handleChangeClientValue = (option) => {\r\n        setClientValue(option)\r\n        setSaleConnectorId(option?.saleconnectorid || null)\r\n        const client = filter(\r\n            clients,\r\n            (client) => client._id === option.value\r\n        )[0]\r\n        if (client && client.hasOwnProperty('packman')) {\r\n            setPackmanValue({\r\n                label: client?.packman?.name,\r\n                value: client?.packman?._id,\r\n            })\r\n        }\r\n        option.value ? setUserValue(option.label) : setUserValue('')\r\n    }\r\n\r\n    const handleChangeUserValue = (e) => {\r\n        setUserValue(e.target.value)\r\n    }\r\n\r\n    const handleChangeProductUnitPrice = (value) => {\r\n        setCurrentProduct({\r\n            ...currentProduct,\r\n            unitprice:\r\n                currencyType === 'USD' ? value : UzsToUsd(value, exchangerate),\r\n            unitpriceuzs:\r\n                currencyType === 'UZS' ? value : UsdToUzs(value, exchangerate),\r\n            totalprice:\r\n                currencyType === 'USD'\r\n                    ? value * currentProduct.pieces\r\n                    : UzsToUsd(value * currentProduct.pieces, exchangerate),\r\n            totalpriceuzs:\r\n                currencyType === 'UZS'\r\n                    ? value * currentProduct.pieces\r\n                    : UsdToUzs(value * currentProduct.pieces, exchangerate),\r\n        })\r\n    }\r\n\r\n    const handleChangeProductNumber = (value) => {\r\n        setCurrentProduct({\r\n            ...currentProduct,\r\n            pieces: value,\r\n            totalprice: value * currentProduct.unitprice,\r\n            totalpriceuzs: value * currentProduct.unitpriceuzs,\r\n        })\r\n    }\r\n\r\n    const handleChangeProductUnitPriceTable = (index, value) => {\r\n        const newRelease = !wholesale\r\n            ? map(tableProducts, (prevProduct, i) =>\r\n                i === index\r\n                    ? {\r\n                        ...prevProduct,\r\n                        unitprice:\r\n                            currencyType === 'USD'\r\n                                ? value\r\n                                : UzsToUsd(value, exchangerate),\r\n                        unitpriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value\r\n                                : UsdToUzs(value, exchangerate),\r\n                        totalprice:\r\n                            currencyType === 'USD'\r\n                                ? value *\r\n                                (Number(prevProduct.pieces))\r\n                                : UzsToUsd(\r\n                                    value *\r\n                                    Number(prevProduct.pieces),\r\n                                    exchangerate\r\n                                ),\r\n                        totalpriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value *\r\n                                (Number(prevProduct.pieces))\r\n                                : UsdToUzs(\r\n                                    value *\r\n                                    Number(prevProduct.pieces),\r\n                                    exchangerate\r\n                                ),\r\n                    }\r\n                    : prevProduct\r\n            )\r\n            : map(tableProducts, (prevProduct, i) =>\r\n                i === index\r\n                    ? {\r\n                        ...prevProduct,\r\n                        tradeprice:\r\n                            currencyType === 'USD'\r\n                                ? value\r\n                                : UzsToUsd(value, exchangerate),\r\n                        tradepriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value\r\n                                : UsdToUzs(value, exchangerate),\r\n                        totalprice:\r\n                            currencyType === 'USD'\r\n                                ? value * prevProduct.pieces\r\n                                : UzsToUsd(\r\n                                    value * prevProduct.pieces,\r\n                                    exchangerate\r\n                                ),\r\n                        totalpriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value * prevProduct.pieces\r\n                                : UsdToUzs(\r\n                                    value * prevProduct.pieces,\r\n                                    exchangerate\r\n                                ),\r\n                    }\r\n                    : prevProduct\r\n            )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeProductNumberTable = (index, value) => {\r\n        const newRelease = map(tableProducts, (prevProduct, i) =>\r\n            i === index\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: prevProduct?.isPackcount ? Number(value) * prevProduct?.packcount : value,\r\n                    packcountpieces: prevProduct?.isPackcount ? Number(value) : 0,\r\n                    totalprice: convertToUsd(\r\n                        (prevProduct?.isPackcount ? Number(value) * prevProduct?.packcount : Number(value)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (prevProduct?.isPackcount ? Number(value) * prevProduct?.packcount : Number(value)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeFromFilial = (id, value) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    fromFilial: Number(value),\r\n                    totalprice: convertToUsd(\r\n                        (Number(value) + Number(prevProduct.pieces)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(value) + Number(prevProduct.pieces)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeProduct = (value, key) => {\r\n        switch (key) {\r\n            case 'unitprice':\r\n                handleChangeProductUnitPrice(value)\r\n                break\r\n            case 'pieces':\r\n                handleChangeProductNumber(value)\r\n                break\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    const increment = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: Number(prevProduct.pieces) + 1,\r\n                    totalprice: convertToUsd(\r\n                        (Number(prevProduct.pieces) +\r\n                            Number(prevProduct.fromFilial) +\r\n                            1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(prevProduct.pieces) +\r\n                            Number(prevProduct.fromFilial) +\r\n                            1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const decrement = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces:\r\n                        Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) - 1\r\n                            : 1,\r\n                    totalprice: convertToUsd(\r\n                        (Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) -\r\n                            1 +\r\n                            Number(prevProduct.fromFilial)\r\n                            : 1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) -\r\n                            1 +\r\n                            Number(prevProduct.fromFilial)\r\n                            : 1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const changeComment = (e) => {\r\n        setSaleComment(e)\r\n    }\r\n\r\n    const handleError = () => {\r\n        universalToast(t(\"Mahsulot kodi o'qilmadi!\"), 'warning')\r\n    }\r\n\r\n    const handleScan = (data) => {\r\n        handleChangeSelectedProduct({ barcode: data })\r\n    }\r\n\r\n    const handleChangeReturnProduct = (value, id, index) => {\r\n        if (value > Number(returnProducts[index].product.pieces))\r\n            return universalToast(\r\n                t(\r\n                    \"Diqqat! Qaytariladigan mahsulot soni sotilgan mahsulot sonidan ortiq bo'lolmaydi\"\r\n                ),\r\n                'warning'\r\n            )\r\n        const newRelease = map(returnProducts, (prevProduct) =>\r\n            prevProduct._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: value,\r\n                    totalprice: convertToUsd(value * prevProduct.unitprice),\r\n                    totalpriceuzs: convertToUzs(\r\n                        value * prevProduct.unitpriceuzs\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setReturnProducts(newRelease)\r\n    }\r\n\r\n    const handleClickReturnPayment = () => {\r\n        if (returnProducts.length) {\r\n            const all = returnProducts.reduce(\r\n                (summ, product) => convertToUsd(summ + product.totalprice),\r\n                0\r\n            )\r\n            const allUzs = returnProducts.reduce(\r\n                (summ, product) => convertToUzs(summ + product.totalpriceuzs),\r\n                0\r\n            )\r\n\r\n            const newRelease = discounts.map((discount) => {\r\n                let newDiscount = { ...discount }\r\n                map(returnProducts, (product) => {\r\n                    if (discount._id === product.product?.discount) {\r\n                        newDiscount = {\r\n                            ...discount,\r\n                            discount: convertToUsd(\r\n                                newDiscount.discount -\r\n                                (product.totalprice * discount.procient) /\r\n                                100\r\n                            ),\r\n                            discountuzs: convertToUzs(\r\n                                newDiscount.discountuzs -\r\n                                (product.totalpriceuzs *\r\n                                    discount.procient) /\r\n                                100\r\n                            ),\r\n                            totalprice: convertToUsd(\r\n                                newDiscount.totalprice - product.totalprice\r\n                            ),\r\n                            totalpriceuzs: convertToUzs(\r\n                                newDiscount.totalpriceuzs -\r\n                                product.totalpriceuzs\r\n                            ),\r\n                        }\r\n                    }\r\n                    return ''\r\n                })\r\n                return { ...newDiscount }\r\n            })\r\n            const totalDiscountsUsd = newRelease.reduce(\r\n                (summ, discount) => summ + discount.discount,\r\n                0\r\n            )\r\n            const totalDiscountsUzs = newRelease.reduce(\r\n                (summ, discount) => summ + discount.discountuzs,\r\n                0\r\n            )\r\n            const payment = convertToUsd(\r\n                totalPaymentsUsd - totalPaysUsd - totalDiscountsUsd - all\r\n            )\r\n            const paymentUzs = convertToUzs(\r\n                totalPaymentsUzs - totalPaysUzs - totalDiscountsUzs - allUzs\r\n            )\r\n\r\n            setReturnDiscounts(newRelease)\r\n            if (payment <= 0) {\r\n                setAllPayment(payment)\r\n                setAllPaymentUzs(paymentUzs)\r\n                setPaymentCash(Math.abs(payment))\r\n                setPaymentCashUzs(Math.abs(paymentUzs))\r\n                setPaid(Math.abs(payment))\r\n                setPaidUzs(Math.abs(paymentUzs))\r\n            } else {\r\n                setPaymentCash(0)\r\n                setPaymentCashUzs(UsdToUzs(0, exchangerate))\r\n                setPaymentDebt(convertToUsd(payment))\r\n                setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                setAllPayment(all)\r\n                setAllPaymentUzs(allUzs)\r\n                setPaid(all)\r\n                setPaidUzs(allUzs)\r\n            }\r\n            setPaymentModalVisible(true)\r\n            currentEchangerate(allUzs, all)\r\n        } else {\r\n            warningReturnProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const toggleSalePrice = (e) => {\r\n        let checked = e.target.checked\r\n        if (tableProducts.length > 0) {\r\n            setWholesale(!wholesale)\r\n            if (checked) {\r\n                setTableProducts((prevState) =>\r\n                    prevState.map((product) => ({\r\n                        ...product,\r\n                        totalprice: product.tradeprice\r\n                            ? convertToUsd(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.tradeprice\r\n                            )\r\n                            : product.totalprice,\r\n                        totalpriceuzs: product.tradepriceuzs\r\n                            ? convertToUzs(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.tradepriceuzs\r\n                            )\r\n                            : product.totalpriceuzs,\r\n                    }))\r\n                )\r\n            } else {\r\n                setTableProducts((prevState) =>\r\n                    prevState.map((product) => ({\r\n                        ...product,\r\n                        totalprice: product.unitprice\r\n                            ? convertToUsd(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.unitprice\r\n                            )\r\n                            : product.totalprice,\r\n                        totalpriceuzs: product.unitpriceuzs\r\n                            ? convertToUzs(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.unitpriceuzs\r\n                            )\r\n                            : product.totalpriceuzs,\r\n                    }))\r\n                )\r\n            }\r\n        } else {\r\n            warningSaleProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const handleSelectFilial = (id, value) => {\r\n        getFilialProducts(value)\r\n            .then((data) => {\r\n                setTableProducts(\r\n                    [...tableProducts].map((prod) => {\r\n                        if (prod.product._id === id) {\r\n                            prod.filialProductsTotal = data.total\r\n                            prod.filial = value.filial\r\n                            if (value.filial === market._id) {\r\n                                prod.fromFilial = 0\r\n                                prod.totalprice = convertToUsd(\r\n                                    Number(prod.pieces) *\r\n                                    (wholesale\r\n                                        ? prod.tradeprice || prod.unitprice\r\n                                        : prod.unitprice)\r\n                                )\r\n                                prod.totalpriceuzs = convertToUzs(\r\n                                    Number(prod.pieces) *\r\n                                    (wholesale\r\n                                        ? prod.tradepriceuzs ||\r\n                                        prod.unitpriceuzs\r\n                                        : prod.unitpriceuzs)\r\n                                )\r\n                            }\r\n                        }\r\n                        return prod\r\n                    })\r\n                )\r\n            })\r\n            .catch((data) => universalToast(data, 'error'))\r\n    }\r\n\r\n    const getFilialProducts = async (value) => {\r\n        const { data } = await Api.post('/filials/products/get', value)\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        let allProductsReducer = []\r\n        let productsForSearch = []\r\n        market &&\r\n            socket.emit('getProductsOfCount', {\r\n                market: market._id,\r\n            })\r\n        market &&\r\n            socket.on('categories', ({ id, categories }) => {\r\n                id === market._id && dispatch(setAllCategories(categories))\r\n            })\r\n        market &&\r\n            socket.on('getProductsOfCount', ({ id, products }) => {\r\n                if (id === market._id) {\r\n                    productsForSearch = [\r\n                        ...productsForSearch,\r\n                        ...map(products, (product) => ({\r\n                            value: product._id,\r\n                            label: `(${product.total}) ${product.category.code\r\n                                }${product.productdata.code} - ${product.productdata.name\r\n                                } -------- (${product?.isUsd\r\n                                    ? (product?.price?.sellingprice).toLocaleString(\r\n                                        'ru-RU'\r\n                                    )\r\n                                    : (product?.price?.sellingpriceuzs).toLocaleString(\r\n                                        'ru-RU'\r\n                                    )\r\n                                } ${product?.isUsd ? \"USD\" : 'UZS'})`,\r\n                        })),\r\n                    ]\r\n                    setFilteredProducts(productsForSearch)\r\n                    allProductsReducer.push(...products)\r\n                    dispatch(setAllProductsBySocket(allProductsReducer))\r\n                }\r\n            })\r\n        market &&\r\n            socket.on('error', ({ id, message }) => {\r\n                id === market._id && universalToast(message, 'error')\r\n            })\r\n\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [market, dispatch, lastPayments])\r\n\r\n    useEffect(() => {\r\n        if (activeCategory) {\r\n            const filteredData = filter(\r\n                allProducts,\r\n                (product) => product.category._id === activeCategory\r\n            )\r\n            setFilteredProducts(\r\n                map(filteredData, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        } else {\r\n            setFilteredProducts(\r\n                map(allProducts, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [activeCategory])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPackmans())\r\n        dispatch(getClients())\r\n        dispatch(getFilials({ marketData: market }))\r\n    }, [dispatch, market])\r\n\r\n    useEffect(() => {\r\n        setFilteredCategories(allcategories)\r\n    }, [allcategories])\r\n\r\n    useEffect(() => {\r\n        setOptionPackman([\r\n            {\r\n                label: t('Tanlang'),\r\n                value: '',\r\n            },\r\n            ...map([...packmans], (packman) => ({\r\n                value: packman._id,\r\n                label: packman.name,\r\n            })),\r\n        ])\r\n    }, [packmans, t])\r\n\r\n    useEffect(() => {\r\n        setOptionClient([\r\n            {\r\n                label: t('Barchasi'),\r\n                value: '',\r\n            },\r\n            ...map([...clients], (client) => ({\r\n                value: client._id,\r\n                label: client.name,\r\n                saleconnectorid: client?.saleconnectorid || null,\r\n            })),\r\n        ])\r\n    }, [clients, t])\r\n\r\n    useEffect(() => {\r\n        const data = location.state\r\n\r\n        const setClientData = () => {\r\n            data.saleconnector.client &&\r\n                setClientValue({\r\n                    label: data.saleconnector.client.name,\r\n                    value: data.saleconnector.client._id,\r\n                })\r\n            data.saleconnector.packman &&\r\n                setPackmanValue({\r\n                    label: data.saleconnector.packman.name,\r\n                    value: data.saleconnector.packman._id,\r\n                })\r\n            setSaleConnectorId(data.saleconnector._id)\r\n        }\r\n        if (data && data.temporary) {\r\n            setTemporary(data.temporary)\r\n            setTableProducts(data.temporary.tableProducts)\r\n            setClientValue(data.temporary.clientValue)\r\n            setPackmanValue(data.temporary.packmanValue)\r\n            setUserValue(data.temporary.userValue)\r\n        }\r\n        if (data && data.saleconnector && !data.returnProducts) {\r\n            setClientData()\r\n        }\r\n        if (data && data.saleconnector && data.returnProducts) {\r\n            setClientData()\r\n            let returned = []\r\n            map(data.saleconnector.products, (saleProduct) => {\r\n                const sale = {\r\n                    _id: saleProduct.product._id,\r\n                    discount: saleProduct.discount && saleProduct.discount,\r\n                    pieces: saleProduct.pieces,\r\n                    totalprice: saleProduct.totalprice,\r\n                    totalpriceuzs: saleProduct.totalpriceuzs,\r\n                }\r\n                map(saleProduct.saleproducts, (product) => {\r\n                    sale.pieces += product.pieces\r\n                    sale.totalprice += product.totalprice\r\n                    sale.totalpriceuzs += product.totalpriceuzs\r\n                    return ''\r\n                })\r\n                saleProduct.pieces > 0 &&\r\n                    returned.push({\r\n                        pieces: '',\r\n                        totalpriceuzs: 0,\r\n                        totalprice: 0,\r\n                        unitprice: saleProduct.unitprice,\r\n                        unitpriceuzs: saleProduct.unitpriceuzs,\r\n                        product: { ...sale },\r\n                        productdata: { ...saleProduct.product.productdata },\r\n                        _id: saleProduct._id,\r\n                    })\r\n                return ''\r\n            })\r\n\r\n            setReturnProducts(\r\n                filter(returned, (product) => product.product.pieces > 0)\r\n            )\r\n            setDiscounts([...data.saleconnector.discounts])\r\n            const totalSumm = (datas, property, type) => {\r\n                return type === 'uzs'\r\n                    ? convertToUzs(\r\n                        datas.reduce((summ, data) => summ + data[property], 0)\r\n                    )\r\n                    : convertToUsd(\r\n                        datas.reduce((summ, data) => summ + data[property], 0)\r\n                    )\r\n            }\r\n            setTotalPaymentsUsd(\r\n                totalSumm(data.saleconnector.products, 'totalprice', 'usd')\r\n            )\r\n            setTotalPaymentsUzs(\r\n                totalSumm(data.saleconnector.products, 'totalpriceuzs', 'uzs')\r\n            )\r\n            setTotalPaysUsd(\r\n                totalSumm(data.saleconnector.payments, 'payment', 'usd')\r\n            )\r\n            setTotalPaysUzs(\r\n                totalSumm(data.saleconnector.payments, 'paymentuzs', 'uzs')\r\n            )\r\n        }\r\n        window.history.replaceState({}, document.title)\r\n    }, [location.state])\r\n\r\n    return (\r\n        <div className={'flex grow relative overflow-auto'}>\r\n            {loadingMakePayment && (\r\n                <div className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            <CustomerPayment\r\n                returned={!!returnProducts.length}\r\n                exchangerate={exchangerate}\r\n                type={paymentType}\r\n                active={paymentModalVisible}\r\n                togglePaymentModal={togglePaymentModal}\r\n                changePaymentType={handleChangePaymentType}\r\n                onChange={handleChangePaymentInput}\r\n                client={userValue || clientValue.label || packmanValue.label}\r\n                allPayment={allPayment}\r\n                allPaymentUzs={allPaymentUzs}\r\n                card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                debt={paymentDebt}\r\n                debtuzs={paymentDebtUzs}\r\n                discount={\r\n                    currencyType === 'USD'\r\n                        ? discountSelectOption.value === 'USD'\r\n                            ? paymentDiscount\r\n                            : paymentDiscountPercent\r\n                        : discountSelectOption.value === 'UZS'\r\n                            ? paymentDiscountUzs\r\n                            : paymentDiscountPercent\r\n                }\r\n                handleChangeDiscount={handleChangeDiscount}\r\n                hasDiscount={hasDiscount}\r\n                transfer={\r\n                    currencyType === 'USD'\r\n                        ? paymentTransfer\r\n                        : paymentTransferUzs\r\n                }\r\n                handleClickDiscountBtn={handleClickDiscountBtn}\r\n                discountSelectOption={discountSelectOption}\r\n                handleChangeDiscountSelectOption={\r\n                    handleChangeDiscountSelectOption\r\n                }\r\n                paid={currencyType === 'USD' ? paid : paidUzs}\r\n                handleClickPay={handleClickPay}\r\n                changeComment={changeComment}\r\n                saleComment={saleComment}\r\n                onDoubleClick={handleDoubleClick}\r\n                paymentUsd={paymentUsd}\r\n                debtType={debtType}\r\n                setDebtType={setDebtType}\r\n            />\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'complete' ? handleClosePay : toggleCheckModal\r\n                }\r\n                approveFunction={\r\n                    modalBody === 'complete'\r\n                        ? returnProducts.length\r\n                            ? handleApproveReturn\r\n                            : handleApprovePay\r\n                        : handleClickPrint\r\n                }\r\n                isOpen={modalVisible}\r\n                product={modalData}\r\n                headers={headers}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    t(\"To'lovni amalga oshirishni tasdiqlaysizmi ?\")\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    t(\r\n                        \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                    )\r\n                }\r\n                changeProduct={handleChangeProduct}\r\n            />\r\n            <div className='flex flex-col grow gap-[1.25rem] overflow-auto'>\r\n                <div className={'mainPadding flex flex-col gap-[1.25rem]'}>\r\n                    <div>\r\n                        <Checkbox\r\n                            id={'register-selling'}\r\n                            onChange={handleChangeChecked}\r\n                            value={checked}\r\n                            label={t('Mijoz')}\r\n                        />\r\n                        <div className={'flex gap-[1.25rem] mt-[1rem]'}>\r\n                            <FieldContainer\r\n                                placeholder={t('Santexniklar')}\r\n                                maxWidth={'w-[14.676875rem]'}\r\n                                disabled={!checked}\r\n                                border={true}\r\n                                select={true}\r\n                                value={packmanValue}\r\n                                options={optionPackman}\r\n                                onChange={handleChangePackmanValue}\r\n                            />\r\n                            <FieldContainer\r\n                                placeholder={t('Xaridor')}\r\n                                maxWidth={'w-[14.676875rem]'}\r\n                                disabled={!checked}\r\n                                border={true}\r\n                                select={true}\r\n                                value={clientValue}\r\n                                options={optionClient}\r\n                                onChange={handleChangeClientValue}\r\n                            />\r\n                            <FieldContainer\r\n                                placeholder={t('Amaldagi xaridor')}\r\n                                disabled={!checked}\r\n                                value={userValue}\r\n                                onChange={handleChangeUserValue}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {!returnProducts.length && (\r\n                        <div className={'flex flex-col gap-[1.25rem]'}>\r\n                            <FieldContainer\r\n                                select={true}\r\n                                placeholder={t('misol: kompyuter')}\r\n                                value={selectedProduct}\r\n                                label={t('Maxsulotlar')}\r\n                                onChange={handleChangeSelectedProduct}\r\n                                options={filteredProducts}\r\n                            />\r\n                            <div className={'flex justify-end items-start'}>\r\n                                <div className='checkbox-card sale-toggle-container'>\r\n                                    <p className={'toggleText'}>\r\n                                        {t('Optom narxida hisoblash')} :\r\n                                    </p>\r\n                                    <input\r\n                                        type='checkbox'\r\n                                        checked={wholesale}\r\n                                        onChange={toggleSalePrice}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className={'tableContainerPadding mt-[-20px]'}>\r\n                    {returnProducts.length ? (\r\n                        <Table\r\n                            page={'backproduct'}\r\n                            data={returnProducts}\r\n                            headers={headerReturn}\r\n                            currency={currencyType}\r\n                            changeHandler={handleChangeReturnProduct}\r\n                        />\r\n                    ) : !tableProducts.length ? (\r\n                        <NotFind\r\n                            text={t(\"Sotuvda mahsulotlar qo'shilmagan!\")}\r\n                        />\r\n                    ) : (\r\n                        <Table\r\n                            page={'registersale'}\r\n                            data={tableProducts}\r\n                            headers={headers}\r\n                            currency={currencyType}\r\n                            Delete={handleDelete}\r\n                            changeHandler={handleChange}\r\n                            footer={'registersale'}\r\n                            increment={increment}\r\n                            decrement={decrement}\r\n                            lowUnitpriceProducts={lowUnitpriceProducts}\r\n                            wholeSale={wholesale}\r\n                            selectedFilial={selectedFilial}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className='register-selling-right min-w-[20.25rem] bg-white-400 backdrop-blur-[3.125rem] rounded-[0.25rem] flex flex-col gap-[1.25rem]'>\r\n                <div className='flex flex-col grow gap-[1.25rem]'>\r\n                    <SearchInput\r\n                        placeholder={t('kategoriyani qidirish...')}\r\n                        value={searchCategory}\r\n                        onChange={handleSearchCategory}\r\n                        onKeyUp={() => { }}\r\n                    />\r\n                    <div className='grow relative overflow-auto'>\r\n                        <div className='cards-container absolute left-0 right-[0.125rem] top-0 bottom-0'>\r\n                            {loading ? (\r\n                                <div className='tableContainerPadding'>\r\n                                    <Spinner />\r\n                                </div>\r\n                            ) : filteredCategories.length > 0 ? (\r\n                                map(filteredCategories, (category) => (\r\n                                    <CategoryCard\r\n                                        key={category._id}\r\n                                        id={category._id}\r\n                                        activeCategory={\r\n                                            category._id === activeCategory\r\n                                        }\r\n                                        title={category.name}\r\n                                        code={category.code}\r\n                                        products={category.products.length}\r\n                                        onClick={handleClickCategory}\r\n                                    />\r\n                                ))\r\n                            ) : (\r\n                                <NotFind text={t('Kategoriya mavjud emas')} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'flex gap-[0.625rem]'}>\r\n                    <button\r\n                        type={'button'}\r\n                        className={'register-selling-right-accept-btn'}\r\n                        onClick={\r\n                            returnProducts.length\r\n                                ? handleClickReturnPayment\r\n                                : handleClickPayment\r\n                        }\r\n                    >\r\n                        {t(\"To'lov\")}\r\n                    </button>\r\n                    {!returnProducts.length && (\r\n                        <button\r\n                            type={'button'}\r\n                            onClick={handleClickSave}\r\n                            className={'register-selling-right-deny-btn'}\r\n                        >\r\n                            <IoAttach size={'1.5rem'} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <BarcodeReader onError={handleError} onScan={handleScan} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterSelling\r\n"],"names":["_ref","id","title","code","products","activeCategory","onClick","_jsxs","className","concat","children","_jsx","IoCheckmark","size","SaleBtn","text","type","active","icons","cash","IoCashOutline","card","IoCardOutline","transfer","IoSwapHorizontalOutline","mixed","IoGitCompareOutline","Payment","_ref3","onDoubleClick","IoWalletOutline","DropdownIcon","props","components","DropdownIndicator","_objectSpread","IoCaretDown","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","placeholder","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","TableInput","returned","togglePaymentModal","_ref$type","_ref$cash","_ref$card","_ref$transfer","discount","hasDiscount","debt","allPayment","allPaymentUzs","_ref$paid","paid","_ref$client","client","changePaymentType","discountSelectOption","handleChangeDiscountSelectOption","handleClickDiscountBtn","handleChangeDiscount","handleClickPay","exchangerate","saleComment","changeComment","_ref$paymentUsd","paymentUsd","debtuzs","debtType","setDebtType","location","useLocation","defineLabel","PaymentInput","t","key","map","obj","pathname","includes","stopPropagation","autoFocus","IoPerson","roundUsd","Checkbox","toLocaleString","socket","io","process","userData","JSON","parse","localStorage","getItem","auth","token","market","_useTranslation","useTranslation","dispatch","useDispatch","navigate","useNavigate","_useSelector","login","user","_useSelector2","_useSelector3","category","allcategories","loading","_useSelector4","registerSelling","allProducts","clients","loadingMakePayment","lastPayments","_useSelector5","packmans","_useState","useState","_useState2","_slicedToArray","filteredProducts","setFilteredProducts","_useState3","_useState4","selectedProduct","setSelectedProduct","_useState5","_useState6","checked","setChecked","_useState7","_useState8","tableProducts","setTableProducts","_useState9","_useState10","filteredCategories","setFilteredCategories","_useState11","_useState12","setActiveCategory","_useState13","_useState14","searchCategory","setSearchCategory","_useState15","_useState16","optionPackman","setOptionPackman","_useState17","_useState18","packmanValue","setPackmanValue","_useState19","_useState20","optionClient","setOptionClient","_useState21","_useState22","clientValue","setClientValue","_useState23","_useState24","userValue","setUserValue","_useState25","_useState26","modalVisible","setModalVisible","_useState27","_useState28","currentProduct","setCurrentProduct","_useState29","_useState30","paymentModalVisible","setPaymentModalVisible","_useState31","_useState32","paymentType","setPaymentType","_useState33","_useState34","paymentCash","setPaymentCash","_useState35","_useState36","paymentCashUzs","setPaymentCashUzs","_useState37","_useState38","setPaymentUsd","_useState39","_useState40","paymentCard","setPaymentCard","_useState41","_useState42","paymentCardUzs","setPaymentCardUzs","_useState43","_useState44","paymentTransfer","setPaymentTransfer","_useState45","_useState46","paymentTransferUzs","setPaymentTransferUzs","_useState47","_useState48","paymentDiscount","setPaymentDiscount","_useState49","_useState50","paymentDiscountUzs","setPaymentDiscountUzs","_useState51","_useState52","paymentDiscountPercent","setPaymentDiscountPercent","_useState53","_useState54","setHasDiscount","_useState55","_useState56","setDiscountSelectOption","_useState57","_useState58","paymentDebt","setPaymentDebt","_useState59","_useState60","paymentDebtUzs","setPaymentDebtUzs","_useState61","_useState62","setAllPayment","_useState63","_useState64","setAllPaymentUzs","_useState65","_useState66","setPaid","_useState67","_useState68","paidUzs","setPaidUzs","_useState69","_useState70","modalBody","setModalBody","_useState71","_useState72","modalData","setModalData","_useState73","_useState74","temporary","setTemporary","_useState75","_useState76","saleConnectorId","setSaleConnectorId","_useState77","_useState78","returnProducts","setReturnProducts","_useState79","_useState80","discounts","setDiscounts","_useState81","_useState82","returnDiscounts","setReturnDiscounts","_useState83","_useState84","totalPaymentsUsd","setTotalPaymentsUsd","_useState85","_useState86","totalPaymentsUzs","setTotalPaymentsUzs","_useState87","_useState88","totalPaysUsd","setTotalPaysUsd","_useState89","_useState90","totalPaysUzs","setTotalPaysUzs","_useState91","_useState92","setExchangerate","_useState93","_useState94","setSaleComment","_useState95","_useState96","lowUnitpriceProducts","setLowUnitpriceProducts","_useState97","_useState98","wholesale","setWholesale","_useState99","_useState100","_useState101","name","_id","_useState102","selectedFilial","setSelectedFilial","delay","headers","headerReturn","bool","convertToUsd","Math","round","convertToUzs","currentEchangerate","uzs","usd","clearAll","_toConsumableArray","pack","saleconnectorid","handleClosePay","setTimeout","handleApprovePay","body","saleproducts","product","prev","pieces","Number","fromFilial","unitprice","tradeprice","unitpriceuzs","tradepriceuzs","packman","discountuzs","procient","isProcient","payment","totalprice","totalpriceuzs","cashuzs","carduzs","transferuzs","usdpayment","comment","addPayment","makePayment","then","payload","error","deleteSavedPayment","handleApproveReturn","filter","returnSaleProducts","_ref2","console","log","handlePackcount","index","some","prod","i","packcount","warningEmptyPackCount","total","newRelease","totalpackcount","isPackcount","packcountpieces","handleClickCategory","handleChangeSelectedProduct","barcode","find","productdata","price","sellingprice","sellingpriceuzs","isUsd","incomingprice","incomingpriceuzs","categorycode","filialProductsTotal","filial","warningLessSellPayment","handleChangeProductUnitPriceTable","prevProduct","UzsToUsd","UsdToUzs","handleChangeProductNumberTable","handleChangeFromFilial","handleSelectFilial","getFilialProducts","data","catch","universalToast","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$Api$post","wrap","_context","next","Api","post","sent","abrupt","stop","_x","apply","arguments","useEffect","allProductsReducer","productsForSearch","emit","on","_ref5","categories","setAllCategories","_ref6","_product$price","_product$price2","push","setAllProductsBySocket","_ref7","message","filteredData","getAllPackmans","getClients","getFilials","marketData","setClientData","saleconnector","saleProduct","sale","totalSumm","datas","property","reduce","summ","payments","window","history","replaceState","document","SmallLoader","CustomerPayment","length","all","allUzs","all2","all2Uzs","paymentUzs","abs","maxSum","maxSumUzs","warningMorePayment","allUsd","writePayment","allPaymentAfterDiscount","allPaymentUzsAfterDiscount","warningMoreDiscount","discountUsd","discountUzs","clearTimeout","UniversalModal","toggleModal","approveFunction","isOpen","headerText","changeProduct","handleChangeProductUnitPrice","handleChangeProductNumber","FieldContainer","maxWidth","disabled","select","hasOwnProperty","_client$packman","_client$packman2","prevState","warningSaleProductsEmpty","Table","page","changeHandler","Delete","splice","footer","increment","decrement","wholeSale","NotFind","SearchInput","str","searchedStr","replace","trim","filterData","toLowerCase","onKeyUp","Spinner","CategoryCard","newDiscount","_product$product","totalDiscountsUsd","totalDiscountsUzs","warningReturnProductsEmpty","warningCountSellPayment","item","acc","cur","allUzs2","el","allUsd2","warningCurrencyRate","totalPrice","totalPriceUzs","savePayment","IoAttach","BarcodeReader","onError","onScan"],"sourceRoot":""}