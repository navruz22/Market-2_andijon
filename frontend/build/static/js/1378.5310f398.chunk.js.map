{"version":3,"file":"static/js/1378.5310f398.chunk.js","mappings":"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","sources":["Pages/SupplierPage/SupplierPage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer'\r\nimport Button from '../../Components/Buttons/BtnAddRemove'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {motion} from 'framer-motion'\r\nimport {\r\n    addSupplier,\r\n    clearErrorSuppliers,\r\n    clearSearchedSuppliers,\r\n    clearSuccessAddSupplier,\r\n    clearSuccessDeleteSupplier,\r\n    clearSuccessUpdateSupplier,\r\n    deleteSupplier,\r\n    getSuppliers,\r\n    getSuppliersByFilter,\r\n    updateSupplier\r\n} from './suppliersSlice.js'\r\n\r\nimport {getAllSuppliers} from '../Incomings/incomingSlice.js'\r\nimport {\r\n    successAddSupplierMessage,\r\n    successDeleteSupplierMessage,\r\n    successUpdateSupplierMessage,\r\n    universalToast,\r\n    warningEmptyInput\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {filter} from 'lodash'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst Supplier = () => {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const {\r\n        errorSuppliers,\r\n        suppliers,\r\n        successAddSupplier,\r\n        successUpdateSupplier,\r\n        successDeleteSupplier,\r\n        loading,\r\n        searchedSuppliers,\r\n        total,\r\n        totalSearched\r\n    } = useSelector((state) => state.suppliers)\r\n\r\n    const headers = [\r\n        {title: t('â„–'), styles: 'w-[8%] text-left'},\r\n        {title: t('Yetkazuvchi'), styles: 'w-[84%] text-left'},\r\n        {title: '', styles: 'w-[8%] text-left'}\r\n    ]\r\n\r\n    // states\r\n    const [data, setData] = useState(suppliers)\r\n    const [searchedData, setSearchedData] = useState(searchedSuppliers)\r\n    const [supplierName, setSupplierName] = useState('')\r\n    const [currentSupplier, setCurrentSupplier] = useState('')\r\n    const [deletedSupplier, setDeletedSupplier] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchByName, setSearchByName] = useState('')\r\n\r\n    // modal toggle\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n\r\n    // handle change of inputs\r\n    const handleChangeSupplierName = (e) => {\r\n        setSupplierName(e.target.value)\r\n    }\r\n\r\n    // table edit and delete\r\n    const handleEditSupplier = (supplier) => {\r\n        setCurrentSupplier(supplier)\r\n        setSupplierName(supplier.name)\r\n        setStickyForm(true)\r\n    }\r\n    const handleDeleteSupplier = (supplier) => {\r\n        setDeletedSupplier(supplier)\r\n        toggleModal()\r\n    }\r\n    const handleClickApproveToDelete = () => {\r\n        const body = {\r\n            _id: deletedSupplier._id,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(deleteSupplier(body))\r\n        handleClickCancelToDelete()\r\n    }\r\n    const handleClickCancelToDelete = () => {\r\n        setModalVisible(false)\r\n        setDeletedSupplier(null)\r\n    }\r\n\r\n    // handle submit of inputs\r\n    const addNewSupplier = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([{\r\n            value: supplierName,\r\n            message: t('Yetkazuvchi ismi')\r\n        }])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: supplierName,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(addSupplier(body))\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([{\r\n            value: supplierName,\r\n            message: t('Yetkazuvchi ismi')\r\n        }])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: supplierName,\r\n                _id: currentSupplier._id,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(updateSupplier(body))\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setSupplierName('')\r\n        setCurrentSupplier(null)\r\n        setStickyForm(false)\r\n        setDeletedSupplier(null)\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle change of search inputs\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n        dispatch(clearSearchedSuppliers())\r\n        if (valForSearch === '') {\r\n            setData(suppliers)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredSuppliers = filter(suppliers, (supplier) => {\r\n                return supplier.name.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredSuppliers)\r\n            setFilteredDataTotal(filteredSuppliers.length)\r\n        }\r\n    }\r\n    const filterByNameWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(getSuppliersByFilter(body))\r\n        }\r\n    }\r\n\r\n    // link to next page\r\n    const linkToSupplierReport = (id) => {\r\n        navigate(`/hamkorlar/yetkazuvchilar/${id}`)\r\n    }\r\n\r\n    // useEffects\r\n    useEffect(() => {\r\n        if (errorSuppliers) {\r\n            universalToast(errorSuppliers, 'error')\r\n            dispatch(clearErrorSuppliers())\r\n        }\r\n        if (successAddSupplier) {\r\n            successAddSupplierMessage()\r\n            dispatch(clearSuccessAddSupplier())\r\n            dispatch(getAllSuppliers())\r\n            clearForm()\r\n        }\r\n        if (successUpdateSupplier) {\r\n            successUpdateSupplierMessage()\r\n            dispatch(clearSuccessUpdateSupplier())\r\n            dispatch(getAllSuppliers())\r\n            setCurrentSupplier('')\r\n            setStickyForm(false)\r\n            clearForm()\r\n        }\r\n        if (successDeleteSupplier) {\r\n            dispatch(getAllSuppliers())\r\n            successDeleteSupplierMessage()\r\n            dispatch(clearSuccessDeleteSupplier())\r\n            clearForm()\r\n        }\r\n    }, [\r\n        dispatch,\r\n        errorSuppliers,\r\n        successAddSupplier,\r\n        successUpdateSupplier,\r\n        successDeleteSupplier\r\n    ])\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(getSuppliers(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, showByTotal, currentPage])\r\n\r\n    useEffect(() => {\r\n        setData(suppliers)\r\n    }, [suppliers])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedSuppliers)\r\n    }, [searchedSuppliers])\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0}\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <UniversalModal\r\n                headerText={`${deletedSupplier && deletedSupplier.name} ${t(\r\n                    'yetkazib beruvchini o`chirishni tasdiqlaysizmi?'\r\n                )}`}\r\n                title={t(\r\n                    'O`chirilgan yetkazib beruvchini tiklashning imkoni mavjud emas!'\r\n                )}\r\n                toggleModal={toggleModal}\r\n                body={'approve'}\r\n                approveFunction={handleClickApproveToDelete}\r\n                closeModal={handleClickCancelToDelete}\r\n                isOpen={modalVisible}\r\n            />\r\n            <form\r\n                className={`flex gap-[1.25rem] bg-background flex-col mainPadding transition ease-linear duration-200 ${\r\n                    stickyForm && 'stickyForm'\r\n                }`}\r\n            >\r\n                <div className='supplier-style'>\r\n                    <FieldContainer\r\n                        label={t('Yetkazuvchi ismi')}\r\n                        placeholder={t('misol: Alo24')}\r\n                        maxWidth={'w-[41rem]'}\r\n                        type={'string'}\r\n                        value={supplierName}\r\n                        onChange={handleChangeSupplierName}\r\n                    />\r\n                    <div className={'flex gap-[1.25rem] grow w-[20.8125rem]'}>\r\n                        <Button\r\n                            add={!stickyForm}\r\n                            edit={stickyForm}\r\n                            text={\r\n                                stickyForm\r\n                                    ? t(`Saqlash`)\r\n                                    : t('Yangi yetkazuvchi qo`shish')\r\n                            }\r\n                            onClick={stickyForm ? handleEdit : addNewSupplier}\r\n                        />\r\n                        <Button onClick={clearForm} text={t('Tozalash')} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='pagination-supplier mainPadding'>\r\n                <p className='supplier-title'>{t('Yetkazuvchilar')}</p>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <SearchForm\r\n                filterByTotal={filterByTotal}\r\n                filterBy={['total', 'name']}\r\n                filterByName={filterByName}\r\n                searchByName={searchByName}\r\n                filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                    filterByNameWhenPressEnter\r\n                }\r\n            />\r\n\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Yetkazib beruvchilar mavjud emas')} />\r\n                ) : (\r\n                    <Table\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        page={'supplier'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        Edit={handleEditSupplier}\r\n                        Delete={handleDeleteSupplier}\r\n                        linkToSupplierReport={linkToSupplierReport}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Supplier\r\n"],"names":["t","useTranslation","dispatch","useDispatch","navigate","useNavigate","_useSelector","useSelector","state","suppliers","errorSuppliers","successAddSupplier","successUpdateSupplier","successDeleteSupplier","loading","searchedSuppliers","total","totalSearched","headers","title","styles","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","searchedData","setSearchedData","_useState5","_useState6","supplierName","setSupplierName","_useState7","_useState8","currentSupplier","setCurrentSupplier","_useState9","_useState10","deletedSupplier","setDeletedSupplier","_useState11","_useState12","modalVisible","setModalVisible","_useState13","_useState14","stickyForm","setStickyForm","_useState15","_useState16","showByTotal","setShowByTotal","_useState17","_useState18","currentPage","setCurrentPage","_useState19","_useState20","filteredDataTotal","setFilteredDataTotal","_useState21","_useState22","searchByName","setSearchByName","toggleModal","handleClickCancelToDelete","clearForm","e","preventDefault","useEffect","universalToast","clearErrorSuppliers","successAddSupplierMessage","clearSuccessAddSupplier","getAllSuppliers","successUpdateSupplierMessage","clearSuccessUpdateSupplier","successDeleteSupplierMessage","clearSuccessDeleteSupplier","body","countPage","search","name","replace","trim","getSuppliers","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","headerText","concat","approveFunction","_id","deleteSupplier","closeModal","isOpen","className","FieldContainer","label","placeholder","maxWidth","type","value","onChange","target","Button","add","edit","text","onClick","_checkEmptyString2","checkEmptyString","message","failed","warningEmptyInput","updateSupplier","_checkEmptyString","addSupplier","Pagination","Number","totalDatas","SearchForm","filterByTotal","_ref","filterBy","filterByName","val","valForSearch","toLowerCase","length","clearSearchedSuppliers","filteredSuppliers","filter","supplier","includes","filterByCodeAndNameAndCategoryWhenPressEnter","key","getSuppliersByFilter","Spinner","NotFind","Table","page","Edit","Delete","linkToSupplierReport","id"],"sourceRoot":""}