{"version":3,"file":"static/js/7458.ffb22ba1.chunk.js","mappings":"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","sources":["Components/CategoryCard/CategoryCard.js","Components/Buttons/SaleBtns.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Config/socket.js","Pages/Sale/Routes/RegisterSelling.js"],"sourcesContent":["import {IoCheckmark} from 'react-icons/io5'\r\n\r\nfunction CategoryCard({id, title, code, products, activeCategory, onClick}) {\r\n    return (\r\n        <div className={`category-card ${activeCategory ? 'active-category' : ''}`}\r\n             onClick={() => onClick(id)}>\r\n            <h1 className={`text-black-700 text-base leading-[1.5625rem]`}>{title || 'Nomsiz kategoriya'}</h1>\r\n            <div className={'flex justify-between'}>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>Kodi :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-warning-500 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{code || 0}</span>\r\n                </div>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>Maxsulot turlari :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-success-400 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{products || 0}</span>\r\n                </div>\r\n            </div>\r\n            <div className='category-card-checkmark'>\r\n                <IoCheckmark size={'1rem'} className={'check-icon'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryCard","import React from 'react'\r\nimport {\r\n    IoCardOutline,\r\n    IoCashOutline,\r\n    IoGitCompareOutline,\r\n    IoPricetagOutline,\r\n    IoSwapHorizontalOutline,\r\n    IoWalletOutline,\r\n} from 'react-icons/io5'\r\n\r\nexport const SaleBtn = ({ onClick, text, type, active }) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        card: <IoCardOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        transfer: (\r\n            <IoSwapHorizontalOutline\r\n                className='paymentsstyle'\r\n                size={'1.3125rem'}\r\n            />\r\n        ),\r\n        mixed: (\r\n            <IoGitCompareOutline className='paymentsstyle' size={'1.3125rem'} />\r\n        ),\r\n    }\r\n    return (\r\n        <button\r\n            onClick={() => onClick(type)}\r\n            className={`salestyle ${active ? 'bg-primary-700 text-white-900' : 'bg-[#E9ECEB]'\r\n                }`}\r\n        >\r\n            {icons[type]}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const DiscountBtn = ({ onClick, text }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='discountstyle w-full h-[3.25rem] bg-warning-500 text-white-900 duration-200 shadow-lg'\r\n        >\r\n            <IoPricetagOutline className='discstyle' size={'1.5rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const Payment = ({ onClick, text, onDoubleClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            onDoubleClick={onDoubleClick}\r\n            className={`paymentstyle grow`}\r\n        >\r\n            <IoWalletOutline className='paystyle' size={'1.3125rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'}\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-full placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={'misol: 100 000 000'}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            {/* <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon\r\n                }}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect, type, label}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>{label}:</div>\r\n            <PaymentSelect onChange={(e) => onChange(e, type)} onSelect={onSelect} value={value} option={option} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\n\r\nfunction PaymentInput({mix, value, onChange, label, onClose, keyInput, placeholder, type}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `misol: 100 000 000`}\r\n                    type={type ||'number'}\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }} />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import { IoPerson } from 'react-icons/io5'\r\nimport { DiscountBtn, Payment, SaleBtn } from '../Buttons/SaleBtns.js'\r\nimport { DiscountInput } from '../Inputs/DiscountInputs.js'\r\nimport { useSelector } from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport { t } from 'i18next'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Checkbox from '../Checkbox/Checkbox.js'\r\nimport { roundUsd, UsdToUzs } from '../../App/globalFunctions.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    type = 'cash',\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    discount,\r\n    discountUzs,\r\n    hasDiscount,\r\n    debt,\r\n    allPayment,\r\n    allPaymentUzs,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    exchangerate,\r\n    handleClickPay,\r\n    allMainPayment,\r\n    saleComment,\r\n    changeComment,\r\n    onDoubleClick,\r\n    paymentUsd = \"\",\r\n    debtuzs,\r\n    debtType,\r\n    setDebtType\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    { label: t('USD'), key: 'usd', value: paymentUsd },\r\n                    { label: t('Naqd'), key: 'cash', value: cash },\r\n                    { label: t('Plastik'), key: 'card', value: card },\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return location.pathname.includes('/kassa/debts') ?\r\n                    (\r\n                        debtType === 'sum' ?\r\n                            <PaymentInput\r\n                                key={'sale-cash'}\r\n                                value={cash}\r\n                                onChange={onChange}\r\n                                keyInput={type}\r\n                                onClose={onClose}\r\n                                label={t('Naqd')}\r\n                            /> :\r\n                            <PaymentInput\r\n                                key={'sale-usd'}\r\n                                value={paymentUsd}\r\n                                onChange={onChange}\r\n                                keyInput={'usd'}\r\n                                onClose={onClose}\r\n                                label={t('USD')}\r\n                            />\r\n                    )\r\n                    :\r\n                    <>\r\n                        {type !== 'mixed' && <PaymentInput\r\n                            key={'sale-usd'}\r\n                            value={paymentUsd}\r\n                            onChange={onChange}\r\n                            keyInput={'usd'}\r\n                            onClose={onClose}\r\n                            label={t('USD')}\r\n                        />}\r\n                        <PaymentInput\r\n                            key={'sale-cash'}\r\n                            value={cash}\r\n                            onChange={onChange}\r\n                            keyInput={type}\r\n                            onClose={onClose}\r\n                            label={t('Naqd')}\r\n                        />\r\n                    </>\r\n        }\r\n    }\r\n    const { currencyType, currency } = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`absolute transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${active\r\n                ? 'opacity-100 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none'\r\n                }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('Oynani yopish uchun bu yerga bosing !')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${active ? 'translate-x-0' : 'translate-x-full'\r\n                    }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {location.pathname.includes('/kassa/debts') ? (debtType === 'dollar' ? allPayment + ' USD' : allPaymentUzs + ' UZS') : Number(allMainPayment) + ' UZS'}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') || location.pathname.includes('/qarzdorlar') || location.pathname.includes('/maxsulotlar/qabul/qabulqilish') || location.pathname.includes('/maxsulotlar/qabul/qabullar')) && defineLabel()}\r\n                        <PaymentInput\r\n                            value={saleComment}\r\n                            key={'sale-card'}\r\n                            keyInput={type}\r\n                            onChange={changeComment}\r\n                            onClose={onClose}\r\n                            label={t('Izoh')}\r\n                            placeholder={t('misol: qarzga olindi')}\r\n                            type={'text'}\r\n                        />\r\n                        {hasDiscount && (\r\n                            <>\r\n                                <DiscountInput\r\n                                    value={discount}\r\n                                    onChange={handleChangeDiscount}\r\n                                    option={discountSelectOption}\r\n                                    onSelect={handleChangeDiscountSelectOption}\r\n                                    label={'Chegirma USD'}\r\n                                    type={'usd'}\r\n                                />\r\n                                <DiscountInput\r\n                                    value={discountUzs}\r\n                                    onChange={handleChangeDiscount}\r\n                                    option={discountSelectOption}\r\n                                    onSelect={handleChangeDiscountSelectOption}\r\n                                    label={'Chegirma UZS'}\r\n                                    type={'uzs'}\r\n                                />\r\n                            </>\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') ?\r\n                            (\r\n                                debtType === 'sum' ?\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {debtuzs} UZS\r\n                                        </h3>\r\n                                    </li>\r\n                                    :\r\n                                    <li className='custom-payment-ul-li'>\r\n                                        <span className='custom-payment-text-style'>\r\n                                            {t('Qarzlar')} :{' '}\r\n                                        </span>\r\n                                        <h3 className='text-error-500 text-[1rem]'>\r\n                                            {roundUsd(debt)} USD <br /><br />\r\n                                        </h3>\r\n                                    </li>\r\n                            )\r\n                            :\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {Math.round(debt * 1000) / 1000} USD <br /><br />\r\n                                    {debtuzs} UZS\r\n                                </h3>\r\n                            </li>\r\n                        }\r\n                        {location.pathname.includes('/kassa/debts') && <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarz')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem] flex items-center gap-2'>\r\n                                <Checkbox\r\n                                    id={`debt`}\r\n                                    onChange={() => setDebtType('dollar')}\r\n                                    value={debtType === 'dollar' ? true : false}\r\n                                    label={t('USD')}\r\n                                />\r\n                                <Checkbox\r\n                                    id={`debt2`}\r\n                                    onChange={() => setDebtType('sum')}\r\n                                    value={debtType === 'sum' ? true : false}\r\n                                    label={t('UZS')}\r\n                                />\r\n                            </h3>\r\n                        </li>}\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />}\r\n                        {/* {location.pathname.includes('/kassa/debts') && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />} */}\r\n                    </div>\r\n                    {/* {!returned && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )} */}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        onClick={handleClickPay}\r\n                        onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import io from 'socket.io-client'\r\nconst baseURL = process.env.REACT_APP_API_SOCKET_ENDPOINT || 'http://alo24.uz'\r\n\r\nconst socket = io(baseURL)\r\nconst userData = JSON.parse(localStorage.getItem('userData'))\r\nsocket.auth = {token: userData.token, market: userData.market}\r\n\r\nexport default socket\r\n","import React, { useEffect, useState } from 'react'\r\nimport Checkbox from '../../../Components/Checkbox/Checkbox.js'\r\nimport FieldContainer from '../../../Components/FieldContainer/FieldContainer.js'\r\nimport Table from '../../../Components/Table/Table.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IoAttach } from 'react-icons/io5'\r\nimport CategoryCard from '../../../Components/CategoryCard/CategoryCard.js'\r\nimport NotFind from '../../../Components/NotFind/NotFind.js'\r\nimport Spinner from '../../../Components/Spinner/SmallLoader.js'\r\nimport SmallLoader from '../../../Components/Spinner/SmallLoader.js'\r\nimport {\r\n    addPayment,\r\n    getClients,\r\n    getFilials,\r\n    makePayment,\r\n    returnSaleProducts,\r\n    savePayment,\r\n    setAllProductsBySocket,\r\n} from '../Slices/registerSellingSlice.js'\r\nimport { deleteSavedPayment } from '../Slices/savedSellingsSlice.js'\r\nimport { getAllPackmans } from '../../Clients/clientsSlice.js'\r\nimport SearchInput from '../../../Components/Inputs/SearchInput.js'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal.js'\r\nimport { roundUsd, UsdToUzs, UzsToUsd } from '../../../App/globalFunctions.js'\r\nimport {\r\n    universalToast,\r\n    warningCountSellPayment,\r\n    warningCurrencyRate,\r\n    warningEmptyPackCount,\r\n    warningLessPackCount,\r\n    warningLessSellPayment,\r\n    warningMoreDiscount,\r\n    warningMorePayment,\r\n    warningReturnProductsEmpty,\r\n    warningSaleProductsEmpty,\r\n} from '../../../Components/ToastMessages/ToastMessages.js'\r\nimport CustomerPayment from '../../../Components/Payment/CustomerPayment.js'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { filter, map } from 'lodash'\r\nimport socket from '../../../Config/socket.js'\r\nimport { setAllCategories } from '../../Category/categorySlice.js'\r\nimport Api from '../../../Config/Api.js'\r\n\r\nconst RegisterSelling = () => {\r\n    const { t } = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const { user, market } = useSelector((state) => state.login)\r\n    const { currencyType, currency } = useSelector((state) => state.currency)\r\n    const { allcategories, loading } = useSelector((state) => state.category)\r\n    const { allProducts, clients, loadingMakePayment, lastPayments } =\r\n        useSelector((state) => state.registerSelling)\r\n    const { packmans } = useSelector((state) => state.clients)\r\n    const [filteredProducts, setFilteredProducts] = useState([])\r\n    const [selectedProduct, setSelectedProduct] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    const [tableProducts, setTableProducts] = useState([])\r\n    const [filteredCategories, setFilteredCategories] = useState(allcategories)\r\n    const [activeCategory, setActiveCategory] = useState(null)\r\n    const [searchCategory, setSearchCategory] = useState('')\r\n    const [optionPackman, setOptionPackman] = useState([])\r\n    const [packmanValue, setPackmanValue] = useState('')\r\n    const [optionClient, setOptionClient] = useState([])\r\n    const [clientValue, setClientValue] = useState('')\r\n    const [userValue, setUserValue] = useState('')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [currentProduct, setCurrentProduct] = useState(null)\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentUsd, setPaymentUsd] = useState(\"\")\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDiscount, setPaymentDiscount] = useState('')\r\n    const [paymentDiscountUzs, setPaymentDiscountUzs] = useState('')\r\n    const [paymentDiscountPercent, setPaymentDiscountPercent] = useState('')\r\n    const [allMainPayment, setAllMainPayment] = useState('')\r\n    const [hasDiscount, setHasDiscount] = useState(false)\r\n    const [discountSelectOption, setDiscountSelectOption] = useState({\r\n        label: '%',\r\n        value: '%',\r\n    })\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n    const [temporary, setTemporary] = useState(null)\r\n    const [saleConnectorId, setSaleConnectorId] = useState(null)\r\n    const [returnProducts, setReturnProducts] = useState([])\r\n    const [discounts, setDiscounts] = useState([])\r\n    const [returnDiscounts, setReturnDiscounts] = useState([])\r\n    const [totalPaymentsUsd, setTotalPaymentsUsd] = useState(0)\r\n    const [totalPaymentsUzs, setTotalPaymentsUzs] = useState(0)\r\n    const [totalPaysUsd, setTotalPaysUsd] = useState(0)\r\n    const [totalPaysUzs, setTotalPaysUzs] = useState(0)\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [saleComment, setSaleComment] = useState('')\r\n    const [lowUnitpriceProducts, setLowUnitpriceProducts] = useState([])\r\n    const [wholesale, setWholesale] = useState(false)\r\n    const [debtType, setDebtType] = useState('sum')\r\n\r\n    const [selectedFilial, setSelectedFilial] = useState({\r\n        label: market.name,\r\n        value: market._id,\r\n    })\r\n\r\n    let delay = null\r\n  \r\n    const headers = [\r\n        { title: '№' },\r\n        { title: t('Filial') },\r\n        { title: t('Qoldiq') },\r\n        { title: t('Nomi') },\r\n        { title: t('Soni') },\r\n        { title: t('Narxi') },\r\n        { title: t('Jami'), styles: 'w-[8rem]' },\r\n        { title: '' },\r\n        { title: '' },\r\n    ]\r\n\r\n    const headerReturn = [\r\n        { title: '№' },\r\n        { title: t('Kodi') },\r\n        { title: t('Nomi') },\r\n        { title: t('Soni') },\r\n        { title: t('Jami') },\r\n        { title: t('Soni') },\r\n        { title: t('Jami') },\r\n    ]\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setHasDiscount(false)\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setDiscountSelectOption({ label: '%', value: '%' })\r\n    }\r\n\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n\r\n    const convertToUsd = (value) => Math.round(value * 10000) / 10000\r\n\r\n    const convertToUzs = (value) => Math.round(value)\r\n\r\n    const currentEchangerate = (uzs, usd) => {\r\n        setExchangerate(convertToUzs(uzs / usd))\r\n    }\r\n\r\n    // if (product.total === 0) return warningCountSellPayment()\r\n    const handleClickPayment = () => {\r\n        if (tableProducts.length) {\r\n            if (\r\n                tableProducts.some(\r\n                    (prod) => prod.total === 0 && prod.fromFilial === 0\r\n                )\r\n            )\r\n                return warningCountSellPayment()\r\n            const filteredData = tableProducts\r\n                .filter((item) => item.unitprice <= item.incomingprice)\r\n                .map((item) => item.product._id)\r\n            if (filteredData.length > 0) {\r\n                setLowUnitpriceProducts(filteredData)\r\n                warningLessSellPayment()\r\n            } else {\r\n                setLowUnitpriceProducts(filteredData)\r\n                const all = tableProducts.reduce(\r\n                    (acc, cur) => convertToUsd(acc + cur.totalprice),\r\n                    0\r\n                )\r\n                const allUzs = tableProducts.reduce(\r\n                    (acc, cur) => convertToUzs(acc + cur.totalpriceuzs),\r\n                    0\r\n                )\r\n                const allUzs2 = tableProducts.reduce(\r\n                    (acc, cur) => convertToUzs(acc + (!cur.isUsd && cur.totalpriceuzs || 0)),\r\n                    0\r\n                )\r\n                const allUsd = tableProducts.reduce(\r\n                    (prev, el) => prev + (el.isUsd && el.totalprice || 0),\r\n                    0)\r\n\r\n                const allUsd2 = tableProducts.reduce(\r\n                    (prev, el) => prev + (!el.isUsd && el.totalprice || 0),\r\n                    0)\r\n                setAllPayment(roundUsd(allUsd))\r\n                setAllPaymentUzs(allUzs2)\r\n                setAllMainPayment(allUzs)\r\n                setPaymentUsd(roundUsd(allUsd))\r\n                setPaymentCash(roundUsd(allUsd2))\r\n                setPaymentCashUzs(allUzs2)\r\n                setPaid(roundUsd(all))\r\n                setPaidUzs(allUzs)\r\n                setPaymentModalVisible(true)\r\n                currentEchangerate(allUzs, all)\r\n            }\r\n        } else {\r\n            !currency ? warningCurrencyRate() : warningSaleProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const handleChangePaymentType = (type) => {\r\n        const all = allPayment - Number(paymentDiscount)\r\n        const allUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        const all2 = returnProducts.reduce(\r\n            (summ, product) => convertToUsd(summ + product.totalprice),\r\n            0\r\n        )\r\n        const all2Uzs = returnProducts.reduce(\r\n            (summ, product) => convertToUzs(summ + product.totalpriceuzs),\r\n            0\r\n        )\r\n        const payment = convertToUsd(totalPaymentsUsd - totalPaysUsd - all2)\r\n        const paymentUzs = convertToUzs(\r\n            totalPaymentsUzs - totalPaysUzs - all2Uzs\r\n        )\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentCash(Math.abs(payment))\r\n                            setPaymentCashUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentCash(0)\r\n                            setPaymentCashUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentCash(all)\r\n                        setPaymentCashUzs(allUzs)\r\n                        setPaymentCard('')\r\n                        setPaymentCardUzs('')\r\n                        setPaymentTransfer('')\r\n                        setPaymentTransferUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    break\r\n                case 'card':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentCard(Math.abs(payment))\r\n                            setPaymentCardUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentCard(0)\r\n                            setPaymentCardUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentCard(all)\r\n                        setPaymentCardUzs(allUzs)\r\n                        setPaymentCash('')\r\n                        setPaymentCashUzs('')\r\n                        setPaymentTransfer('')\r\n                        setPaymentTransferUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    break\r\n                case 'transfer':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentTransfer(Math.abs(payment))\r\n                            setPaymentTransferUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentTransfer(0)\r\n                            setPaymentTransferUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentTransfer(all)\r\n                        setPaymentTransferUzs(allUzs)\r\n                        setPaymentCash('')\r\n                        setPaymentCashUzs('')\r\n                        setPaymentCard('')\r\n                        setPaymentCardUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentUsd('')\r\n                    setPaymentDebt(allPayment - Number(paymentDiscount))\r\n                    setPaymentDebtUzs(\r\n                        allPaymentUzs - Number(paymentDiscountUzs)\r\n                    )\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    // console.log(allPayment);\r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment)\r\n        const maxSumUzs = Math.abs(allPaymentUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentUsd)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(UsdToUzs(paymentUsd, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'usd') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCashUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentUsd(value)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentTransferUzs) +\r\n                    Number(paymentCardUzs)\r\n\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer) +\r\n                    Number(paymentCard)\r\n\r\n                setPaymentCashUzs(value)\r\n                setPaymentCash(convertToUsd(UzsToUsd(value, exchangerate)))\r\n                // setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n\r\n                setPaid(allUsd)\r\n                setPaidUzs(all)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentDebtUzs(maxSumUzs - (paymentUsd > maxSum ? UsdToUzs(paymentUsd - maxSum, exchangerate) : 0) - all)\r\n                } else {\r\n                    setPaymentDebtUzs(0)\r\n                    setPaymentUsd(convertToUsd(maxSum - UzsToUsd(all - maxSumUzs, exchangerate)))\r\n                    setPaymentDebt(0)\r\n                }\r\n            } else if (type === 'usd') {\r\n                const all =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(value)\r\n                // console.log(allUsd);\r\n                // console.log(maxSum);\r\n                // if (allUsd <= maxSum) {\r\n                // console.log(maxSum, allUsd);\r\n\r\n                // setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                setPaid(allUsd)\r\n                // setPaidUzs(all)\r\n                setPaymentUsd(value)\r\n                if (allUsd <= maxSum) {\r\n                    setPaymentDebt(maxSum - (all > maxSumUzs ? UzsToUsd(all - maxSumUzs, exchangerate) : 0) - allUsd)\r\n                } \r\n                else {\r\n                    setPaymentDebtUzs(0)\r\n                    setPaymentCashUzs(maxSumUzs - UsdToUzs(allUsd - maxSum, exchangerate))\r\n                    setPaymentCash(UzsToUsd(maxSumUzs - UsdToUzs(allUsd - maxSum, exchangerate), exchangerate))\r\n                    setPaymentDebt(0)\r\n                }\r\n                // } else {\r\n                //     warningMorePayment()\r\n                // }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs) \r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer) \r\n                // if (all <= maxSumUzs) {\r\n                //     setPaymentCard(UzsToUsd(value, exchangerate))\r\n                //     setPaymentCardUzs(value)\r\n                //     setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                //     setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                //     setPaid(UzsToUsd(all, exchangerate))\r\n                //     setPaidUzs(all)\r\n                // } else {\r\n                //     warningMorePayment()\r\n                // }\r\n\r\n                setPaymentCardUzs(value)\r\n                setPaymentCard(UzsToUsd(value, exchangerate))\r\n                // setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n\r\n                setPaid(allUsd)\r\n                setPaidUzs(all)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentDebtUzs(maxSumUzs - (paymentUsd > maxSum ? UsdToUzs(paymentUsd - maxSum, exchangerate) : 0) - all)\r\n                } else {\r\n                    setPaymentDebtUzs(0)\r\n                    setPaymentUsd(convertToUsd(maxSum - UzsToUsd(all - maxSumUzs, exchangerate)))\r\n                    setPaymentDebt(0)\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) \r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate)) \r\n                // if (all <= maxSumUzs) {\r\n                //     setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                //     setPaymentTransferUzs(value)\r\n                //     setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                //     setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                //     setPaid(allUsd)\r\n                //     setPaidUzs(all)\r\n                // } else {\r\n                //     warningMorePayment()\r\n                // }\r\n\r\n                setPaymentTransferUzs(value)\r\n                setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                // setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n\r\n                setPaid(allUsd)\r\n                setPaidUzs(all)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentDebtUzs(maxSumUzs - (paymentUsd > maxSum ? UsdToUzs(paymentUsd - maxSum, exchangerate) : 0) - all)\r\n                } else {\r\n                    setPaymentDebtUzs(0)\r\n                    setPaymentUsd(convertToUsd(maxSum - UzsToUsd(all - maxSumUzs, exchangerate)))\r\n                    setPaymentDebt(0)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChangeDiscount = (value, type) => {\r\n        if (type === 'usd') {\r\n            const discountUsd =\r\n                Math.round((value) * 10000) / 10000\r\n            setPaymentDiscountPercent(value)\r\n            setPaymentDiscount(discountUsd)\r\n           \r\n            setPaidUzs(allMainPayment -\r\n                UsdToUzs(discountUsd, exchangerate)\r\n                - Number(paymentDiscountUzs)\r\n            )\r\n            // setPaymentUsd(allPayment - discountUsd)\r\n        } else {\r\n            const discountUzs =\r\n                Math.round((value) * 1) / 1\r\n            setPaymentDiscountPercent(value)\r\n            setPaymentDiscountUzs(discountUzs)\r\n            setPaidUzs(allMainPayment - discountUzs - Number(UsdToUzs(paymentDiscount, exchangerate)))\r\n        }\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaymentDebt('')\r\n        setPaymentDebtUzs('')\r\n        setPaymentUsd(\"\")\r\n    }\r\n\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    // console.log(allPaymentUzs);\r\n    const handleClickDiscountBtn = () => {\r\n\r\n        setHasDiscount(!hasDiscount)\r\n        // if (paymentType === 'cash') {\r\n        //     setPaymentCash(allPayment)\r\n        //     setPaymentCashUzs(allPaymentUzs)\r\n        //     setPaid(allPayment)\r\n        //     setPaidUzs(allPaymentUzs)\r\n        // } else if (paymentType === 'card') {\r\n        //     setPaymentCard(allPayment)\r\n        //     setPaymentCardUzs(allPaymentUzs)\r\n        //     setPaid(allPayment)\r\n        //     setPaidUzs(allPaymentUzs)\r\n        // } else if (paymentType === 'transfer') {\r\n        //     setPaymentTransfer(allPayment)\r\n        //     setPaymentTransferUzs(allPaymentUzs)\r\n        //     setPaid(allPayment)\r\n        //     setPaidUzs(allPaymentUzs)\r\n        // } else {\r\n        //     setPaymentCash('')\r\n        //     setPaymentCashUzs('')\r\n        //     setPaymentCard('')\r\n        //     setPaymentCardUzs('')\r\n        //     setPaymentTransfer('')\r\n        //     setPaymentTransferUzs('')\r\n        //     setPaid(0)\r\n        //     setPaidUzs(0)\r\n        //     setPaymentDebt(allPayment)\r\n        //     setPaymentDebtUzs(allPaymentUzs)\r\n        // }\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n    }\r\n\r\n    const handleChangeDiscountSelectOption = (option) => {\r\n        if (discountSelectOption.value !== option.value) {\r\n            setDiscountSelectOption(option)\r\n            setPaymentDiscount('')\r\n            setPaymentDiscountUzs('')\r\n            setPaymentDiscountPercent('')\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n        }\r\n    }\r\n\r\n    const clearAll = (bool) => {\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaymentUsd('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n        setTableProducts([])\r\n        setClientValue('')\r\n        setPackmanValue('')\r\n        setOptionPackman([\r\n            {\r\n                label: t('Tanlang'),\r\n                value: '',\r\n            },\r\n            ...map([...packmans], (pack) => ({\r\n                value: pack._id,\r\n                label: pack.name,\r\n            })),\r\n        ])\r\n        setOptionClient([\r\n            {\r\n                label: t('Barchasi'),\r\n                value: '',\r\n            },\r\n            ...map([...clients], (client) => ({\r\n                value: client._id,\r\n                label: client.name,\r\n                saleconnectorid: client?.saleconnectorid || null,\r\n            })),\r\n        ])\r\n        setUserValue('')\r\n        setChecked(false)\r\n        setActiveCategory(null)\r\n        setCurrentProduct(null)\r\n        setSearchCategory('')\r\n        setSaleConnectorId(null)\r\n        setReturnDiscounts([])\r\n        setDiscounts([])\r\n        setReturnProducts([])\r\n        setTotalPaysUsd(0)\r\n        setTotalPaysUzs(0)\r\n        setTotalPaymentsUzs(0)\r\n        setTotalPaymentsUsd(0)\r\n        togglePaymentModal(bool)\r\n        setSelectedFilial({\r\n            label: market.name,\r\n            value: market._id,\r\n        })\r\n    }\r\n\r\n    const handleClickPay = () => {\r\n        if (delay === null) {\r\n            delay = window.setTimeout(() => {\r\n                delay = null\r\n                setModalBody('complete')\r\n                setModalVisible(true)\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    const handleDoubleClick = () => {\r\n        window.clearTimeout(delay)\r\n        delay = null\r\n        returnProducts.length > 0 ? handleApproveReturn() : handleApprovePay()\r\n    }\r\n\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    const handleApprovePay = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            saleproducts: map(tableProducts, (product) => {\r\n                if (wholesale) {\r\n                    const prev = {\r\n                        ...product,\r\n                        pieces:\r\n                            Number(product.pieces) + Number(product.fromFilial),\r\n                        unitprice: product.tradeprice || product.unitprice,\r\n                        unitpriceuzs:\r\n                            product.tradepriceuzs || product.unitpriceuzs,\r\n                    }\r\n                    prev?.tradeprice && delete prev?.tradeprice\r\n                    prev?.tradepriceuzs && delete prev?.tradepriceuzs\r\n                    return prev\r\n                } else {\r\n                    const prev = {\r\n                        ...product,\r\n                        pieces:\r\n                            Number(product.pieces) + Number(product.fromFilial),\r\n                    }\r\n                    prev?.tradeprice && delete prev?.tradeprice\r\n                    prev?.tradepriceuzs && delete prev?.tradepriceuzs\r\n                    return prev\r\n                }\r\n            }),\r\n            client: {\r\n                _id: clientValue ? clientValue.value : null,\r\n                name: clientValue ? clientValue.label : userValue,\r\n                packman: clientValue?.packman,\r\n            },\r\n            packman: packmanValue\r\n                ? {\r\n                    _id: packmanValue.value,\r\n                    name: packmanValue.label,\r\n                }\r\n                : null,\r\n            discount: {\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n                procient: Number(paymentDiscountPercent),\r\n                isProcient: !!paymentDiscountPercent,\r\n            },\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(paymentCash),\r\n                cashuzs: Number(paymentCashUzs),\r\n                card: Number(paymentCard),\r\n                carduzs: Number(paymentCardUzs),\r\n                transfer: Number(paymentTransfer),\r\n                transferuzs: Number(paymentTransferUzs),\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n                usdpayment: Number(paymentUsd),\r\n            },\r\n            \r\n            debt: {\r\n                debt: Number(paymentDebt),\r\n                debtuzs: Number(paymentDebtUzs),\r\n                debtType: debtType,\r\n                comment: '',\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n            comment: saleComment,\r\n        }\r\n        \r\n        dispatch(saleConnectorId ? addPayment(body) : makePayment(body)).then(\r\n            ({ payload, error }) => {\r\n                if (!error) {\r\n                    // setModalData(payload)\r\n                    clearAll()\r\n                    setWholesale(false)\r\n                    // setTimeout(() => {\r\n                    //     setModalBody('checkSell')\r\n                    //     setModalVisible(true)\r\n                    //     clearAll()\r\n                    // }, 500)\r\n                    if (temporary) {\r\n                        dispatch(deleteSavedPayment({ _id: temporary._id }))\r\n                        setTemporary(null)\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleApproveReturn = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            saleproducts: filter(\r\n                returnProducts,\r\n                (product) => Number(product.pieces) > 0\r\n            ),\r\n            discounts: returnDiscounts,\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(allPaymentUzs < 0 ? -1 * paymentCash : paymentCash),\r\n                cashuzs: Number(\r\n                    allPaymentUzs < 0 ? -1 * paymentCashUzs : paymentCashUzs\r\n                ),\r\n                card: Number(allPaymentUzs < 0 ? -1 * paymentCard : paymentCard),\r\n                carduzs: Number(\r\n                    allPaymentUzs < 0 ? -1 * paymentCardUzs : paymentCardUzs\r\n                ),\r\n                transfer: Number(\r\n                    allPaymentUzs < 0 ? -1 * paymentTransfer : paymentTransfer\r\n                ),\r\n                transferuzs: Number(\r\n                    allPaymentUzs < 0 ? -1 * paymentTransferUzs : paymentTransferUzs\r\n                ),\r\n                usdpayment: Number(\r\n                    allPayment < 0 ? -1 * paymentUsd : paymentUsd\r\n                ),\r\n            },\r\n            debt: {\r\n                debt: Number(allPayment < 0 ? -1 * paymentDebt : paymentDebt),\r\n                debtuzs: Number(\r\n                    allPaymentUzs < 0 ? -1 * paymentDebtUzs : paymentDebtUzs\r\n                ),\r\n                comment: '',\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n            comment: saleComment,\r\n        }\r\n        // console.log(body);\r\n        // return\r\n        dispatch(returnSaleProducts(body)).then(({ payload, error }) => {\r\n            if (!error) {\r\n                setModalData(payload)\r\n                setTimeout(() => {\r\n                    setModalBody('checkSellReturn')\r\n                    setModalVisible(true)\r\n                    clearAll()\r\n                }, 500)\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleClickSave = () => {\r\n        if (tableProducts.length > 0) {\r\n            const all = tableProducts.reduce(\r\n                (acc, cur) => convertToUsd(acc + cur.totalprice),\r\n                0\r\n            )\r\n            const allUzs = tableProducts.reduce(\r\n                (acc, cur) => convertToUzs(acc + cur.totalpriceuzs),\r\n                0\r\n            )\r\n            const body = {\r\n                temporary: {\r\n                    saleconnectorid: null,\r\n                    clientValue,\r\n                    packmanValue,\r\n                    userValue,\r\n                    tableProducts,\r\n                    totalPrice: all,\r\n                    totalPriceUzs: allUzs,\r\n                },\r\n            }\r\n            dispatch(savePayment(body)).then(({ error }) => {\r\n                if (!error) {\r\n                    clearAll(false)\r\n                    navigate('/sotuv/saqlanganlar')\r\n                }\r\n            })\r\n            if (temporary) {\r\n                dispatch(deleteSavedPayment({ _id: temporary._id }))\r\n                setTemporary(null)\r\n            }\r\n        }\r\n    }\r\n\r\n    // bu yerda boshqa funksiyalar\r\n    const handleChange = (id, value, key) => {\r\n        switch (key) {\r\n            case 'unitprice':\r\n                handleChangeProductUnitPriceTable(id, value)\r\n                break\r\n            case 'pieces':\r\n                handleChangeProductNumberTable(id, value)\r\n                break\r\n            case 'fromFilial':\r\n                handleChangeFromFilial(id, value)\r\n                break\r\n            case 'select':\r\n                handleSelectFilial(id, value)\r\n                break\r\n            case 'packcount':\r\n                handlePackcount(id, value)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const handlePackcount = (index, value) => {\r\n        if (tableProducts.some((prod, i) => i === index && !prod.packcount)) {\r\n            return warningEmptyPackCount()\r\n        }\r\n        if (tableProducts.some((prod, i) => i === index && prod?.packcount > prod.total)) {\r\n            return warningEmptyPackCount()\r\n        }\r\n        const newRelease = map(tableProducts, (prod, i) => {\r\n            if (i === index) {\r\n                return {\r\n                    ...prod,\r\n                    totalpackcount: !prod?.isPackcount && ((prod.total / prod.packcount) / 100) * 100,\r\n                    isPackcount: !prod?.isPackcount,\r\n                    totalprice: !prod?.isPackcount ? convertToUsd(\r\n                        (prod?.packcount) *\r\n                        (wholesale\r\n                            ? prod.tradeprice ||\r\n                            prod.unitprice\r\n                            : prod.unitprice)\r\n                    ) : prod.unitprice,\r\n                    totalpriceuzs: !prod?.isPackcount ? convertToUzs(\r\n                        (prod?.packcount) *\r\n                        (wholesale\r\n                            ? prod.tradepriceuzs ||\r\n                            prod.unitpriceuzs\r\n                            : prod.unitpriceuzs)\r\n                    ) : prod.unitpriceuzs,\r\n                    packcountpieces: 1,\r\n                    pieces: !prod?.isPackcount ? prod.packcount : 1\r\n                }\r\n            }\r\n\r\n            return prod\r\n        })\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleDelete = (index) => {\r\n        tableProducts.splice(index, 1)\r\n        setTableProducts([...tableProducts])\r\n    }\r\n\r\n    const handleChangeChecked = () => {\r\n        if (checked) {\r\n            setUserValue('')\r\n            setPackmanValue('')\r\n            setClientValue('')\r\n        }\r\n        setChecked(!checked)\r\n    }\r\n\r\n    const handleClickCategory = (id) => {\r\n        if (activeCategory === id) {\r\n            setActiveCategory(null)\r\n        } else {\r\n            setActiveCategory(id)\r\n            setSearchCategory('')\r\n            setFilteredCategories(allcategories)\r\n        }\r\n    }\r\n\r\n    const handleSearchCategory = (e) => {\r\n        const str = e.target.value\r\n        setSearchCategory(str)\r\n        const searchedStr = str.replace(/\\s+/g, ' ').trim()\r\n        const filterData = filter(allcategories, (obj) =>\r\n            obj.name\r\n                ? obj.name.toLowerCase().includes(searchedStr) ||\r\n                obj.code.includes(searchedStr)\r\n                : obj.code.includes(searchedStr)\r\n        )\r\n        setFilteredCategories(str !== '' ? filterData : allcategories)\r\n    }\r\n\r\n    const handleChangeSelectedProduct = (option) => {\r\n        // const hasProduct = option.barcode\r\n        //     ? filter(\r\n        //           tableProducts,\r\n        //           (obj) => obj.product.barcode === option.barcode\r\n        //       ).length > 0\r\n        //     : filter(tableProducts, (obj) => obj.product._id === option.value)\r\n        //           .length > 0\r\n\r\n        !option.barcode && setSelectedProduct(option)\r\n        const product = option.barcode\r\n            ? allProducts.find(\r\n                (obj) => obj.productdata.barcode === option.barcode\r\n            )\r\n            : allProducts.find((obj) => obj._id === option.value)\r\n\r\n        const currentProduct = {\r\n            total: product.total,\r\n            product: {\r\n                _id: product._id,\r\n                code: product.productdata.code,\r\n                name: product.productdata.name,\r\n                barcode: product.productdata.barcode,\r\n            },\r\n            totalprice: product.price.sellingprice,\r\n            totalpriceuzs: product.price.sellingpriceuzs,\r\n            tradeprice: product.price.tradeprice || 0,\r\n            tradepriceuzs: product.price.tradepriceuzs || 0,\r\n            pieces: 1,\r\n            isUsd: product?.isUsd || false,\r\n            incomingprice: product.price.incomingprice,\r\n            incomingpriceuzs: product.price.incomingpriceuzs,\r\n            unitprice: product.price.sellingprice,\r\n            unitpriceuzs: product.price.sellingpriceuzs,\r\n            categorycode: product.category.code,\r\n            filialProductsTotal: product.total,\r\n            fromFilial: 0,\r\n            filial: market._id,\r\n            packcount: product?.packcount,\r\n        }\r\n        if (\r\n            (currencyType === 'USD' &&\r\n                currentProduct.incomingprice <= currentProduct.unitprice) ||\r\n            (currencyType === 'UZS' &&\r\n                currentProduct.incomingpriceuzs <=\r\n                currentProduct.unitpriceuzs)\r\n        ) {\r\n            setTableProducts([...tableProducts, currentProduct])\r\n            setSelectedProduct('')\r\n        } else {\r\n            warningLessSellPayment()\r\n        }\r\n\r\n    }\r\n    // console.log(tableProducts);\r\n    const handleChangePackmanValue = (option) => {\r\n        setPackmanValue(option)\r\n        const pack = filter(packmans, (pack) => pack._id === option.value)[0]\r\n        if (pack && pack.hasOwnProperty('clients')) {\r\n            setOptionClient(\r\n                map(pack.clients, (client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: pack,\r\n                    saleconnectorid: client?.saleconnectorid || null,\r\n                }))\r\n            )\r\n        } else {\r\n            setOptionClient([\r\n                {\r\n                    label: t('Tanlang'),\r\n                    value: '',\r\n                },\r\n                ...map([...clients], (client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: client?.packman,\r\n                    saleconnectorid: client?.saleconnectorid || null,\r\n                })),\r\n            ])\r\n        }\r\n        setClientValue('')\r\n        setUserValue('')\r\n    }\r\n\r\n    const handleClickPrint = () => { }\r\n\r\n    const handleChangeClientValue = (option) => {\r\n        setClientValue(option)\r\n        setSaleConnectorId(option?.saleconnectorid || null)\r\n        const client = filter(\r\n            clients,\r\n            (client) => client._id === option.value\r\n        )[0]\r\n        if (client && client.hasOwnProperty('packman')) {\r\n            setPackmanValue({\r\n                label: client?.packman?.name,\r\n                value: client?.packman?._id,\r\n            })\r\n        }\r\n        option.value ? setUserValue(option.label) : setUserValue('')\r\n    }\r\n\r\n    const handleChangeUserValue = (e) => {\r\n        setUserValue(e.target.value)\r\n    }\r\n\r\n    const handleChangeProductUnitPrice = (value) => {\r\n        setCurrentProduct({\r\n            ...currentProduct,\r\n            unitprice:\r\n                currencyType === 'USD' ? value : UzsToUsd(value, exchangerate),\r\n            unitpriceuzs:\r\n                currencyType === 'UZS' ? value : UsdToUzs(value, exchangerate),\r\n            totalprice:\r\n                currencyType === 'USD'\r\n                    ? value * currentProduct.pieces\r\n                    : UzsToUsd(value * currentProduct.pieces, exchangerate),\r\n            totalpriceuzs:\r\n                currencyType === 'UZS'\r\n                    ? value * currentProduct.pieces\r\n                    : UsdToUzs(value * currentProduct.pieces, exchangerate),\r\n        })\r\n    }\r\n\r\n    const handleChangeProductNumber = (value) => {\r\n        setCurrentProduct({\r\n            ...currentProduct,\r\n            pieces: value,\r\n            totalprice: value * currentProduct.unitprice,\r\n            totalpriceuzs: value * currentProduct.unitpriceuzs,\r\n        })\r\n    }\r\n\r\n    const handleChangeProductUnitPriceTable = (index, value) => {\r\n        const newRelease = !wholesale\r\n            ? map(tableProducts, (prevProduct, i) =>\r\n                i === index\r\n                    ? {\r\n                        ...prevProduct,\r\n                        unitprice: prevProduct.isUsd\r\n                            ? value\r\n                            : UzsToUsd(value, exchangerate),\r\n                        unitpriceuzs: prevProduct.isUsd\r\n                            ? UsdToUzs(value, exchangerate)\r\n                            : value,\r\n                        totalprice: prevProduct.isUsd\r\n                            ? value *\r\n                            (Number(prevProduct.pieces))\r\n                            : UzsToUsd(\r\n                                value *\r\n                                Number(prevProduct.pieces),\r\n                                exchangerate\r\n                            ),\r\n                        totalpriceuzs: prevProduct.isUsd ?\r\n                            UsdToUzs(\r\n                                value *\r\n                                Number(prevProduct.pieces),\r\n                                exchangerate\r\n                            ) :\r\n                            value * (Number(prevProduct.pieces))\r\n\r\n                    }\r\n                    : prevProduct\r\n            )\r\n            : map(tableProducts, (prevProduct, i) =>\r\n                i === index\r\n                    ? {\r\n                        ...prevProduct,\r\n                        tradeprice: prevProduct.isUsd\r\n                            ? value\r\n                            : UzsToUsd(value, exchangerate),\r\n                        tradepriceuzs: prevProduct.isUsd\r\n                            ? UsdToUzs(value, exchangerate)\r\n                            : value,\r\n                        totalprice: prevProduct.isUsd\r\n                            ? value *\r\n                            (Number(prevProduct.pieces))\r\n                            : UzsToUsd(\r\n                                value *\r\n                                Number(prevProduct.pieces),\r\n                                exchangerate\r\n                            ),\r\n                        totalpriceuzs: prevProduct.isUsd ?\r\n                            UsdToUzs(\r\n                                value *\r\n                                Number(prevProduct.pieces),\r\n                                exchangerate\r\n                            ) :\r\n                            value * (Number(prevProduct.pieces))\r\n                    }\r\n                    : prevProduct\r\n            )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeProductNumberTable = (index, value) => {\r\n        const newRelease = map(tableProducts, (prevProduct, i) =>\r\n            i === index\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: prevProduct?.isPackcount ? Number(value) * prevProduct?.packcount : value,\r\n                    packcountpieces: prevProduct?.isPackcount ? Number(value) : 0,\r\n                    totalprice: convertToUsd(\r\n                        (prevProduct?.isPackcount ? Number(value) * prevProduct?.packcount : Number(value)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (prevProduct?.isPackcount ? Number(value) * prevProduct?.packcount : Number(value)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeFromFilial = (id, value) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    fromFilial: Number(value),\r\n                    totalprice: convertToUsd(\r\n                        (Number(value) + Number(prevProduct.pieces)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(value) + Number(prevProduct.pieces)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeProduct = (value, key) => {\r\n        switch (key) {\r\n            case 'unitprice':\r\n                handleChangeProductUnitPrice(value)\r\n                break\r\n            case 'pieces':\r\n                handleChangeProductNumber(value)\r\n                break\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    const increment = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: Number(prevProduct.pieces) + 1,\r\n                    totalprice: convertToUsd(\r\n                        (Number(prevProduct.pieces) +\r\n                            Number(prevProduct.fromFilial) +\r\n                            1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(prevProduct.pieces) +\r\n                            Number(prevProduct.fromFilial) +\r\n                            1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const decrement = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces:\r\n                        Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) - 1\r\n                            : 1,\r\n                    totalprice: convertToUsd(\r\n                        (Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) -\r\n                            1 +\r\n                            Number(prevProduct.fromFilial)\r\n                            : 1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) -\r\n                            1 +\r\n                            Number(prevProduct.fromFilial)\r\n                            : 1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const changeComment = (e) => {\r\n        setSaleComment(e)\r\n    }\r\n\r\n    const handleError = () => {\r\n        universalToast(t(\"Mahsulot kodi o'qilmadi!\"), 'warning')\r\n    }\r\n\r\n    const handleScan = (data) => {\r\n        handleChangeSelectedProduct({ barcode: data })\r\n    }\r\n\r\n    const handleChangeReturnProduct = (value, id, index) => {\r\n        if (value > Number(returnProducts[index].product.pieces))\r\n            return universalToast(\r\n                t(\r\n                    \"Diqqat! Qaytariladigan mahsulot soni sotilgan mahsulot sonidan ortiq bo'lolmaydi\"\r\n                ),\r\n                'warning'\r\n            )\r\n        const newRelease = map(returnProducts, (prevProduct) =>\r\n            prevProduct._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: value,\r\n                    totalprice: convertToUsd(value * prevProduct.unitprice),\r\n                    totalpriceuzs: convertToUzs(\r\n                        value * prevProduct.unitpriceuzs\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setReturnProducts(newRelease)\r\n    }\r\n\r\n    const handleClickReturnPayment = () => {\r\n        if (returnProducts.length) {\r\n            const all = returnProducts.reduce(\r\n                (summ, product) => convertToUsd(summ + (product?.product.isUsd ? product.totalprice : 0)),\r\n                0\r\n            )\r\n            const allUzs = returnProducts.reduce(\r\n                (summ, product) => convertToUzs(summ + (!product?.product.isUsd ? product.totalpriceuzs : 0)),\r\n                0\r\n            )\r\n            \r\n            const newRelease = discounts.map((discount) => {\r\n                let newDiscount = { ...discount }\r\n                map(returnProducts, (product) => {\r\n                    if (discount._id === product.product?.discount) {\r\n                        newDiscount = {\r\n                            ...discount,\r\n                            discount: convertToUsd(\r\n                                newDiscount.discount -\r\n                                (product.totalprice * discount.procient) /\r\n                                100\r\n                            ),\r\n                            discountuzs: convertToUzs(\r\n                                newDiscount.discountuzs -\r\n                                (product.totalpriceuzs *\r\n                                    discount.procient) /\r\n                                100\r\n                            ),\r\n                            totalprice: convertToUsd(\r\n                                newDiscount.totalprice - product.totalprice\r\n                            ),\r\n                            totalpriceuzs: convertToUzs(\r\n                                newDiscount.totalpriceuzs -\r\n                                product.totalpriceuzs\r\n                            ),\r\n                        }\r\n                    }\r\n                    return ''\r\n                })\r\n                return { ...newDiscount }\r\n            })\r\n            const totalDiscountsUsd = newRelease.reduce(\r\n                (summ, discount) => summ + discount.discount,\r\n                0\r\n            )\r\n            const totalDiscountsUzs = newRelease.reduce(\r\n                (summ, discount) => summ + discount.discountuzs,\r\n                0\r\n            )\r\n            // console.log(returnProducts);\r\n            // console.log(totalPaymentsUzs);\r\n            // console.log(totalPaysUzs);\r\n            // console.log(allUzs);\r\n            const payment = convertToUsd(\r\n                totalPaymentsUsd - totalPaysUsd - totalDiscountsUsd - all\r\n            )\r\n            const paymentUzs = convertToUzs(\r\n                totalPaymentsUzs - totalPaysUzs - totalDiscountsUzs - allUzs\r\n            )\r\n            setReturnDiscounts(newRelease)\r\n            if ((payment < 0) || (paymentUzs < 0)) {\r\n                setAllPayment(payment)\r\n                setAllPaymentUzs(paymentUzs)\r\n                setPaymentCash(Math.abs(payment))\r\n                setPaymentCashUzs(Math.abs(paymentUzs))\r\n                setPaid(Math.abs(payment))\r\n                setPaidUzs(Math.abs(paymentUzs))\r\n                setPaymentUsd(Math.abs(payment))\r\n            } else {\r\n                setPaymentCash(0)\r\n                setPaymentUsd(0)\r\n                setPaymentCashUzs(UsdToUzs(0, exchangerate))\r\n                setPaymentDebt(convertToUsd(payment))\r\n                setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                setAllPayment(all)\r\n                setAllPaymentUzs(allUzs)\r\n                setPaid(all)\r\n                setPaidUzs(allUzs)\r\n            }\r\n            setPaymentModalVisible(true)\r\n            currentEchangerate(allUzs, all)\r\n        } else {\r\n            warningReturnProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const toggleSalePrice = (e) => {\r\n        let checked = e.target.checked\r\n        if (tableProducts.length > 0) {\r\n            setWholesale(!wholesale)\r\n            if (checked) {\r\n                setTableProducts((prevState) =>\r\n                    prevState.map((product) => ({\r\n                        ...product,\r\n                        totalprice: product.tradeprice\r\n                            ? convertToUsd(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.tradeprice\r\n                            )\r\n                            : product.totalprice,\r\n                        totalpriceuzs: product.tradepriceuzs\r\n                            ? convertToUzs(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.tradepriceuzs\r\n                            )\r\n                            : product.totalpriceuzs,\r\n                    }))\r\n                )\r\n            } else {\r\n                setTableProducts((prevState) =>\r\n                    prevState.map((product) => ({\r\n                        ...product,\r\n                        totalprice: product.unitprice\r\n                            ? convertToUsd(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.unitprice\r\n                            )\r\n                            : product.totalprice,\r\n                        totalpriceuzs: product.unitpriceuzs\r\n                            ? convertToUzs(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.unitpriceuzs\r\n                            )\r\n                            : product.totalpriceuzs,\r\n                    }))\r\n                )\r\n            }\r\n        } else {\r\n            warningSaleProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const handleSelectFilial = (id, value) => {\r\n        getFilialProducts(value)\r\n            .then((data) => {\r\n                setTableProducts(\r\n                    [...tableProducts].map((prod) => {\r\n                        if (prod.product._id === id) {\r\n                            prod.filialProductsTotal = data.total\r\n                            prod.filial = value.filial\r\n                            if (value.filial === market._id) {\r\n                                prod.fromFilial = 0\r\n                                prod.totalprice = convertToUsd(\r\n                                    Number(prod.pieces) *\r\n                                    (wholesale\r\n                                        ? prod.tradeprice || prod.unitprice\r\n                                        : prod.unitprice)\r\n                                )\r\n                                prod.totalpriceuzs = convertToUzs(\r\n                                    Number(prod.pieces) *\r\n                                    (wholesale\r\n                                        ? prod.tradepriceuzs ||\r\n                                        prod.unitpriceuzs\r\n                                        : prod.unitpriceuzs)\r\n                                )\r\n                            }\r\n                        }\r\n                        return prod\r\n                    })\r\n                )\r\n            })\r\n            .catch((data) => universalToast(data, 'error'))\r\n    }\r\n\r\n    const getFilialProducts = async (value) => {\r\n        const { data } = await Api.post('/filials/products/get', value)\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        let allProductsReducer = []\r\n        let productsForSearch = []\r\n        market &&\r\n            socket.emit('getProductsOfCount', {\r\n                market: market._id,\r\n            })\r\n        market &&\r\n            socket.on('categories', ({ id, categories }) => {\r\n                id === market._id && dispatch(setAllCategories(categories))\r\n            })\r\n        market &&\r\n            socket.on('getProductsOfCount', ({ id, products }) => {\r\n                if (id === market._id) {\r\n                    productsForSearch = [\r\n                        ...productsForSearch,\r\n                        ...map(products, (product) => ({\r\n                            value: product._id,\r\n                            label: `(${product.total}) ${product.category.code\r\n                                }${product.productdata.code} - ${product.productdata.name\r\n                                } -------- (${product?.isUsd\r\n                                    ? (product?.price?.sellingprice).toLocaleString(\r\n                                        'ru-RU'\r\n                                    )\r\n                                    : (product?.price?.sellingpriceuzs).toLocaleString(\r\n                                        'ru-RU'\r\n                                    )\r\n                                } ${product?.isUsd ? \"USD\" : 'UZS'})`,\r\n                        })),\r\n                    ]\r\n                    setFilteredProducts(productsForSearch)\r\n                    allProductsReducer.push(...products)\r\n                    dispatch(setAllProductsBySocket(allProductsReducer))\r\n                }\r\n            })\r\n        market &&\r\n            socket.on('error', ({ id, message }) => {\r\n                id === market._id && universalToast(message, 'error')\r\n            })\r\n\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [market, dispatch, lastPayments])\r\n\r\n    useEffect(() => {\r\n        if (activeCategory) {\r\n            const filteredData = filter(\r\n                allProducts,\r\n                (product) => product.category._id === activeCategory\r\n            )\r\n            setFilteredProducts(\r\n                map(filteredData, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        } else {\r\n            setFilteredProducts(\r\n                map(allProducts, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [activeCategory])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPackmans())\r\n        dispatch(getClients())\r\n        dispatch(getFilials({ marketData: market }))\r\n    }, [dispatch, market])\r\n\r\n    useEffect(() => {\r\n        setFilteredCategories(allcategories)\r\n    }, [allcategories])\r\n\r\n    useEffect(() => {\r\n        setOptionPackman([\r\n            {\r\n                label: t('Tanlang'),\r\n                value: '',\r\n            },\r\n            ...map([...packmans], (packman) => ({\r\n                value: packman._id,\r\n                label: packman.name,\r\n            })),\r\n        ])\r\n    }, [packmans, t])\r\n   \r\n    useEffect(() => {\r\n        setOptionClient([\r\n            {\r\n                label: t('Barchasi'),\r\n                value: '',\r\n            },\r\n            ...map([...clients], (client) => ({\r\n                value: client._id,\r\n                label: client.name,\r\n                saleconnectorid: client?.saleconnectorid || null,\r\n            })),\r\n        ])\r\n    }, [clients, t])\r\n\r\n    useEffect(() => {\r\n        const data = location.state\r\n\r\n        const setClientData = () => {\r\n            data.saleconnector.client &&\r\n                setClientValue({\r\n                    label: data.saleconnector.client.name,\r\n                    value: data.saleconnector.client._id,\r\n                })\r\n            data.saleconnector.packman &&\r\n                setPackmanValue({\r\n                    label: data.saleconnector.packman.name,\r\n                    value: data.saleconnector.packman._id,\r\n                })\r\n            setSaleConnectorId(data.saleconnector._id)\r\n        }\r\n        if (data && data.temporary) {\r\n            setTemporary(data.temporary)\r\n            setTableProducts(data.temporary.tableProducts)\r\n            setClientValue(data.temporary.clientValue)\r\n            setPackmanValue(data.temporary.packmanValue)\r\n            setUserValue(data.temporary.userValue)\r\n        }\r\n        if (data && data.saleconnector && !data.returnProducts) {\r\n            setClientData()\r\n        }\r\n        if (data && data.saleconnector && data.returnProducts) {\r\n            setClientData()\r\n            let returned = []\r\n            map(data.saleconnector.products, (saleProduct) => {\r\n                const sale = {\r\n                    _id: saleProduct.product._id,\r\n                    isUsd: saleProduct.product.isUsd,\r\n                    discount: saleProduct.discount && saleProduct.discount,\r\n                    pieces: saleProduct.pieces,\r\n                    totalprice: saleProduct.totalprice,\r\n                    totalpriceuzs: saleProduct.totalpriceuzs,\r\n                }\r\n                map(saleProduct.saleproducts, (product) => {\r\n                    sale.pieces += product.pieces\r\n                    sale.totalprice += product.totalprice\r\n                    sale.totalpriceuzs += product.totalpriceuzs\r\n                    return ''\r\n                })\r\n                saleProduct.pieces > 0 &&\r\n                    returned.push({\r\n                        pieces: '',\r\n                        totalpriceuzs: 0,\r\n                        totalprice: 0,\r\n                        unitprice: saleProduct.unitprice,\r\n                        unitpriceuzs: saleProduct.unitpriceuzs,\r\n                        product: { ...sale },\r\n                        productdata: { ...saleProduct.product.productdata },\r\n                        _id: saleProduct._id,\r\n                    })\r\n                return ''\r\n            })\r\n\r\n            setReturnProducts(\r\n                filter(returned, (product) => product.product.pieces > 0)\r\n            )\r\n            setDiscounts([...data.saleconnector.discounts])\r\n            const totalSumm = (datas, property, type) => {\r\n                return type === 'uzs'\r\n                    ? convertToUzs(\r\n                        datas.reduce((summ, data) => summ + data[property], 0)\r\n                    )\r\n                    : convertToUsd(\r\n                        datas.reduce((summ, data) => summ + data[property], 0)\r\n                    )\r\n            }\r\n            setTotalPaymentsUsd(\r\n                data.saleconnector.products.reduce((prev, el) => prev + (el.product.isUsd ? el.totalprice : 0), 0)\r\n            )\r\n            setTotalPaymentsUzs(\r\n                data.saleconnector.products.reduce((prev, el) => prev + (!el.product.isUsd ? el.totalpriceuzs : 0), 0)\r\n            )\r\n            setTotalPaysUsd(\r\n                data.saleconnector.payments.reduce((prev, el) => prev + (el.usdpayment ? el.usdpayment : 0), 0)\r\n            )\r\n            setTotalPaysUzs(\r\n                data.saleconnector.payments.reduce((prev, el) => prev + (el.paymentuzs || 0), 0)\r\n            )\r\n        }\r\n        window.history.replaceState({}, document.title)\r\n    }, [location.state])\r\n\r\n    \r\n\r\n    return (\r\n        <div className={'flex grow relative overflow-auto'}>\r\n            {loadingMakePayment && (\r\n                <div className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            <CustomerPayment\r\n                returned={!!returnProducts.length}\r\n                exchangerate={exchangerate}\r\n                type={paymentType}\r\n                active={paymentModalVisible}\r\n                allMainPayment={allMainPayment}\r\n                togglePaymentModal={togglePaymentModal}\r\n                changePaymentType={handleChangePaymentType}\r\n                onChange={handleChangePaymentInput}\r\n                client={userValue || clientValue.label || packmanValue.label}\r\n                allPayment={allPayment}\r\n                allPaymentUzs={allPaymentUzs}\r\n                card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                debt={paymentDebt}\r\n                debtuzs={paymentDebtUzs}\r\n                discount={paymentDiscount}\r\n                discountUzs={paymentDiscountUzs}\r\n                handleChangeDiscount={handleChangeDiscount}\r\n                hasDiscount={hasDiscount}\r\n                transfer={\r\n                    currencyType === 'USD'\r\n                        ? paymentTransfer\r\n                        : paymentTransferUzs\r\n                }\r\n                handleClickDiscountBtn={handleClickDiscountBtn}\r\n                discountSelectOption={discountSelectOption}\r\n                handleChangeDiscountSelectOption={\r\n                    handleChangeDiscountSelectOption\r\n                }\r\n                paid={currencyType === 'USD' ? paid : paidUzs}\r\n                handleClickPay={handleClickPay}\r\n                changeComment={changeComment}\r\n                saleComment={saleComment}\r\n                onDoubleClick={handleDoubleClick}\r\n                paymentUsd={paymentUsd}\r\n                debtType={debtType}\r\n                setDebtType={setDebtType}\r\n            />\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'complete' ? handleClosePay : toggleCheckModal\r\n                }\r\n                approveFunction={\r\n                    modalBody === 'complete'\r\n                        ? returnProducts.length\r\n                            ? handleApproveReturn\r\n                            : handleApprovePay\r\n                        : handleClickPrint\r\n                }\r\n                isOpen={modalVisible}\r\n                product={modalData}\r\n                headers={headers}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    t(\"To'lovni amalga oshirishni tasdiqlaysizmi ?\")\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    t(\r\n                        \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                    )\r\n                }\r\n                changeProduct={handleChangeProduct}\r\n            />\r\n            <div className='flex flex-col grow gap-[1.25rem] overflow-auto'>\r\n                <div className={'mainPadding flex flex-col gap-[1.25rem]'}>\r\n                    <div>\r\n                        <Checkbox\r\n                            id={'register-selling'}\r\n                            onChange={handleChangeChecked}\r\n                            value={checked}\r\n                            label={t('Mijoz')}\r\n                        />\r\n                        <div className={'flex gap-[1.25rem] mt-[1rem]'}>\r\n                            <FieldContainer\r\n                                placeholder={t('Santexniklar')}\r\n                                maxWidth={'w-[14.676875rem]'}\r\n                                disabled={!checked}\r\n                                border={true}\r\n                                select={true}\r\n                                value={packmanValue}\r\n                                options={optionPackman}\r\n                                onChange={handleChangePackmanValue}\r\n                            />\r\n                            <FieldContainer\r\n                                placeholder={t('Xaridor')}\r\n                                maxWidth={'w-[14.676875rem]'}\r\n                                disabled={!checked}\r\n                                border={true}\r\n                                select={true}\r\n                                value={clientValue}\r\n                                options={optionClient}\r\n                                onChange={handleChangeClientValue}\r\n                            />\r\n                            <FieldContainer\r\n                                placeholder={t('Amaldagi xaridor')}\r\n                                disabled={!checked}\r\n                                value={userValue}\r\n                                onChange={handleChangeUserValue}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {!returnProducts.length && (\r\n                        <div className={'flex flex-col gap-[1.25rem]'}>\r\n                            <FieldContainer\r\n                                select={true}\r\n                                placeholder={t('misol: kompyuter')}\r\n                                value={selectedProduct}\r\n                                label={t('Maxsulotlar')}\r\n                                onChange={handleChangeSelectedProduct}\r\n                                options={filteredProducts}\r\n                            />\r\n                            <div className={'flex justify-end items-start'}>\r\n                                <div className='checkbox-card sale-toggle-container'>\r\n                                    <p className={'toggleText'}>\r\n                                        {t('Optom narxida hisoblash')} :\r\n                                    </p>\r\n                                    <input\r\n                                        type='checkbox'\r\n                                        checked={wholesale}\r\n                                        onChange={toggleSalePrice}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className={'tableContainerPadding mt-[-20px]'}>\r\n                    {returnProducts.length ? (\r\n                        <Table\r\n                            page={'backproduct'}\r\n                            data={returnProducts}\r\n                            headers={headerReturn}\r\n                            currency={currencyType}\r\n                            changeHandler={handleChangeReturnProduct}\r\n                        />\r\n                    ) : !tableProducts.length ? (\r\n                        <NotFind\r\n                            text={t(\"Sotuvda mahsulotlar qo'shilmagan!\")}\r\n                        />\r\n                    ) : (\r\n                        <Table\r\n                            page={'registersale'}\r\n                            data={tableProducts}\r\n                            headers={headers}\r\n                            currency={currencyType}\r\n                            Delete={handleDelete}\r\n                            changeHandler={handleChange}\r\n                            footer={'registersale'}\r\n                            increment={increment}\r\n                            decrement={decrement}\r\n                            lowUnitpriceProducts={lowUnitpriceProducts}\r\n                            wholeSale={wholesale}\r\n                            selectedFilial={selectedFilial}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className='register-selling-right min-w-[20.25rem] bg-white-400 backdrop-blur-[3.125rem] rounded-[0.25rem] flex flex-col gap-[1.25rem]'>\r\n                <div className='flex flex-col grow gap-[1.25rem]'>\r\n                    <SearchInput\r\n                        placeholder={t('kategoriyani qidirish...')}\r\n                        value={searchCategory}\r\n                        onChange={handleSearchCategory}\r\n                        onKeyUp={() => { }}\r\n                    />\r\n                    <div className='grow relative overflow-auto'>\r\n                        <div className='cards-container absolute left-0 right-[0.125rem] top-0 bottom-0'>\r\n                            {loading ? (\r\n                                <div className='tableContainerPadding'>\r\n                                    <Spinner />\r\n                                </div>\r\n                            ) : filteredCategories.length > 0 ? (\r\n                                map(filteredCategories, (category) => (\r\n                                    <CategoryCard\r\n                                        key={category._id}\r\n                                        id={category._id}\r\n                                        activeCategory={\r\n                                            category._id === activeCategory\r\n                                        }\r\n                                        title={category.name}\r\n                                        code={category.code}\r\n                                        products={category.products.length}\r\n                                        onClick={handleClickCategory}\r\n                                    />\r\n                                ))\r\n                            ) : (\r\n                                <NotFind text={t('Kategoriya mavjud emas')} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'flex gap-[0.625rem]'}>\r\n                    <button\r\n                        type={'button'}\r\n                        className={'register-selling-right-accept-btn'}\r\n                        onClick={\r\n                            returnProducts.length\r\n                                ? handleClickReturnPayment\r\n                                : handleClickPayment\r\n                        }\r\n                    >\r\n                        {t(\"To'lov\")}\r\n                    </button>\r\n                    {!returnProducts.length && (\r\n                        <button\r\n                            type={'button'}\r\n                            onClick={handleClickSave}\r\n                            className={'register-selling-right-deny-btn'}\r\n                        >\r\n                            <IoAttach size={'1.5rem'} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <BarcodeReader onError={handleError} onScan={handleScan} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterSelling\r\n"],"names":["_ref","id","title","code","products","activeCategory","onClick","_jsxs","className","concat","children","_jsx","IoCheckmark","size","SaleBtn","text","type","active","icons","cash","IoCashOutline","card","IoCardOutline","transfer","IoSwapHorizontalOutline","mixed","IoGitCompareOutline","Payment","_ref3","onDoubleClick","IoWalletOutline","value","onChange","option","onSelect","useSelector","state","currency","currencyType","placeholder","e","target","onWheel","blur","min","DiscountInput","label","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","TableInput","returned","togglePaymentModal","_ref$type","_ref$cash","_ref$card","_ref$transfer","discount","discountUzs","hasDiscount","debt","allPayment","allPaymentUzs","_ref$paid","paid","_ref$client","client","changePaymentType","discountSelectOption","handleChangeDiscountSelectOption","handleClickDiscountBtn","handleChangeDiscount","handleClickPay","exchangerate","allMainPayment","saleComment","changeComment","_ref$paymentUsd","paymentUsd","debtuzs","debtType","setDebtType","location","useLocation","defineLabel","PaymentInput","t","key","map","obj","pathname","includes","_useSelector","stopPropagation","autoFocus","IoPerson","Number","roundUsd","Math","round","Checkbox","toLocaleString","socket","io","process","userData","JSON","parse","localStorage","getItem","auth","token","market","_useTranslation","useTranslation","dispatch","useDispatch","navigate","useNavigate","login","user","_useSelector2","_useSelector3","category","allcategories","loading","_useSelector4","registerSelling","allProducts","clients","loadingMakePayment","lastPayments","_useSelector5","packmans","_useState","useState","_useState2","_slicedToArray","filteredProducts","setFilteredProducts","_useState3","_useState4","selectedProduct","setSelectedProduct","_useState5","_useState6","checked","setChecked","_useState7","_useState8","tableProducts","setTableProducts","_useState9","_useState10","filteredCategories","setFilteredCategories","_useState11","_useState12","setActiveCategory","_useState13","_useState14","searchCategory","setSearchCategory","_useState15","_useState16","optionPackman","setOptionPackman","_useState17","_useState18","packmanValue","setPackmanValue","_useState19","_useState20","optionClient","setOptionClient","_useState21","_useState22","clientValue","setClientValue","_useState23","_useState24","userValue","setUserValue","_useState25","_useState26","modalVisible","setModalVisible","_useState27","_useState28","currentProduct","setCurrentProduct","_useState29","_useState30","paymentModalVisible","setPaymentModalVisible","_useState31","_useState32","paymentType","setPaymentType","_useState33","_useState34","paymentCash","setPaymentCash","_useState35","_useState36","paymentCashUzs","setPaymentCashUzs","_useState37","_useState38","setPaymentUsd","_useState39","_useState40","paymentCard","setPaymentCard","_useState41","_useState42","paymentCardUzs","setPaymentCardUzs","_useState43","_useState44","paymentTransfer","setPaymentTransfer","_useState45","_useState46","paymentTransferUzs","setPaymentTransferUzs","_useState47","_useState48","paymentDiscount","setPaymentDiscount","_useState49","_useState50","paymentDiscountUzs","setPaymentDiscountUzs","_useState51","_useState52","paymentDiscountPercent","setPaymentDiscountPercent","_useState53","_useState54","setAllMainPayment","_useState55","_useState56","setHasDiscount","_useState57","_useState58","setDiscountSelectOption","_useState59","_useState60","paymentDebt","setPaymentDebt","_useState61","_useState62","paymentDebtUzs","setPaymentDebtUzs","_useState63","_useState64","setAllPayment","_useState65","_useState66","setAllPaymentUzs","_useState67","_useState68","setPaid","_useState69","_useState70","paidUzs","setPaidUzs","_useState71","_useState72","modalBody","setModalBody","_useState73","_useState74","modalData","setModalData","_useState75","_useState76","temporary","setTemporary","_useState77","_useState78","saleConnectorId","setSaleConnectorId","_useState79","_useState80","returnProducts","setReturnProducts","_useState81","_useState82","discounts","setDiscounts","_useState83","_useState84","returnDiscounts","setReturnDiscounts","_useState85","_useState86","totalPaymentsUsd","setTotalPaymentsUsd","_useState87","_useState88","totalPaymentsUzs","setTotalPaymentsUzs","_useState89","_useState90","totalPaysUsd","setTotalPaysUsd","_useState91","_useState92","totalPaysUzs","setTotalPaysUzs","_useState93","_useState94","setExchangerate","_useState95","_useState96","setSaleComment","_useState97","_useState98","lowUnitpriceProducts","setLowUnitpriceProducts","_useState99","_useState100","wholesale","setWholesale","_useState101","_useState102","_useState103","name","_id","_useState104","selectedFilial","setSelectedFilial","delay","headers","styles","headerReturn","bool","convertToUsd","convertToUzs","currentEchangerate","uzs","usd","clearAll","_toConsumableArray","pack","saleconnectorid","handleClosePay","setTimeout","handleApprovePay","body","saleproducts","product","prev","_objectSpread","pieces","fromFilial","unitprice","tradeprice","unitpriceuzs","tradepriceuzs","packman","discountuzs","procient","isProcient","payment","totalprice","totalpriceuzs","cashuzs","carduzs","transferuzs","usdpayment","comment","addPayment","makePayment","then","payload","error","deleteSavedPayment","handleApproveReturn","filter","returnSaleProducts","_ref2","handlePackcount","index","some","prod","i","packcount","warningEmptyPackCount","total","newRelease","totalpackcount","isPackcount","packcountpieces","handleClickCategory","handleChangeSelectedProduct","barcode","find","productdata","price","sellingprice","sellingpriceuzs","isUsd","incomingprice","incomingpriceuzs","categorycode","filialProductsTotal","filial","warningLessSellPayment","handleChangeProductUnitPriceTable","prevProduct","UzsToUsd","UsdToUzs","handleChangeProductNumberTable","handleChangeFromFilial","handleSelectFilial","getFilialProducts","data","catch","universalToast","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$Api$post","wrap","_context","next","Api","post","sent","abrupt","stop","_x","apply","arguments","useEffect","allProductsReducer","productsForSearch","emit","on","_ref5","categories","setAllCategories","_ref6","_product$price","_product$price2","push","setAllProductsBySocket","_ref7","message","filteredData","getAllPackmans","getClients","getFilials","marketData","setClientData","saleconnector","saleProduct","sale","reduce","el","payments","paymentuzs","window","history","replaceState","document","SmallLoader","CustomerPayment","length","all","allUzs","all2","summ","all2Uzs","paymentUzs","abs","maxSum","maxSumUzs","warningMorePayment","allUsd","writePayment","discountUsd","clearTimeout","UniversalModal","toggleModal","approveFunction","isOpen","headerText","changeProduct","handleChangeProductUnitPrice","handleChangeProductNumber","FieldContainer","maxWidth","disabled","border","select","options","hasOwnProperty","_client$packman","_client$packman2","prevState","warningSaleProductsEmpty","Table","page","changeHandler","Delete","splice","footer","increment","decrement","wholeSale","NotFind","SearchInput","str","searchedStr","replace","trim","filterData","toLowerCase","onKeyUp","Spinner","CategoryCard","newDiscount","_product$product","totalDiscountsUsd","totalDiscountsUzs","warningReturnProductsEmpty","warningCountSellPayment","item","acc","cur","allUzs2","allUsd2","warningCurrencyRate","totalPrice","totalPriceUzs","savePayment","IoAttach","BarcodeReader","onError","onScan"],"sourceRoot":""}