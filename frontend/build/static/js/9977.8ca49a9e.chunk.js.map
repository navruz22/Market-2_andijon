{"version":3,"file":"static/js/9977.8ca49a9e.chunk.js","mappings":"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","sources":["Pages/Currency/Currency.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer.js'\r\nimport Button from '../../Components/Buttons/BtnAddRemove.js'\r\nimport Table from '../../Components/Table/Table.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {motion} from 'framer-motion'\r\nimport {\r\n    addExchangerate,\r\n    deleteExchangerate,\r\n    getCurrencies,\r\n    updateExchangerate,\r\n    updateProductPrices,\r\n} from './currencySlice.js'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader.js'\r\n\r\nconst Currency = () => {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {currencies, getCurrenciesLoading} = useSelector(\r\n        (state) => state.currency\r\n    )\r\n\r\n    const headers = [\r\n        {title: 'â„–', styles: 'w-[8%] text-left'},\r\n        {title: t('Sana'), styles: 'w-[17%] text-center'},\r\n        {title: t('Kurs'), styles: 'w-[67%] text-center'},\r\n        {title: '', styles: 'w-[8%] text-center'},\r\n    ]\r\n\r\n    const [data, setData] = useState(currencies)\r\n    const [exchangeName, setExchangeName] = useState('')\r\n    const [currentExchange, setCurrentExchange] = useState('')\r\n    const [deletedExchange, setDeletedExchange] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [newExchange, setNewExchange] = useState(false)\r\n    const [modalBody, setModalBody] = useState(null)\r\n\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n\r\n    const handleChangeExchangeName = (e) => {\r\n        setExchangeName(e.target.value)\r\n    }\r\n\r\n    const handleEditExchange = (exchangerate) => {\r\n        setCurrentExchange(exchangerate)\r\n        setExchangeName(exchangerate.exchangerate)\r\n        setStickyForm(true)\r\n    }\r\n    const handleDeleteExchange = (exchangerate) => {\r\n        setDeletedExchange(exchangerate)\r\n        setModalBody('approve')\r\n        toggleModal()\r\n    }\r\n    const handleClickApproveToDelete = () => {\r\n        const body = {_id: deletedExchange._id}\r\n        dispatch(deleteExchangerate(body))\r\n        handleClickCancelToDelete()\r\n    }\r\n    const handleClickCancelToDelete = () => {\r\n        setModalVisible(false)\r\n        setDeletedExchange(null)\r\n        setModalBody(null)\r\n    }\r\n\r\n    const addNewExchange = (e) => {\r\n        e.preventDefault()\r\n        const body = {exchangerate: exchangeName}\r\n        const {failed} = checkEmptyString([\r\n            {value: exchangeName, message: 'Kurs narxi'},\r\n        ])\r\n        if (failed) {\r\n            return universalToast(t('Valyuta kursini kiriting!'), 'error')\r\n        }\r\n        dispatch(addExchangerate(body)).then(({error}) => {\r\n            if (!error) {\r\n                clearForm()\r\n                setNewExchange(true)\r\n                setModalVisible(true)\r\n                setModalBody('complete')\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed} = checkEmptyString([\r\n            {value: exchangeName, message: 'Kurs narxi'},\r\n        ])\r\n        if (failed) {\r\n            return universalToast(t('Valyuta kursini kiriting!'), 'error')\r\n        }\r\n        const body = {\r\n            exchangerate: exchangeName,\r\n            _id: currentExchange._id,\r\n        }\r\n        dispatch(updateExchangerate(body)).then(({error}) => {\r\n            if (!error) {\r\n                clearForm()\r\n                setNewExchange(true)\r\n                setModalVisible(true)\r\n                setModalBody('complete')\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateAllProducts = () => {\r\n        dispatch(updateProductPrices()).then(({error}) => {\r\n            if (!error) {\r\n                setModalBody(null)\r\n                setModalVisible(false)\r\n                setNewExchange(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setExchangeName('')\r\n        setCurrentExchange(null)\r\n        setStickyForm(false)\r\n    }\r\n\r\n    const handleKeyUp = (e) => {\r\n        e.preventDefault()\r\n        if (e.key === 'Enter') {\r\n            addNewExchange()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrencies())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setData(currencies)\r\n    }, [currencies])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            {getCurrenciesLoading && (\r\n                <div className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            <UniversalModal\r\n                headerText={\r\n                    newExchange\r\n                        ? \"Diqqat! Barcha mahsulotlar narxi valyuta kursiga nisbatan o'zgarishini xohlaysizmi?\"\r\n                        : `${\r\n                              deletedExchange && deletedExchange.exchangerate\r\n                          } ${t(\"kurs narxini o'chirishni tasdiqlaysizmi?\")}`\r\n                }\r\n                title={\r\n                    newExchange\r\n                        ? ''\r\n                        : t(\r\n                              \"O'chirilgan kurs narxini tiklashning imkoni mavjud emas!\"\r\n                          )\r\n                }\r\n                toggleModal={toggleModal}\r\n                body={modalBody}\r\n                approveFunction={\r\n                    newExchange ? updateAllProducts : handleClickApproveToDelete\r\n                }\r\n                closeModal={handleClickCancelToDelete}\r\n                isOpen={modalVisible}\r\n            />\r\n            <form\r\n                className={`unitFormStyle ${\r\n                    stickyForm && 'stickyForm'\r\n                } flex gap-[1.25rem] bg-background flex-col mainPadding transition ease-linear duration-200`}\r\n            >\r\n                <div className='exchangerate-style'>\r\n                    <FieldContainer\r\n                        value={exchangeName}\r\n                        onChange={handleChangeExchangeName}\r\n                        label={t('Kurs narxi')}\r\n                        placeholder={t('misol: 11 000 UZS')}\r\n                        maxWidth={'w-[30.75rem]'}\r\n                        type={'number'}\r\n                        border={true}\r\n                        onKeyPress={handleKeyUp}\r\n                    />\r\n                    <div\r\n                        className={'w-full flex gap-[1.25rem] grow w-[33.2rem]'}\r\n                    >\r\n                        <Button\r\n                            onClick={stickyForm ? handleEdit : addNewExchange}\r\n                            add={!stickyForm}\r\n                            edit={stickyForm}\r\n                            text={\r\n                                stickyForm\r\n                                    ? t(`Saqlash`)\r\n                                    : t(`Yangi o'lchov qo'shish`)\r\n                            }\r\n                        />\r\n                        <Button onClick={clearForm} text={t('Tozalash')} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className='tableContainerPadding'>\r\n                {getCurrenciesLoading ? (\r\n                    <Spinner />\r\n                ) : currencies.length === 0 ? (\r\n                    <NotFind text={t('Valyuta kursi mavjud emas')} />\r\n                ) : (\r\n                    <Table\r\n                        page={'exchange'}\r\n                        data={data}\r\n                        currentPage={0}\r\n                        countPage={10}\r\n                        headers={headers}\r\n                        Edit={handleEditExchange}\r\n                        Delete={handleDeleteExchange}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Currency\r\n"],"names":["t","useTranslation","dispatch","useDispatch","_useSelector","useSelector","state","currency","currencies","getCurrenciesLoading","headers","title","styles","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","exchangeName","setExchangeName","_useState5","_useState6","currentExchange","setCurrentExchange","_useState7","_useState8","deletedExchange","setDeletedExchange","_useState9","_useState10","modalVisible","setModalVisible","_useState11","_useState12","stickyForm","setStickyForm","_useState13","_useState14","newExchange","setNewExchange","_useState15","_useState16","modalBody","setModalBody","toggleModal","handleClickCancelToDelete","addNewExchange","e","preventDefault","body","exchangerate","checkEmptyString","value","message","failed","universalToast","addExchangerate","then","_ref","error","clearForm","useEffect","getCurrencies","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","className","SmallLoader","UniversalModal","headerText","concat","approveFunction","updateProductPrices","_ref3","_id","deleteExchangerate","closeModal","isOpen","FieldContainer","onChange","target","label","placeholder","maxWidth","type","border","onKeyPress","key","Button","onClick","updateExchangerate","_ref2","add","edit","text","Spinner","length","NotFind","Table","page","currentPage","countPage","Edit","Delete"],"sourceRoot":""}