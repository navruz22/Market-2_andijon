{"version":3,"file":"static/js/9958.606c3dd6.chunk.js","mappings":"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","sources":["Components/Buttons/BtnAddRemove.js","Components/Buttons/PrintBtn.js","Components/Buttons/SaveConfirmBtn.js","Components/Dates/Dates.js","Components/FieldContainer/FieldContainer.js","Components/FilterButtons/FilterButtons.js","Components/Inputs/Input.js","Components/Inputs/SearchInput.js","Components/NotFind/NotFind.js","Components/SearchForm/SearchForm.js","Components/Select/CustomStyle.js","Components/Select/SelectForm.js","Components/Spinner/SmallLoader.js","Pages/Seller/Sellers.js"],"sourcesContent":["import React from 'react'\r\nimport {BiBell, BiPlus} from 'react-icons/bi'\r\nimport {MdOutlineClear} from 'react-icons/md'\r\n\r\nconst BtnAddRemove = ({onClick, text, add, edit, bell, count}) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`focus-visible:outline-none ${\r\n                add ? 'createElement' : edit ? 'edit-button' : 'clearElement'\r\n            }`}\r\n        >\r\n            {bell ? (\r\n                <div className='plusIcon relative pr-2'>\r\n                    <BiBell size={18} />\r\n                    {count !== 0 && (\r\n                        <span className='absolute bg-primary-800 text-white-900 w-[15px] h-[15px] rounded-full text-[10px] top-0'>\r\n                            {count}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            ) : add && !edit ? (\r\n                <div className='plusIcon'>\r\n                    <BiPlus />\r\n                </div>\r\n            ) : !add && !edit ? (\r\n                <div className='plusIcon'>\r\n                    <MdOutlineClear />\r\n                </div>\r\n            ) : (\r\n                ''\r\n            )}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BtnAddRemove\r\n","import { IoPrint } from 'react-icons/io5'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction PrintBtn({ onClick, isDisabled }) {\r\n    const { t } = useTranslation(['common'])\r\n    return (\r\n        <button\r\n\r\n            className={`group print-btn-style ml-auto min-w-max ${\r\n                isDisabled ? 'pointer-events-none' : 'pointer-events-auto'\r\n            }`}\r\n            onClick={onClick}\r\n            disabled={isDisabled}\r\n        >\r\n            <span className='print-text-style'>{t(\"Chop etish\")}</span>\r\n            <span className='print-icon-style'>\r\n                <IoPrint\r\n                    size={'1.125rem'}\r\n                    className='text-primary-800 text-lg transition-all ease-in-out duration-200 group-hover:text-primary-900'\r\n                />\r\n            </span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PrintBtn\r\n","import React from 'react'\r\nimport {BsPaperclip, BsShieldFillCheck} from 'react-icons/bs'\r\n\r\nexport const SaveBtn = ({onClick, text}) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='bg-warning-500 shadow-[0_5px_15px_rgba(0,0,0,0.15)] transition-all ease-in-out duration-200 active:shadow-none hover:bg-warning-600 p-[10px] flex items-center justify-center gap-[0.3125rem] text-white-900 rounded-[0.5rem]'\r\n        >\r\n            <BsPaperclip className='text-white-900' size={'1.125rem'} />{' '}\r\n            <span className={'text-sm leading-[1.125rem]'}>{text}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const ConfirmBtn = ({onClick, text}) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='bg-primary-800 flex items-center gap-[0.3125rem] justify-center p-[10px] text-white-900 rounded-[0.5rem] shadow-[0_5px_15px_rgba(0,0,0,0.15)] transition-all ease-in-out duration-200 active:shadow-none hover:bg-primary-900'\r\n        >\r\n            <BsShieldFillCheck className='text-white-900' size={'1.125rem'} />{' '}\r\n            <span className={'text-sm leading-[1.125rem]'}>{text}</span>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport {IoCalendarNumber} from 'react-icons/io5'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nfunction Dates({value, onChange, placeholder, maxWidth}) {\r\n    return (\r\n        <div className={`group relative ${maxWidth ? maxWidth : 'grow'}`}>\r\n            <DatePicker\r\n                selected={value}\r\n                placeholderText={placeholder}\r\n                onChange={onChange}\r\n                className={`datePickerStyle`}\r\n                dateFormat={'dd.MM.yyyy'}\r\n            />\r\n            <IoCalendarNumber\r\n                size={'0.625rem'}\r\n                className='datePickerIcon group-hover:text-blue-500'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import Input from '../Inputs/Input'\r\nimport SelectInput from '../SelectInput/SelectInput'\r\n\r\nfunction FieldContainer({\r\n    star,\r\n    maxWidth,\r\n    value,\r\n    onChange,\r\n    label,\r\n    placeholder,\r\n    type,\r\n    select,\r\n    disabled,\r\n    options,\r\n    border,\r\n    onKeyUp,\r\n    autoComplete,\r\n}) {\r\n    return (\r\n        <div\r\n            className={\r\n                maxWidth\r\n                    ? `${maxWidth} ${\r\n                          border\r\n                              ? 'border-r-[1px] border-r-blue-100 pr-[1.25rem]'\r\n                              : ''\r\n                      }`\r\n                    : 'grow'\r\n            }\r\n        >\r\n            {select ? (\r\n                <SelectInput\r\n                    placeholder={placeholder}\r\n                    onSelect={onChange}\r\n                    label={label}\r\n                    isDisabled={disabled}\r\n                    options={options}\r\n                    value={value}\r\n                />\r\n            ) : (\r\n                <Input\r\n                    star={star}\r\n                    type={type || 'text'}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    label={label}\r\n                    placeholder={placeholder}\r\n                    onKeyUp={onKeyUp}\r\n                    disabled={disabled}\r\n                    autoComplete={autoComplete}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FieldContainer\r\n","import React from 'react'\r\n\r\nfunction FilterButtons({label, element, grow}) {\r\n    return (\r\n        <div\r\n            className={`flex items-center gap-[0.75rem] ${grow ? 'grow' : ''}`}\r\n        >\r\n            {label && (\r\n                <h3\r\n                    className={\r\n                        'font-light text-blue-700 leading-[1rem] text-sm'\r\n                    }\r\n                >\r\n                    {label}:\r\n                </h3>\r\n            )}\r\n            {element}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterButtons\r\n","import {useState} from 'react'\r\nimport {IoEye, IoEyeOff} from 'react-icons/io5'\r\n\r\nfunction Input({\r\n    star,\r\n    placeholder,\r\n    type,\r\n    value,\r\n    onChange,\r\n    password,\r\n    label,\r\n    onKeyUp,\r\n    disabled,\r\n    autoComplete,\r\n}) {\r\n    const [currentShow, setCurrentShow] = useState(false)\r\n    const changeType = () => {\r\n        setCurrentShow(!currentShow)\r\n    }\r\n\r\n    return (\r\n        <div className={'input-container'}>\r\n            {label && (\r\n                <label\r\n                    className={`labelClass leading-[1.125rem] ${\r\n                        star\r\n                            ? \" after:content-['*'] after:text-[#F04438] after:pl-[0.25rem]\"\r\n                            : ''\r\n                    }`}\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <div className='relative'>\r\n                <input\r\n                    placeholder={placeholder}\r\n                    type={currentShow ? 'text' : type}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onKeyUp={onKeyUp}\r\n                    disabled={disabled}\r\n                    className={`${\r\n                        disabled ? 'disabled-class' : ''\r\n                    } inputClass shadow-[0_10px_10px_rgba(0,0,0,0.05)] leading-[1.125rem]`}\r\n                    onWheel={(e) => e.target.blur()}\r\n                    min={0}\r\n                    autoComplete={autoComplete || 'off'}\r\n                />\r\n                {password && (\r\n                    <button\r\n                        className={'iconButton'}\r\n                        type={'button'}\r\n                        onClick={changeType}\r\n                    >\r\n                        {currentShow ? (\r\n                            <IoEye className='iconClass' />\r\n                        ) : (\r\n                            <IoEyeOff className='iconClass' />\r\n                        )}\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import {IoSearchOutline} from 'react-icons/io5'\r\n\r\nfunction SearchInput({\r\n                         placeholder,\r\n                         value,\r\n                         onChange,\r\n                         someClasses,\r\n                         onKeyUp,\r\n                         disabled\r\n                     }) {\r\n    return (\r\n        <div\r\n            className={`${\r\n                disabled ? 'disabled-class' : 'searchInput-container'\r\n            }  ${someClasses ? someClasses : ''}`}\r\n        >\r\n            <IoSearchOutline className='searchIcon text-[1.31rem] text-blue-200' />\r\n            <input\r\n                className={'search-input'}\r\n                placeholder={placeholder}\r\n                type={'search'}\r\n                value={value}\r\n                onChange={onChange}\r\n                onKeyUp={onKeyUp}\r\n                disabled={disabled}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\n\r\nfunction NotFind({text}) {\r\n    return (\r\n        <div className={'text-center py-10'}>\r\n            <h3 className={'text-black-300 text-[xl] leading-[1.875rem]'}>\r\n                {text}...\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFind","import SearchInput from '../Inputs/SearchInput.js'\r\nimport SelectForm from '../Select/SelectForm.js'\r\nimport FilterButtons from '../FilterButtons/FilterButtons.js'\r\nimport FieldContainer from '../FieldContainer/FieldContainer.js'\r\nimport PrintBtn from '../Buttons/PrintBtn.js'\r\nimport {ConfirmBtn} from '../Buttons/SaveConfirmBtn.js'\r\nimport Dates from '../Dates/Dates.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {map} from 'lodash'\r\nimport SelectInput from '../SelectInput/SelectInput.js'\r\n\r\nfunction SearchForm({\r\n    filterByPackman,\r\n    searchByPackmans,\r\n    filterByTotal,\r\n    searchByCode,\r\n    searchById,\r\n    searchByDelivererName,\r\n    filterByDelivererName,\r\n    filterByDelivererNameWhenPressEnter,\r\n    searchByClientName,\r\n    filterByClientName,\r\n    filterByClientNameWhenPressEnter,\r\n    filterById,\r\n    filterByIdWhenPressEnter,\r\n    filterByCode,\r\n    filterByCodeAndNameAndCategoryWhenPressEnter,\r\n    searchByName,\r\n    filterByName,\r\n    filterBy,\r\n    searchByCategory,\r\n    filterByCategory,\r\n    numberOfChecks,\r\n    setNumberOfChecks,\r\n    clickPrintBtn,\r\n    startDate,\r\n    endDate,\r\n    setStartDate,\r\n    setEndDate,\r\n    date,\r\n    setDate,\r\n    clickConfirmBtn,\r\n    barcode,\r\n    filterByBarcode,\r\n    filterByBarcodeWhenPressEnter,\r\n    searchByDirectorName,\r\n    filterByDirectorName,\r\n    filterByDirectorNameWhenPressEnter,\r\n    searchByMarketName,\r\n    filterByMarketName,\r\n    searchBySellerName,\r\n    filterBySellerName,\r\n    filterBySellerNameWhenPressEnter,\r\n    searchByMarketInn,\r\n    filterByMarketInn,\r\n    filterByMarketInnWhenPressEnter,\r\n    filterByMarketNameWhenPressEnter,\r\n}) {\r\n    const {t} = useTranslation(['common'])\r\n    const chooseComponent = (key) => {\r\n        switch (key) {\r\n            case 'total':\r\n                return <SelectForm key={'total_1'} onSelect={filterByTotal} />\r\n            case 'category':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'category_1'}\r\n                        label={t('Kategoriya')}\r\n                        element={\r\n                            <FieldContainer\r\n                                placeholder={`${t('misol')}: 000000`}\r\n                                type={'text'}\r\n                                value={searchByCategory}\r\n                                onChange={filterByCategory}\r\n                                maxWidth={'w-[6.8125rem]'}\r\n                                onKeyUp={\r\n                                    filterByCodeAndNameAndCategoryWhenPressEnter\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'code':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'code_1'}\r\n                        label={t('Maxsulot kodi')}\r\n                        element={\r\n                            <FieldContainer\r\n                                placeholder={`${t('misol')}: 000000`}\r\n                                type={'text'}\r\n                                maxWidth={'flex-1'}\r\n                                value={searchByCode}\r\n                                onChange={filterByCode}\r\n                                onKeyUp={\r\n                                    filterByCodeAndNameAndCategoryWhenPressEnter\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'id':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'id_1'}\r\n                        label={t('ID')}\r\n                        element={\r\n                            <FieldContainer\r\n                                placeholder={t('misol: 101')}\r\n                                type={'text'}\r\n                                maxWidth={'w-[6.8125rem]'}\r\n                                value={searchById}\r\n                                onChange={filterById}\r\n                                onKeyUp={filterByIdWhenPressEnter}\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'name':\r\n                return (\r\n                    <SearchInput\r\n                        key={'search_1'}\r\n                        placeholder={t('qidirish...')}\r\n                        someClasses={'grow'}\r\n                        value={searchByName}\r\n                        onChange={filterByName}\r\n                        onKeyUp={filterByCodeAndNameAndCategoryWhenPressEnter}\r\n                    />\r\n                )\r\n            case 'delivererName':\r\n                return (\r\n                    <SearchInput\r\n                        key={'yetkazuvchi_ismi_1'}\r\n                        placeholder={t('yetkazuvchi ismi...')}\r\n                        someClasses={'grow'}\r\n                        value={searchByDelivererName}\r\n                        onChange={filterByDelivererName}\r\n                        onKeyUp={filterByDelivererNameWhenPressEnter}\r\n                    />\r\n                )\r\n            case 'clientName':\r\n                return (\r\n                    <SearchInput\r\n                        key={'mijoz_ismi_1'}\r\n                        placeholder={t('mijoz ismi...')}\r\n                        someClasses={'grow basis-1/6'}\r\n                        value={searchByClientName}\r\n                        onChange={filterByClientName}\r\n                        onKeyUp={filterByClientNameWhenPressEnter}\r\n                    />\r\n                )\r\n            case 'sellerName':\r\n                return (\r\n                    <SearchInput\r\n                        key={'sotuvchi_ismi_1'}\r\n                        placeholder={t('sotuvchi ismi...')}\r\n                        someClasses={'grow basis-1/6'}\r\n                        value={searchBySellerName}\r\n                        onChange={filterBySellerName}\r\n                        onKeyUp={filterBySellerNameWhenPressEnter}\r\n                    />\r\n                )\r\n            case 'checks':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'cheklar_soni_1'}\r\n                        label={t('Cheklar soni')}\r\n                        element={\r\n                            <FieldContainer\r\n                                placeholder={t('misol: 101')}\r\n                                type={'text'}\r\n                                maxWidth={'flex-1'}\r\n                                value={numberOfChecks}\r\n                                onChange={setNumberOfChecks}\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'printBtn':\r\n                return <PrintBtn key={'print_btn_1'} onClick={clickPrintBtn} />\r\n            case 'startDate':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'start_date_1'}\r\n                        label={t('Boshlang`ich sana')}\r\n                        element={\r\n                            <Dates\r\n                                value={startDate}\r\n                                onChange={setStartDate}\r\n                                placeholder={'01.01.2021'}\r\n                                maxWidth={'w-[6.625rem]'}\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'endDate':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'end_date_1'}\r\n                        label={t('Tugash sana')}\r\n                        element={\r\n                            <Dates\r\n                                value={endDate}\r\n                                onChange={setEndDate}\r\n                                placeholder={'05.06.2022'}\r\n                                maxWidth={'w-[6.625rem]'}\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'singleDate':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'single_date_1'}\r\n                        label={t('Sanani tanlang')}\r\n                        element={\r\n                            <Dates\r\n                                value={date}\r\n                                onChange={setDate}\r\n                                placeholder={t('misol: 02.02.2022')}\r\n                                maxWidth={'w-[9.6875rem]'}\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'confirmBtn':\r\n                return (\r\n                    <ConfirmBtn\r\n                        key={'confirm_btn_1'}\r\n                        text={t('Yakunlash')}\r\n                        onClick={clickConfirmBtn}\r\n                    />\r\n                )\r\n            case 'barcode':\r\n                return (\r\n                    <FilterButtons\r\n                        key={'barcode_1'}\r\n                        label={t('Shtrix kodi')}\r\n                        element={\r\n                            <FieldContainer\r\n                                placeholder={t('misol: 101')}\r\n                                type={'text'}\r\n                                value={barcode}\r\n                                onChange={filterByBarcode}\r\n                                maxWidth={'flex-1'}\r\n                                onKeyUp={filterByBarcodeWhenPressEnter}\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            case 'directorName':\r\n                return (\r\n                    <SearchInput\r\n                        key={'director_name_1'}\r\n                        value={searchByDirectorName}\r\n                        onChange={filterByDirectorName}\r\n                        placeholder={'Direktor ismi yoki familyasi...'}\r\n                        someClasses={'grow'}\r\n                        onKeyUp={filterByDirectorNameWhenPressEnter}\r\n                    />\r\n                )\r\n            case 'marketName':\r\n                return (\r\n                    <SearchInput\r\n                        key={'market_name_1'}\r\n                        value={searchByMarketName}\r\n                        onChange={filterByMarketName}\r\n                        placeholder={\"Do'kon nomi...\"}\r\n                        someClasses={'grow'}\r\n                        onKeyUp={filterByMarketNameWhenPressEnter}\r\n                    />\r\n                )\r\n            case 'inn':\r\n                return (\r\n                    <SearchInput\r\n                        key={'market_inn_1'}\r\n                        value={searchByMarketInn}\r\n                        onChange={filterByMarketInn}\r\n                        placeholder={\"Do'kon INN si...\"}\r\n                        someClasses={'grow'}\r\n                        onKeyUp={filterByMarketInnWhenPressEnter}\r\n                    />\r\n                )\r\n            case 'select':\r\n                return (\r\n                    <SelectInput\r\n                        placeholder={'Yetkazib beruvchi'}\r\n                        onSelect={filterByPackman}\r\n                        options={searchByPackmans}\r\n                    />\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n    return (\r\n        <div className='flex items-end gap-[1.5rem] mainPadding grow'>\r\n            {map(filterBy, (key) => chooseComponent(key))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} color='86A7E9' />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    width: 'max-content',\r\n    marginLeft: '0.75rem'\r\n})\r\nconst DropdownIndicator = (styles, {isFocused, isDisabled}) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: isFocused\r\n        ? '#193F8A'\r\n        : '#071F45' || isDisabled\r\n            ? 'rgba(28, 28, 28, 0.2)'\r\n            : '#071F45'\r\n})\r\n\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles,\r\n    marginLeft: '5px'\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    width:\"5rem\",\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer'\r\n})\r\nconst SingleValue = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    margin: 0,\r\n    color: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#071F45'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n})\r\nconst Control = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    borderRadius: '.5rem',\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    padding: '0.6875rem 0.625rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: '0px 10px 10px rgba(0, 0, 0, 0.05)',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#EAEAEA'\r\n    },\r\n    backgroundColor: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#fff'\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst SelectForm = ({onSelect, isDisabled}) => {\r\n    const {t} = useTranslation(['common'])\r\n    const options = [\r\n        {value: 10, label: 10},\r\n        {value: 20, label: 20},\r\n        {value: 50, label: 50},\r\n        {value: 100, label: 100},\r\n        {value: 100000, label: 'Barchasi'}\r\n    ]\r\n    return (\r\n        <div className='flex items-center justify-center'>\r\n            <label\r\n                htmlFor='select'\r\n                className={\r\n                    'text-[0.875rem] font-light text-blue-700 leading-[1rem]'\r\n                }\r\n            >\r\n                {t(`Korsatish`)}\r\n            </label>\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                defaultValue={options[0]}\r\n                options={options}\r\n                isDisabled={isDisabled}\r\n                id={'select'}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectForm\r\n","function SmallLoader() {\r\n    return (\r\n        <div className={'flex items-center justify-center mt-14'}>\r\n            <div className='clock-loader'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SmallLoader\r\n","import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from './../../Components/FieldContainer/FieldContainer'\r\nimport Button from './../../Components/Buttons/BtnAddRemove'\r\nimport Table from './../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from './../../Components/Spinner/SmallLoader'\r\nimport NotFind from './../../Components/NotFind/NotFind'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {motion} from 'framer-motion'\r\nimport {\r\n    successAddSellerMessage,\r\n    successUpdateSellerMessage,\r\n    universalToast,\r\n    warningEmptyInput,\r\n} from './../../Components/ToastMessages/ToastMessages'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {\r\n    addSeller,\r\n    clearErrorSellers,\r\n    clearSuccessAddSeller,\r\n    clearSuccessUpdateSeller,\r\n    getSellers,\r\n    updateSeller,\r\n} from './sellerSlice'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\n\r\nfunction Sellers() {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const {\r\n        errorSellings,\r\n        sellers,\r\n        loading,\r\n        successAddSelling,\r\n        successUpdateSelling,\r\n    } = useSelector((state) => state.sellers)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n\r\n    const {user} = useSelector((state) => state.login)\r\n\r\n    const headers = [\r\n        {title: '№', styles: 'w-[8%] text-left'},\r\n        {title: t('Ismi'), styles: 'w-[21%]'},\r\n        {title: t('Familiyasi'), styles: 'w-[21%]'},\r\n        {title: t('Telefon raqami'), styles: 'w-[21%]'},\r\n        {title: 'Sotuvlar'},\r\n        {title: 'Summa'},\r\n        {title: 'Sof foyda'},\r\n        {title: '', styles: 'w-[8%]'},\r\n    ]\r\n\r\n    const [stickyForm, setStickForm] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [sellerName, setSellerName] = useState('')\r\n    const [sellerSurname, setSellerSurname] = useState('')\r\n    const [sellerNumber, setSellerNumber] = useState('')\r\n    const [sellerLogin, setSellerLogin] = useState('')\r\n    const [sellerPassword, setSellerPassword] = useState('')\r\n    const [sellerAgainPassword, setSellerAgainPassword] = useState('')\r\n    const [currentSeller, setCurrentSeller] = useState('')\r\n\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(new Date().setDate(new Date().getDate() - 10))\r\n    )\r\n    const [endDate, setEndDate] = useState(new Date())\r\n\r\n    // handle Changed inputs\r\n    const addNewSeller = (e) => {\r\n        e && e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: sellerName,\r\n                message: t('Sotuvchi ismi'),\r\n            },\r\n            {\r\n                value: sellerSurname,\r\n                message: t('Sotuvchi familiyasi'),\r\n            },\r\n            {\r\n                value: sellerNumber,\r\n                message: t('Sotuvchi telefon raqami'),\r\n            },\r\n            {\r\n                value: sellerLogin,\r\n                message: t('Sotuvchi logini'),\r\n            },\r\n            {\r\n                value: sellerPassword,\r\n                message: t('Sotuvchi paroli'),\r\n            },\r\n            {\r\n                value: sellerAgainPassword,\r\n                message: t('Sotuvchi parolini tasdiqlash'),\r\n            },\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            if (sellerPassword !== sellerAgainPassword) {\r\n                universalToast(\r\n                    t(\r\n                        'Sotuvchining paroli bilan tasdiqlash paroli mos kelmadi'\r\n                    ),\r\n                    'warning'\r\n                )\r\n            } else {\r\n                const body = {\r\n                    login: sellerLogin,\r\n                    firstname: sellerName,\r\n                    lastname: sellerSurname,\r\n                    fathername: user.lastname,\r\n                    phone: sellerNumber,\r\n                    password: sellerPassword,\r\n                    type: 'Seller',\r\n                    user: user._id,\r\n                }\r\n                dispatch(addSeller(body))\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e && e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: sellerName,\r\n                message: t('Sotuvchi ismi'),\r\n            },\r\n            {\r\n                value: sellerSurname,\r\n                message: t('Sotuvchi familiyasi'),\r\n            },\r\n            {\r\n                value: sellerNumber,\r\n                message: t('Sotuvchi telefon raqami'),\r\n            },\r\n            {\r\n                value: sellerLogin,\r\n                message: t('Sotuvchi logini'),\r\n            },\r\n            {\r\n                value: sellerPassword,\r\n                message: t('Sotuvchi paroli'),\r\n            },\r\n            {\r\n                value: sellerAgainPassword,\r\n                message: t('Sotuvchi parolini tasdiqlash'),\r\n            },\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            if (sellerPassword !== sellerAgainPassword) {\r\n                universalToast(\r\n                    t(\r\n                        'Sotuvchining paroli bilan tasdiqlash paroli mos kelmadi'\r\n                    ),\r\n                    'warning'\r\n                )\r\n            } else {\r\n                const body = {\r\n                    _id: currentSeller._id,\r\n                    login: sellerLogin,\r\n                    firstname: sellerName,\r\n                    lastname: sellerSurname,\r\n                    fathername: user.lastname,\r\n                    phone: sellerNumber,\r\n                    password: sellerPassword,\r\n                    type: 'Seller',\r\n                    user: user._id,\r\n                }\r\n                dispatch(updateSeller(body))\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setSellerName('')\r\n        setSellerSurname('')\r\n        setSellerNumber('')\r\n        setSellerLogin('')\r\n        setSellerPassword('')\r\n        setSellerAgainPassword('')\r\n    }\r\n\r\n    const handleEditSeller = (seller) => {\r\n        clearForm()\r\n        setCurrentSeller(seller)\r\n        setStickForm(true)\r\n        setSellerName(seller.firstname)\r\n        setSellerSurname(seller.lastname)\r\n        setSellerNumber(seller.phone)\r\n        setSellerLogin(seller.login)\r\n    }\r\n\r\n    const linkToSellerReports = (id) => {\r\n        navigate(`/hamkorlar/sotuvchilar/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (errorSellings) {\r\n            universalToast(errorSellings, 'error')\r\n            dispatch(clearErrorSellers())\r\n        }\r\n        if (successAddSelling) {\r\n            successAddSellerMessage()\r\n            dispatch(clearSuccessAddSeller())\r\n            clearForm()\r\n        }\r\n        if (successUpdateSelling) {\r\n            successUpdateSellerMessage()\r\n            dispatch(clearSuccessUpdateSeller())\r\n            setStickForm(false)\r\n            clearForm()\r\n            setCurrentSeller('')\r\n        }\r\n    }, [dispatch, errorSellings, successAddSelling, successUpdateSelling])\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getSellers({\r\n                startDate,\r\n                endDate,\r\n            })\r\n        )\r\n    }, [dispatch, startDate, endDate])\r\n\r\n    useEffect(() => {\r\n        setData(sellers)\r\n    }, [sellers])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <form\r\n                className={`unitFormStyle  ${\r\n                    stickyForm && 'stickyForm'\r\n                } flex gap-[1.25rem] bg-background flex-col mainPadding transition ease-linear duration-200`}\r\n            >\r\n                <div className='exchangerate-style w-full'>\r\n                    <FieldContainer\r\n                        value={sellerName}\r\n                        onChange={(e) => {\r\n                            setSellerName(e.target.value)\r\n                        }}\r\n                        label={t('Ismi')}\r\n                        placeholder={t('misol: Jasurbek')}\r\n                        maxWidth={'w-[21.75rem]'}\r\n                        type={'text'}\r\n                        border={true}\r\n                        onKeyPress={``}\r\n                    />\r\n                    <FieldContainer\r\n                        value={sellerSurname}\r\n                        onChange={(e) => {\r\n                            setSellerSurname(e.target.value)\r\n                        }}\r\n                        label={t('Familiyasi')}\r\n                        placeholder={t('Toshev')}\r\n                        maxWidth={'w-[21.75rem]'}\r\n                        type={'text'}\r\n                        border={true}\r\n                        onKeyPress={() => {}}\r\n                    />\r\n                    <FieldContainer\r\n                        value={sellerNumber}\r\n                        onChange={(e) => {\r\n                            setSellerNumber(e.target.value)\r\n                        }}\r\n                        label={t('Telefon raqami')}\r\n                        placeholder={'+998 99 123 45 67'}\r\n                        type={'number'}\r\n                        border={false}\r\n                        onKeyPress={() => {}}\r\n                    />\r\n                </div>\r\n\r\n                <div className='exchangerate-style mt-[1.25rem]'>\r\n                    <FieldContainer\r\n                        value={sellerLogin}\r\n                        onChange={(e) => {\r\n                            setSellerLogin(e.target.value)\r\n                        }}\r\n                        label={t('Login')}\r\n                        placeholder={'123456'}\r\n                        maxWidth={'12.75rem'}\r\n                        type={'text'}\r\n                        border={true}\r\n                        onKeyPress={() => {}}\r\n                    />\r\n                    <FieldContainer\r\n                        value={sellerPassword}\r\n                        onChange={(e) => {\r\n                            setSellerPassword(e.target.value)\r\n                        }}\r\n                        label={t('Parol')}\r\n                        placeholder={'123456'}\r\n                        maxWidth={'12.75rem'}\r\n                        type={'text'}\r\n                        border={true}\r\n                        onKeyPress={() => {}}\r\n                    />\r\n                    <FieldContainer\r\n                        value={sellerAgainPassword}\r\n                        onChange={(e) => {\r\n                            setSellerAgainPassword(e.target.value)\r\n                        }}\r\n                        label={t('Parolni tasdiqlash')}\r\n                        placeholder={'123456'}\r\n                        maxWidth={'12.75rem'}\r\n                        type={'text'}\r\n                        border={false}\r\n                        onKeyPress={() => {}}\r\n                    />\r\n                    <div className={'flex gap-[1.25rem] grow w-[19.5rem]'}>\r\n                        <Button\r\n                            onClick={stickyForm ? handleEdit : addNewSeller}\r\n                            add={!stickyForm}\r\n                            edit={stickyForm}\r\n                            text={\r\n                                stickyForm\r\n                                    ? t(`Saqlash`)\r\n                                    : t('Yangi sotuvchi qo`shish')\r\n                            }\r\n                        />\r\n                        <Button onClick={clearForm} text={t('Tozalash')} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='font-normal text-[1.25rem] leading-[1.875rem] text-blue-900 mainPadding'>\r\n                <p>{t('Sotuvchilar')}</p>\r\n            </div>\r\n            <div className='flex w-full'>\r\n                <SearchForm\r\n                    filterBy={['startDate', 'endDate']}\r\n                    startDate={startDate}\r\n                    setStartDate={setStartDate}\r\n                    endDate={endDate}\r\n                    setEndDate={setEndDate}\r\n                />\r\n            </div>\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : sellers.length === 0 ? (\r\n                    <NotFind text={'Sotuvchilar mavjud emas'} />\r\n                ) : (\r\n                    <Table\r\n                        page={'seller'}\r\n                        data={data}\r\n                        currentPage={0}\r\n                        countPage={10}\r\n                        headers={headers}\r\n                        Edit={handleEditSeller}\r\n                        linkToSellerReports={linkToSellerReports}\r\n                        currency={currencyType}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Sellers\r\n"],"names":["_ref","onClick","text","add","edit","bell","count","_jsxs","className","concat","children","_jsx","BiBell","size","BiPlus","MdOutlineClear","isDisabled","t","useTranslation","disabled","IoPrint","SaveBtn","BsPaperclip","ConfirmBtn","_ref2","BsShieldFillCheck","value","onChange","placeholder","maxWidth","DatePicker","selected","placeholderText","dateFormat","IoCalendarNumber","star","label","type","select","options","border","onKeyUp","autoComplete","SelectInput","onSelect","Input","element","grow","password","_useState","useState","_useState2","_slicedToArray","currentShow","setCurrentShow","onWheel","e","target","blur","min","IoEye","IoEyeOff","someClasses","IoSearchOutline","filterByPackman","searchByPackmans","filterByTotal","searchByCode","searchById","searchByDelivererName","filterByDelivererName","filterByDelivererNameWhenPressEnter","searchByClientName","filterByClientName","filterByClientNameWhenPressEnter","filterById","filterByIdWhenPressEnter","filterByCode","filterByCodeAndNameAndCategoryWhenPressEnter","searchByName","filterByName","filterBy","searchByCategory","filterByCategory","numberOfChecks","setNumberOfChecks","clickPrintBtn","startDate","endDate","setStartDate","setEndDate","date","setDate","clickConfirmBtn","barcode","filterByBarcode","filterByBarcodeWhenPressEnter","searchByDirectorName","filterByDirectorName","filterByDirectorNameWhenPressEnter","searchByMarketName","filterByMarketName","searchBySellerName","filterBySellerName","filterBySellerNameWhenPressEnter","searchByMarketInn","filterByMarketInn","filterByMarketInnWhenPressEnter","filterByMarketNameWhenPressEnter","map","key","SelectForm","FilterButtons","FieldContainer","SearchInput","PrintBtn","Dates","chooseComponent","DropdownIcon","props","components","DropdownIndicator","_objectSpread","IoCaretDown","color","control","styles","_ref4","borderRadius","fontSize","fontWeight","padding","outline","boxShadow","cursor","height","backgroundColor","container","width","marginLeft","option","isFocused","isSelected","transition","overflow","menu","singleValue","_ref3","margin","valueContainer","display","alignItems","justifyContent","indicatorsContainer","dropdownIndicator","htmlFor","Select","CustomStyle","isSearchable","defaultValue","id","IndicatorSeparator","dispatch","useDispatch","navigate","useNavigate","_useSelector","useSelector","state","sellers","errorSellings","loading","successAddSelling","successUpdateSelling","currencyType","currency","user","login","headers","title","stickyForm","setStickForm","_useState3","_useState4","data","setData","_useState5","_useState6","sellerName","setSellerName","_useState7","_useState8","sellerSurname","setSellerSurname","_useState9","_useState10","sellerNumber","setSellerNumber","_useState11","_useState12","sellerLogin","setSellerLogin","_useState13","_useState14","sellerPassword","setSellerPassword","_useState15","_useState16","sellerAgainPassword","setSellerAgainPassword","_useState17","_useState18","currentSeller","setCurrentSeller","_useState19","Date","getDate","_useState20","_useState21","_useState22","clearForm","preventDefault","useEffect","universalToast","clearErrorSellers","successAddSellerMessage","clearSuccessAddSeller","successUpdateSellerMessage","clearSuccessUpdateSeller","getSellers","motion","section","initial","animate","exit","variants","open","opacity","collapsed","duration","ease","onKeyPress","Button","_checkEmptyString2","checkEmptyString","message","failed","warningEmptyInput","body","_id","firstname","lastname","fathername","phone","updateSeller","_checkEmptyString","addSeller","SearchForm","Spinner","length","NotFind","Table","page","currentPage","countPage","Edit","seller","linkToSellerReports"],"sourceRoot":""}