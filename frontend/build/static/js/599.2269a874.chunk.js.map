{"version":3,"file":"static/js/599.2269a874.chunk.js","mappings":"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","sources":["Pages/Clients/Clients.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer'\r\nimport Button from '../../Components/Buttons/BtnAddRemove'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport {motion} from 'framer-motion'\r\nimport {filter, map} from 'lodash'\r\nimport {\r\n    successAddSupplierMessage,\r\n    successDeleteSupplierMessage,\r\n    successUpdateSupplierMessage,\r\n    warningEmptyInput,\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {\r\n    addClients,\r\n    clearSearchedClients,\r\n    deleteClients,\r\n    getAllPackmans,\r\n    getClients,\r\n    getClientsByFilter,\r\n    updateClients,\r\n} from './clientsSlice'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nconst ClientsPage = () => {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n\r\n    const {packmans, clients, loading, searchedClients, total, totalSearched} =\r\n        useSelector((state) => state.clients)\r\n\r\n    const headers = [\r\n        {title: 'â„–', styles: 'w-[8%] text-left'},\r\n        // {title: t('Agent'), styles: 'w-[41%] text-left'},\r\n        {title: t('Mijoz'), styles: 'w-[41%] text-left'},\r\n        {title: 'Savdo', styles: 'w-[41%] text-left'},\r\n        {title: 'Sof foyda', styles: 'w-[41%] text-left'},\r\n        {title: '', styles: 'w-[8%] text-left'},\r\n    ]\r\n\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(\r\n            new Date().getFullYear(),\r\n            new Date().getMonth(),\r\n            new Date().getDate()\r\n        )\r\n    )\r\n    const [endDate, setEndDate] = useState(new Date())\r\n\r\n    // states\r\n    const [packmanOptions, setPackmanOptions] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [searchedData, setSearchedData] = useState([])\r\n    const [clientName, setClientName] = useState('')\r\n    const [packman, setPackman] = useState(null)\r\n    const [packmanId, setPackmanId] = useState(null)\r\n    const [currentClient, setCurrentClient] = useState('')\r\n    const [deletedCLients, setDeletedClients] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [printedSelling, setPrintedSelling] = useState(null)\r\n    const [modalBody, setModalBody] = useState(null)\r\n    // modal toggle\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            setDeletedClients(null)\r\n        }, 500)\r\n    }\r\n\r\n    // handle change of input\r\n    const handleChangeClientName = (e) => {\r\n        setClientName(e.target.value)\r\n    }\r\n    // table edit and delete\r\n    const handleEditClients = (client) => {\r\n        setPackman(\r\n            client.packman\r\n                ? {label: client.packman.name, value: client.packman._id}\r\n                : ''\r\n        )\r\n        setClientName(client.name || '')\r\n        setCurrentClient(client)\r\n        setStickyForm(true)\r\n    }\r\n\r\n    const handleDeleteClient = (client) => {\r\n        setDeletedClients(client)\r\n        setModalBody('approve')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const handlePrint = (sale) => {\r\n        setModalBody('allChecks')\r\n        setPrintedSelling(sale)\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const handleClickApproveToDelete = () => {\r\n        const body = {\r\n            name: deletedCLients.name,\r\n            _id: deletedCLients._id,\r\n            packman: deletedCLients.packman,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n        }\r\n        dispatch(deleteClients(body)).then(({error}) => {\r\n            if (!error) {\r\n                clearForm()\r\n                successDeleteSupplierMessage()\r\n            }\r\n        })\r\n        toggleModal()\r\n    }\r\n    // handle submit of inputs\r\n    const addNewClients = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: clientName,\r\n                message: t('Mijoz ismi'),\r\n            },\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: clientName,\r\n                packman: (packman && packman.value) || null,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(addClients(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    successAddSupplierMessage()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: clientName,\r\n                message: t('Mijoz ismi'),\r\n            },\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: clientName,\r\n                _id: currentClient._id,\r\n                packman: (packman && packman.value) || null,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(updateClients(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    successUpdateSupplierMessage()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setClientName('')\r\n        setPackman(null)\r\n        setStickyForm(false)\r\n    }\r\n\r\n    // filter by packman\r\n    const filterByPackman = ({value}) => {\r\n        setPackmanId(value)\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle change of search inputs\r\n    const filterByClientName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        if (searchedData.length > 0 || totalSearched > 0)\r\n            dispatch(clearSearchedClients())\r\n        if (valForSearch === '') {\r\n            setData(clients)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredClients = filter(clients, (client) => {\r\n                return client.name.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredClients)\r\n            setFilteredDataTotal(filteredClients.length)\r\n        }\r\n    }\r\n\r\n    const filterByNameWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(getClientsByFilter(body))\r\n        }\r\n    }\r\n\r\n    const handleChangeOptions = (e) => {\r\n        setPackman(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPackmans())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate,\r\n            endDate,\r\n            search: {\r\n                client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                packman: packmanId,\r\n            },\r\n        }\r\n        dispatch(getClients(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, showByTotal, currentPage, startDate, endDate, packmanId])\r\n    useEffect(() => {\r\n        setData(clients)\r\n    }, [clients])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n    useEffect(() => {\r\n        setSearchedData(searchedClients)\r\n    }, [searchedClients])\r\n    useEffect(() => {\r\n        const options = map(packmans, (packman) => {\r\n            return {label: packman.name, value: packman._id}\r\n        })\r\n        setPackmanOptions(options)\r\n    }, [packmans])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <UniversalModal\r\n                headerText={`${deletedCLients && deletedCLients.name} ${t(\r\n                    'ismli mijozni o`chirishni tasdiqlaysizmi?'\r\n                )}`}\r\n                title={t('O`chirilgan mijozni tiklashning imkoni mavjud emas!')}\r\n                toggleModal={toggleModal}\r\n                body={modalBody}\r\n                approveFunction={handleClickApproveToDelete}\r\n                isOpen={modalVisible}\r\n                printedSelling={printedSelling}\r\n            />\r\n            <form\r\n                className={`flex gap-[1.25rem] bg-background flex-col mainPadding transition ease-linear duration-200 ${\r\n                    stickyForm && 'stickyForm'\r\n                }`}\r\n            >\r\n                <div className='supplier-style'>\r\n                    <FieldContainer\r\n                        value={packman}\r\n                        onChange={handleChangeOptions}\r\n                        label={t('Agentni tanlang')}\r\n                        placeholder={t('misol: Dilso`z')}\r\n                        select={true}\r\n                        options={packmanOptions}\r\n                        maxWidth={'w-[21rem]'}\r\n                        border={true}\r\n                    />\r\n\r\n                    <FieldContainer\r\n                        value={clientName}\r\n                        label={t('Mijoz ismi')}\r\n                        placeholder={t('misol: Navro`z')}\r\n                        maxWidth={'w-[21rem]'}\r\n                        type={'string'}\r\n                        onChange={handleChangeClientName}\r\n                    />\r\n                    <div className={'flex gap-[1.25rem] grow w-[18.3125rem]'}>\r\n                        <Button\r\n                            add={!stickyForm}\r\n                            edit={stickyForm}\r\n                            text={\r\n                                stickyForm\r\n                                    ? t(`Saqlash`)\r\n                                    : t('Yangi agent qo`shish')\r\n                            }\r\n                            onClick={stickyForm ? handleEdit : addNewClients}\r\n                        />\r\n                        <Button onClick={clearForm} text={t('Tozalash')} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className='pagination-supplier mainPadding'>\r\n                <p className='supplier-title'>{t('Mijozlar')}</p>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <SearchForm\r\n                filterBy={[\r\n                    'total',\r\n                    'startDate',\r\n                    'endDate',\r\n                    'clientName',\r\n                    'select',\r\n                ]}\r\n                filterByPackman={filterByPackman}\r\n                filterByTotal={filterByTotal}\r\n                filterByClientNameWhenPressEnter={filterByNameWhenPressEnter}\r\n                filterByDelivererNameWhenPressEnter={filterByNameWhenPressEnter}\r\n                searchByClientName={searchByName}\r\n                filterByClientName={filterByClientName}\r\n                startDate={startDate}\r\n                endDate={new Date(endDate)}\r\n                setStartDate={setStartDate}\r\n                setEndDate={setEndDate}\r\n                searchByPackmans={[\r\n                    {\r\n                        label: 'Barchasi',\r\n                        value: null,\r\n                    },\r\n                    ...packmanOptions,\r\n                ]}\r\n            />\r\n\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Mijozlar mavjud emas')} />\r\n                ) : (\r\n                    <Table\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        page={'client'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        Edit={handleEditClients}\r\n                        Delete={handleDeleteClient}\r\n                        Print={handlePrint}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default ClientsPage\r\n"],"names":["t","useTranslation","dispatch","useDispatch","_useSelector","useSelector","state","clients","packmans","loading","searchedClients","total","totalSearched","headers","title","styles","_useState","useState","Date","getFullYear","getMonth","getDate","_useState2","_slicedToArray","startDate","setStartDate","_useState3","_useState4","endDate","setEndDate","_useState5","_useState6","packmanOptions","setPackmanOptions","_useState7","_useState8","data","setData","_useState9","_useState10","searchedData","setSearchedData","_useState11","_useState12","clientName","setClientName","_useState13","_useState14","packman","setPackman","_useState15","_useState16","packmanId","setPackmanId","_useState17","_useState18","currentClient","setCurrentClient","_useState19","_useState20","deletedCLients","setDeletedClients","_useState21","_useState22","modalVisible","setModalVisible","_useState23","_useState24","stickyForm","setStickyForm","_useState25","_useState26","showByTotal","setShowByTotal","_useState27","_useState28","currentPage","setCurrentPage","_useState29","_useState30","filteredDataTotal","setFilteredDataTotal","_useState31","_useState32","searchByName","setSearchByName","_useState33","_useState34","printedSelling","setPrintedSelling","_useState35","_useState36","modalBody","setModalBody","toggleModal","setTimeout","clearForm","e","preventDefault","filterByNameWhenPressEnter","key","body","countPage","search","client","replace","trim","getClientsByFilter","useEffect","getAllPackmans","getClients","options","map","label","name","value","_id","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","headerText","concat","approveFunction","deleteClients","then","_ref","error","successDeleteSupplierMessage","isOpen","className","FieldContainer","onChange","placeholder","select","maxWidth","border","type","target","Button","add","edit","text","onClick","_checkEmptyString2","checkEmptyString","message","failed","warningEmptyInput","updateClients","_ref3","successUpdateSupplierMessage","_checkEmptyString","addClients","_ref2","successAddSupplierMessage","Pagination","Number","totalDatas","SearchForm","filterBy","filterByPackman","_ref4","filterByTotal","_ref5","filterByClientNameWhenPressEnter","filterByDelivererNameWhenPressEnter","searchByClientName","filterByClientName","val","valForSearch","toLowerCase","length","clearSearchedClients","filteredClients","filter","includes","searchByPackmans","_toConsumableArray","Spinner","NotFind","Table","page","Edit","Delete","Print","sale"],"sourceRoot":""}