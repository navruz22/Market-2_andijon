{"version":3,"file":"static/js/6779.cdf2831c.chunk.js","mappings":"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","sources":["Pages/Orders/SendingOrders/Routes/Orders.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Table from '../../../../Components/Table/Table'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Pagination from '../../../../Components/Pagination/Pagination'\r\nimport SearchForm from '../../../../Components/SearchForm/SearchForm'\r\nimport {\r\n    clearSearchedOrders,\r\n    getOrders,\r\n    getOrdersByFilter,\r\n} from '../Slices/ordersSlice.js'\r\nimport Spinner from '../../../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../../../Components/NotFind/NotFind.js'\r\nimport {filter} from 'lodash'\r\nimport UniversalModal from '../../../../Components/Modal/UniversalModal.js'\r\n\r\nfunction Orders() {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const {orders, searchedOrders, count, searchedTotal, loading} = useSelector(\r\n        (state) => state.orders\r\n    )\r\n    const [data, setData] = useState(orders)\r\n\r\n    const dispatch = useDispatch()\r\n    const headers = [\r\n        {title: 'â„–'},\r\n        {title: 'Sana'},\r\n        {\r\n            title: \"Do'kon nomi\",\r\n        },\r\n        {\r\n            title: 'INN',\r\n            filter: '',\r\n        },\r\n        {title: 'ID', filter: ''},\r\n        {title: 'Maxsulot turi', filter: ''},\r\n        {\r\n            title: 'Umumiy narxi',\r\n            filter: '',\r\n        },\r\n        {title: 'Tahrirlash'},\r\n        {\r\n            title: 'Holati',\r\n            filter: '',\r\n        },\r\n    ]\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(count)\r\n    const [searchedData, setSearchedData] = useState(searchedOrders)\r\n    const [searchedtotal, setSearchedtotal] = useState(searchedTotal)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [searchById, setSearchById] = useState('')\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(new Date().getFullYear(), new Date().getMonth(), 1, 0, 0, 0)\r\n    )\r\n    const [endDate, setEndDate] = useState(new Date())\r\n    const [printedOrder, setPrintedOrder] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [modalBody, setModalBody] = useState(null)\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setPrintedOrder(null)\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    const filterByMarketName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || searchedtotal > 0) &&\r\n            dispatch(clearSearchedOrders())\r\n        if (valForSearch === '') {\r\n            setData(orders)\r\n            setFilteredDataTotal(count)\r\n        } else {\r\n            const filteredProducts = filter(orders, (market) => {\r\n                return market.sender.name.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterById = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchById(val)\r\n        ;(searchedData.length > 0 || searchedtotal > 0) &&\r\n            dispatch(clearSearchedOrders())\r\n        if (valForSearch === '') {\r\n            setData(orders)\r\n            setFilteredDataTotal(count)\r\n        } else {\r\n            const filteredProducts = filter(orders, (market) => {\r\n                return market.id.toString().includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByMarketNameAndInnWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                startDate: startDate.toISOString(),\r\n                endDate: endDate.toISOString(),\r\n                search: {\r\n                    id: searchById,\r\n                    inn: '',\r\n                    name: searchByName,\r\n                },\r\n            }\r\n            dispatch(getOrdersByFilter(body))\r\n        }\r\n    }\r\n\r\n    const handleClickPrint = (order) => {\r\n        setModalBody('checkOrder')\r\n        setPrintedOrder(order)\r\n        setModalVisible(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate: startDate.toISOString(),\r\n            endDate: endDate.toISOString(),\r\n            search: {\r\n                id: '',\r\n                inn: '',\r\n                name: '',\r\n            },\r\n        }\r\n        dispatch(getOrders(body))\r\n    }, [currentPage, showByTotal, startDate, endDate, dispatch])\r\n    useEffect(() => {\r\n        setData(orders)\r\n    }, [orders])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(count)\r\n    }, [count])\r\n    useEffect(() => {\r\n        setSearchedData(searchedOrders)\r\n    }, [searchedOrders])\r\n    useEffect(() => {\r\n        setSearchedtotal(searchedTotal)\r\n    }, [searchedTotal])\r\n\r\n    return (\r\n        <section>\r\n            <div className='pagination mainPadding'>\r\n                <p className='flex items-center'>Ro'yxatlar</p>\r\n                {(filteredDataTotal !== 0 || searchedtotal !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={searchedtotal || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <UniversalModal\r\n                order={printedOrder}\r\n                currency={currencyType}\r\n                body={modalBody}\r\n                isOpen={modalVisible}\r\n                toggleModal={toggleModal}\r\n            />\r\n            <SearchForm\r\n                filterBy={['total', 'startDate', 'endDate', 'id', 'marketName']}\r\n                endDate={endDate}\r\n                startDate={startDate}\r\n                setStartDate={setStartDate}\r\n                setEndDate={setEndDate}\r\n                filterByTotal={filterByTotal}\r\n                filterByMarketName={filterByMarketName}\r\n                filterById={filterById}\r\n                filterByIdWhenPressEnter={\r\n                    filterByMarketNameAndInnWhenPressEnter\r\n                }\r\n                filterByMarketNameWhenPressEnter={\r\n                    filterByMarketNameAndInnWhenPressEnter\r\n                }\r\n            />\r\n            <div className='tablePadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={\"Ro'yxat mavjud emas...\"} />\r\n                ) : (\r\n                    <Table\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        currentPage={currentPage}\r\n                        currency={currencyType}\r\n                        countPage={showByTotal}\r\n                        page={'registerOrder'}\r\n                        headers={headers}\r\n                        Print={handleClickPrint}\r\n                        // addPlus={addPlus}\r\n                        // Sort={filterData}\r\n                        // sortItem={sorItem}\r\n                    />\r\n                )}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n"],"names":["currencyType","useSelector","state","currency","_useSelector2","orders","searchedOrders","count","searchedTotal","loading","_useState","useState","_useState2","_slicedToArray","data","setData","dispatch","useDispatch","_useState3","_useState4","filteredDataTotal","setFilteredDataTotal","_useState5","_useState6","searchedData","setSearchedData","_useState7","_useState8","searchedtotal","setSearchedtotal","_useState9","_useState10","showByTotal","setShowByTotal","_useState11","_useState12","currentPage","setCurrentPage","_useState13","_useState14","searchByName","setSearchByName","_useState15","_useState16","searchById","setSearchById","_useState17","Date","getFullYear","getMonth","_useState18","startDate","setStartDate","_useState19","_useState20","endDate","setEndDate","_useState21","_useState22","printedOrder","setPrintedOrder","_useState23","_useState24","modalVisible","setModalVisible","_useState25","_useState26","modalBody","setModalBody","filterByMarketNameAndInnWhenPressEnter","e","key","body","countPage","toISOString","search","id","inn","name","getOrdersByFilter","useEffect","getOrders","_jsxs","children","className","_jsx","Pagination","Number","totalDatas","UniversalModal","order","isOpen","toggleModal","SearchForm","filterBy","filterByTotal","_ref","value","filterByMarketName","val","target","valForSearch","toLowerCase","replace","trim","length","clearSearchedOrders","filteredProducts","filter","market","sender","includes","filterById","toString","filterByIdWhenPressEnter","filterByMarketNameWhenPressEnter","Spinner","NotFind","text","Table","page","headers","title","Print"],"sourceRoot":""}